<?php
function m6connect_hcfm_menu() {
  $items ['hcfm/test'] = array (
    'title' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('test_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/asset'] = array (
    'title' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/work_order'] = array (
    'title' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_work_order_add_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/add/work_order_summary'] = array (
    'title' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_work_order_summary_add_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items['hcfm/%/autotitle'] = array(
    'title' => 'asset class',
    'page arguments' => array(1), 
    'page callback' => 'hcfm_autotitle',
    'access arguments'=>array('access content'),
    'type'=>MENU_CALLBACK,
  );
  $items['hcfm/add/configure'] = array(
    'page callback' => 'hcfm_configure_container_content',
    'access callback' => '_is_m6_user_logged_in',
  );
  $items['hcfm/asset/archive'] = array(
    'page callback' => 'hcfm_asset_archive_container_content',
    'access callback' => '_is_m6_user_logged_in',
  );
  $items['hcfm/log/%/%'] = array(
    'page callback' => 'hcfm_asset_revision_log_content',
    'page arguments' => array(1,2,3),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,
  );
  $items ['hcfm/add/assetclass'] = array (
    'title' => t('Asset Class'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_assetclass_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/add/assetbrand'] = array (
    'title' => t('Asset Brand'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_assetbrand_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/add/assettype'] = array (
    'title' => t('Asset Type'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_assettype_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/add/assetfacility'] = array (
    'title' => t('Asset Facility'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_assetfacility_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/add/assetriskrank'] = array (
    'title' => t('Asset Risk Rank'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_asset_add_assetriskrank_form'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items ['hcfm/setting'] = array (
    'title' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c'),
    'access callback' => '_is_m6_user_logged_in',
  );
  $items['hcfm/setting'] = array(
    'title' => 'Hcfm Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcfm_type_settings_form'),
    'access callback' => 'hcfm_type_settings_access_callback',
  );
  $items['hcfm-node-delete/%ctools_js/%'] = array(
    'page callback' => 'hcfm_node_delete_custom_callback', 
    'page arguments' => array( 1,2 ), 
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK, 
  );
  $items['hcfm-action/%/%/%/%ctools_js'] = array(
    'page callback' => 'hcfm_node_action_callback', 
    'page arguments' => array( 1,2,3,4), 
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK, 
  );
  $items['hcfm-invite-action/%/%/%ctools_js'] = array(
    'page callback' => 'hcfm_invite_action_callback', 
    'page arguments' => array( 1,2,3), 
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK, 
  );
  $items['get-facility-list/%'] = array(
    'page callback' => 'get_facility_option_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-facility-list-data/%'] = array(
    'page callback' => 'get_facility_list_data_by_facility_nid_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-floor-list-data/%'] = array(
    'page callback' => 'get_floor_list_data_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-facility-region-data/%'] = array(
    'page callback' => 'get_facility_region_data_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-asset-list-facilityid/%'] = array(
    'page callback' => 'get_asset_list_by_facilityid_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-asset-subsystem/%'] = array(
    'page callback' => '_get_asset_system_subsystem',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-state-list-countrycode/%'] = array(
    'page callback' => 'get_state_by_countrycode_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-locationdata/%/%'] = array(
    'page callback' => 'get_location_data_callback',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-locationdata-compare/%/%'] = array(
    'page callback' => 'get_location_compare_data_callback',
    'page arguments' => array(1,2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,  
  );
  $items['get-locationdata-country/%/%'] = array(
    'page callback' => 'get_location_data_country_callback',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-company-city/%/%'] = array(
    'page callback' => 'get_company_city_by_country_state',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-location-address/%/%'] = array(
    'page callback' => 'get_location_address',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-company-list-countrystatecity/%/%/%'] = array(
    'page callback' => 'get_company_list_by_country_state_city',
    'page arguments' => array(1,2,3),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-company-user-comnid/%'] = array(
    'page callback' => 'get_company_users_by_comnid',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-workorderdata/%/%'] = array(
    'page callback' => 'get_workorder_data_callback',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );

  $items['hcfm/dashboardconfigure-final/%'] = array(   
    'page arguments' => array(2),
    'page callback' => 'hcfm_dashboard_configure_final',
    'file' => 'includes/m6connect_hcfm.inc',
    'access callback' => '_is_m6_user_logged_in',
  ); 
  $items['hcfm/dashboard4'] = array(
    'page callback' => 'custom_hcfm_dashboard4_section_layout',
    'file' => 'includes/m6connect_hcfm.inc',
    'access callback' => '_is_m6_user_logged_in',
  ); 
  $items['hcfm/dashboard/configure/%ctools_js'] = array(    
    'page arguments' => array(3),    
    'page callback' => 'custom_hcfm_dashboard_configure_callback',    
    'access callback' => '_is_m6_user_logged_in',
    'file' => 'includes/m6connect_hcfm.inc',
    'type' => MENU_CALLBACK,
  );
  $items['hcfmdashtilerender/%/%/%/%ctools_js'] = array(        
    'page callback' => 'hcfmdashtile_render_callback',
    'page arguments' => array(1,2,3,4),
    'access arguments' => array('access content'),
    'access callback' => '_is_m6_user_logged_in',
    'file' => 'includes/m6connect_hcfm.inc',
    
  );
  $items['hcfm/dashboardconfigure-get'] = array(   
    'page callback' => 'hcfm_dashboard_configure_get',
    'file' => 'includes/m6connect_hcfm.inc',
    'access callback' => '_is_m6_user_logged_in',
  );
  $items['hcfm/assetlist/%'] = array(   
    'page callback' => 'hcfm_assetlist_by_gusercom_get', 
    'page arguments' => array(2),
    'access callback' => '_is_m6_user_logged_in',   
  );
  $items['get-facility-floordata/%'] = array(
    'page callback' => 'get_facility_floor_data_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['get-zone-floorlist/%'] = array(
    'page callback' => 'get_zone_floor_list_callback',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['example/my-chart'] = array(    
    'title' => 'Hcfm Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_chart'),
    //'access callback' => 'hcfm_type_settings_access_callback',
    'access callback' => '_is_m6_user_logged_in',
    'file' => 'includes/m6connect_hcfm_chart.inc',
    'type' => MENU_CALLBACK,
  );
  $items['hcfm-update-image-reove/%/%'] = array(
    'page callback' => 'hcfm_update_image_remove_callback',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['hcfmpeople/invite/users/%'] = array(
    'title' => t(''),
    'page callback' => 'm6connect_hcfm_invite_users',
    'page arguments' => array(3),
    'access callback' => 'hcfm_people_section_invite_access_callback',   
    'type' => MENU_CALLBACK,
  );
  $items['hcfmpeople/invitelist/users/%'] = array(
    'title' => t(''),
    'page callback' => 'm6connect_hcfm_invite_list_users',
    'page arguments' => array(3),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,
  );
  $items['hcfmpeople/member/users/%'] = array(
    'title' => t(''),
    'page callback' => 'm6connect_hcfm_member_list_users',
    'page arguments' => array(3),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,
  );
  $items['hcfmpeople/invite/users/submit'] = array(
    'title' => t(''),
    'page callback' => 'm6connect_hcfm_invite_users_submit',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['hcfm-switch-dashboard/%/%/%ctools_js'] = array(
    'title' => 'switch-dashboard',
    'page callback' => 'm6connect_hcfm_dashboard_switch_dashboard',
    'page arguments' => array(1, 2, 3),
    'access callback' => TRUE,
    'modal' => TRUE,
  );
  $items['hcfm-tile-configure/%/%'] = array(
    'page callback' => 'hcfm_dashboard_tile_configure',
    'page arguments' => array(1,2),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['hcfm-tile-configure/retrive'] = array(
    'page callback' => 'get_hcfm_dashboard_tile_configure',
    'page arguments' => array(1),
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,  
  );
  $items['hcfm-dash-compare/%/%/%ctools_js'] = array(
    'page callback' => 'hcfm_dash_compare_callback', 
    'page arguments' => array( 1,2,3), 
    'access callback' => '_is_m6_user_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'includes/m6connect_hcfm.inc',
  );
  
  return $items;
}


function hcfm_user_load($uid){
  if(isset($uid) && !empty($uid)){
    return user_load($uid);
  }
}

function m6connect_hcfm_views_query_alter(&$view, &$query) {
  global $user,$company;
  if ($view->name == 'hcfm_statuses_stream') {
    $ic_or = db_or();
    $ic_or->condition('statuses.recipient', $view->args[0], '=')->condition('statuses.sender', $view->args[0], '=');    
    $query->where[1]['conditions'][1]['field'] = $ic_or;
  } 
}

function m6connect_hcfm_init(){
  global $d8base_url;
  $d8base_url = 'http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com';  
  $current_path = current_path();
  if (strpos($current_path,'hcfm')!==FALSE) {
    drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/m6connect_hcfm.js');
  }
}

function m6connect_hcfm_form_alter(&$form, &$form_state, $form_id) {//
  global $user,$company;
  ctools_include('ajax');
  ctools_include('modal');
  switch ($form_id) {

  }
}

function m6connect_hcfm_node_presave($node){
 
}

function m6connect_hcfm_node_insert($node){
 
}




//node update in drupal8 in format:- hcfm_get_node_update('NodeType','NodeNid',array('status'=>0,'title'=>'asset'));
function hcfm_get_node_update($NodeType,$NodeNid,$NodeArr){
  $data = array('request'=>'request','nodeType'=>$NodeType,'nodeNid'=>$NodeNid,'nodeArr'=>$NodeArr);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com/hcfm/requesttype/update");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  $output01 = json_decode($output,TRUE);
  return $output01; 
}

function hcfm_get_node_create_or_update($nodeArr){
  if(isset($nodeArr) && !empty($nodeArr)){
  if(isset($nodeArr['nid']) && !empty($nodeArr['nid']) && is_numeric($nodeArr['nid'])){
    $node = node_load($nodeArr['nid']);
    foreach($nodeArr as $key=>$FieldValue){
    if(array_key_exists('fields',$FieldValue)){
      $node->$key = $FieldValue['fields'];
    }else{
      $node->$key = $FieldValue;
    }
    }
  }
  else{
    $node = new stdClass();
    foreach($nodeArr as $key=>$FieldValue){
    if(array_key_exists('fields',$FieldValue)){
      $node->$key = $FieldValue['fields'];
    }else{
      $node->$key = $FieldValue;
    }
    }  
  }
  }
  node_save($node);
}

function hcfm_get_node_load($NodeNid){
  $data = array('request'=>'request','nodeNid'=>$NodeNid);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com/hcfm/requesttype/load");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  //drup_msg($output);
  $output01 = json_decode($output,TRUE);
  return $output01; 
}

function hcfm_get_node_load_item($NodeNid,$NodeItem='',$full=FALSE){
  global $d8base_url;
  $OutputReturn = '';
  $data = array('request'=>'request','nodeNid'=>$NodeNid,'nodeItem'=>$NodeItem);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $d8base_url."/hcfm/requesttype/loaditem");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  //drup_msg($output);
  $output01 = json_decode($output,TRUE);
  if(!$full){
    foreach($output01[0] as $key=>$delta){
      $OutputReturn = $delta;
    }
  }
  else{
    $OutputReturn = $output01; 
  }
  return $OutputReturn;
}

function hcfm_get_node_delete($NodeNid){
  global $d8base_url;
  $data = array('request'=>'request','nodeNid'=>$NodeNid);
  //drup_msg($data);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com/hcfm/requesttype/delete");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  //drup_msg($output);
  $output01 = json_decode($output,TRUE);
  return $output01; 
}

function hcfm_nodenid_nodetitle_by_node_type($node_type,$Cnid='',$Uid=''){
  $NidTitle = array();  
  if(isset($node_type) && !empty($node_type)){
  if($node_type == 'user'){
    $NodeData = _get_hcfm_table_data_by_nodetype($node_type,$Cnid,$Uid);
    foreach($NodeData as $Delta){
    $NidTitle[$Delta->uid]=$Delta->name;
    }
  }
  else{   
    $NodeData = _get_hcfm_table_data_by_nodetype($node_type,$Cnid,$Uid);
    foreach($NodeData as $Delta){
    $NidTitle[$Delta->nid]=$Delta->title;
    }
  }
  }
  return $NidTitle;
}

function hcfm_autotitle($arr,$string = ''){
  global $user;
  $output = '';
  if(!empty($arr)){   
  if ($string !='') {
    $str = array('string'=>$string,'node_type'=>$arr);    
    $postData = json_encode($str);
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, "http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com/hcfm/requestntype");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
    curl_setopt($ch, CURLOPT_HEADER, false);  
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
      'Content-Type: application/json',                                                                                
      'Content-Length: ' . strlen($postData)                                                                       
    ));         
    // execute the request  
    $output = curl_exec($ch);
  }
  }
  $output01 = json_decode($output);
  drupal_json_output($output01);
  exit(); 
}

function _get_hcfm_table_data_by_nodetype($node_type,$Cnid='',$Uid=''){
  $output = '';  
  $cr_node_type = array('fm_location_region','fm_location_site','fm_facility_type','fm_facility_area_type','fm_facility','fm_location_location');
  if(isset($node_type) && !empty($node_type)){
    $result = '';
    if($params['node_type'] == 'user'){
    $query = db_select('users', 'u')
    ->fields('u')
    ->orderBy('uid', 'DESC');     
    }else{
    $query = db_select('node', 'n');
    if(in_array($node_type,$cr_node_type)){
      $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
      $query->fields('ficmty',array('field_cm_type_value'));
      $query->condition('ficmty.field_cm_type_value','hcfm','=');
    }
    $query->fields('n');
    $query->orderBy('n.nid', 'DESC');
    if(isset($Uid) && !empty($Uid) && $Uid != 0){
      $query->condition('n.uid', $Uid, '=');
    }
    if(isset($Cnid) && !empty($Cnid) && $Cnid != 0){
      $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
      $query->condition('ogm.gid', $Cnid, '=');
    }
    $query->condition('n.type', $node_type, '=');
    }   
    $output = $query->execute()->fetchAll();
  }
  return $output;
}

//required*** $NodeObj = array('NodeType'=>'asset'); 
//multipal  user use 'UserUidMulti'=array(1,2) in $NodeObj = array();
//multipal node use 'NodeNidMulti'=>array(1,2) in $NodeObj = array();
//single  user use 'UserUid'=2 in $NodeObj = array();
//single node use 'NodeNid'=>2 in $NodeObj = array();
//join field $JoinField = array('nfac-_target_id'=>'field_data_field_asset_class','nfasn-_value'=>'field_data_field_asset_number');
function _get_hcfm_db_request($NodeObj,$JoinField=''){
  $ReturnObj = '';
  //if($NodeObj['NodeType'] == 'asset'){
    $params = array('request'=>'request','NodeObj'=>$NodeObj,'JoinField'=>$JoinField );
  if(isset($params)&& !empty($params['request']) &&  isset($params['NodeObj']) && !empty($params['NodeObj'])){
    $NodeNid = (isset($params['NodeObj']['NodeNid'])?$params['NodeObj']['NodeNid']:'');
    $OgNodeNid = (isset($params['NodeObj']['OgNodeNid'])?$params['NodeObj']['OgNodeNid']:'');
    $OgUserUid = (isset($params['NodeObj']['OgUserUid'])?$params['NodeObj']['OgUserUid']:'');
    $OtherId = (isset($params['NodeObj']['OtherId'])?$params['NodeObj']['OtherId']:'');
    $NodeNidMulti = (isset($params['NodeObj']['NodeNidMulti'])?$params['NodeObj']['NodeNidMulti']:'');
    $UserUid = (isset($params['NodeObj']['UserUid'])?$params['NodeObj']['UserUid']:'');
    $UserUidMulti = (isset($params['NodeObj']['UserUidMulti'])?$params['NodeObj']['UserUidMulti']:'');
    $NodeType = (isset($params['NodeObj']['NodeType'])?$params['NodeObj']['NodeType']:'');
    $NodePlimit = (isset($params['NodeObj']['Plimit'])?$params['NodeObj']['Plimit']:'');
    $TableJoin = (isset($params['NodeObj']['TableJoin'])?$params['NodeObj']['TableJoin']:'');
    if(isset($NodeType) && !empty($NodeType)){
    
    if($TableJoin == 'TableJoin' && isset($params['NodeObj']['TableName']) && !empty($params['NodeObj']['TableName'])){
      $query= db_select($params['NodeObj']['TableName'], 'n');
      if(isset($params['NodeObj']['CFields']) && $params['NodeObj']['CFields'] == 'CFields'){
       $query->fields('n',$params['NodeObj']['CFieldsNames']); 
      }else{
        $query->fields('n');
      }
      if(isset($params['NodeObj']['TableRowId']) && !empty($params['NodeObj']['TableRowId']) && is_numeric($params['NodeObj']['TableRowId'])){
      $query->condition('n.id', $params['NodeObj']['TableRowId'], '=');
      }
    }
    else{
      $query= db_select('node', 'n');
      if($OgNodeNid && !empty($OgNodeNid)){
      $query->leftjoin('og_membership','nogm','nogm.etid=n.nid');     
      $query->condition('nogm.gid', $OgNodeNid, '=');
      }
      if($OgUserUid && !empty($OgUserUid)){
      $query->condition('n.uid', $OgUserUid, '=');
      }      
      $query->fields('n',array('nid','type','title','uid','status'));
      if(isset($params['JoinField']) && !empty($params['JoinField'])){
        foreach($params['JoinField'] as $fkey=>$fjoin){
          $field1 = str_replace("field_data_","",$fjoin);
          $field2 = explode('-',$fkey);
          $exField = $field1.$field2[1];
          $query->leftjoin($fjoin,$field2[0],$field2[0].'.entity_id=n.nid');
          $query->fields($field2[0],array($exField));     
        }
      }
    }
     
    if(isset($params['NodeObj']['addExpression']) && !empty($params['NodeObj']['addExpression']) && isset($params['NodeObj']['addExpression_value']) && !empty($params['NodeObj']['addExpression_value'])){
      $query->addExpression($params['NodeObj']['addExpression'],$params['NodeObj']['addExpression_value']); 
    }
    if(isset($OtherId) && !empty($OtherId) && array_key_exists('equal', $OtherId)){
      foreach($OtherId['equal'] as $OtherKey=>$OtherValue){     
      $query->condition('n.'.$OtherKey, $OtherValue, '=');    
      }
    }
    if(isset($OtherId) && !empty($OtherId) && array_key_exists('IN', $OtherId)){
      foreach($OtherId['IN'] as $OtherKey=>$OtherValue){      
      $query->condition('n.'.$OtherKey, $OtherValue, 'IN');   
      }
    }
    
    if($NodeType != 'NoType'){
      $query->condition('n.type', $NodeType, '=');
    }
    if($NodeNid){
      $query->condition('n.nid', $NodeNid, '=');
    }
    elseif($NodeNidMulti){
      $query->condition('n.nid', $NodeNidMulti, 'IN');
    }  
    if($UserUid){
          $query->condition('n.uid', $UserUid, '=');
        }
    elseif($UserUidMulti){
      $query->condition('n.uid', $UserUidMulti, 'IN');
    }
    if(isset($params['NodeObj']['OrderBy']) && !empty($params['NodeObj']['OrderBy'])){
      foreach($params['NodeObj']['OrderBy'] as $OrderBy=>$OrderWith){
      $query->orderBy($OrderBy, $OrderWith);
      }
    }
        
    if(isset($params['NodeObj']['Fetch']) && $params['NodeObj']['Fetch'] == 'fetchAssoc'){
      $ReturnObj = $query->execute()->$params['NodeObj']['Fetch']();
    }
    else if(isset($params['NodeObj']['Fetch']) && $params['NodeObj']['Fetch'] == 'fetchCol'){
      $ReturnObj = $query->execute()->$params['NodeObj']['Fetch']();
    }else if(isset($params['NodeObj']['Fetch']) && $params['NodeObj']['Fetch'] == 'fetchAllKeyed'){
      $ReturnObj = $query->execute()->$params['NodeObj']['Fetch']();
    }
    else if(isset($params['NodeObj']['Fetch']) && $params['NodeObj']['Fetch'] == 'fetchColumn'){
      $ReturnObj = $query->execute()->$params['NodeObj']['Fetch'](0);
    }else if(isset($NodePlimit) && !empty($NodePlimit) && empty($params['NodeObj']['Fetch'])){      
      $ReturnObj = $query->extend('PagerDefault')->limit($NodePlimit)->execute()->fetchAll();
    }
    else{
      $ReturnObj = $query->execute()->fetchAll();
    }
    }
    $postData = json_encode($ReturnObj);
      $ReturnObj = json_decode($postData ,TRUE);      
  }
  return $ReturnObj;
}

function _get_hcfm_db_request_two($NodeObj,$JoinField=''){
  global $d8base_url;
  $data = array('request'=>'request','NodeObj'=>$NodeObj,'JoinField'=>$JoinField );
  //drup_msg($data);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $d8base_url."/hcfm/dbrequesttwo");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  //drup_msg($output);
  $output01 = json_decode($output,TRUE);
  return $output01;
}

function _get_hcfm_db_request_three($NodeObj,$JoinField=''){
  global $d8base_url;
  $data = array('request'=>'request','NodeObj'=>$NodeObj,'JoinField'=>$JoinField );
  //drup_msg($data);
  $postData = json_encode($data);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $d8base_url."/hcfm/dbrequestthree");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  //drup_msg($output);
  $output01 = json_decode($output,TRUE);
  return $output01;
}
//*************** Get Data form Drupal8 function  end *****************//

function hcfm_menu_links_content(){
  $currentPath = current_path();
  $hcfmList = array(
  'hcfm/asset'=>'Asset',
  'hcfm/work_order'=>'Work Order',          
  );

 
  
  $output = '<ul class="list-unstyled list-inline custom-list hcfm-menu-links clearfix">';
  foreach($hcfmList as $menuPath => $label) {
    $class = ($currentPath == $menuPath)?' active':'';  
    $output .= '<li class="menu-item'.$class.'">'.l($label,$menuPath).'</li>';  
    }    
  $output .= '</ul>';
  return $output; 
}

function m6connect_hcfm_theme() {
  return array(
  'hcfm_type_theme'=> array(
    'render element' => 'form',
  ),
  'custom_hcfm_dashboard_configure_section' => array(
    'render element' => 'form',
  ),
  'preferred_vendors_theme'=> array(
    'render element' => 'form',
  ),
  'm6connect_hcfm_contents' => array(
    'arguments' => array('var1' => null),
    'template' => 'm6connect-hcfm-contents-invite',
    ),
  );
}

function hcfm_asset_add_form($form,$form_state){
  drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/m6connect_hcfm.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  global $user,$company;  
  $form['#attributes']['class'][] = 'chosentoselect'; 
  $SyearExtention =date('y');
  $SmonthExtention ='-'.date('m');
  $SdayExtention =date('j');
  $StimeExtention =date('his');
  $Sprefix = 'ASS'.$SdayExtention ;
  $Sserial = $Sprefix.' '.$StimeExtention .$SmonthExtention.$SyearExtention;
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="asset-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container2']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="asset-table">',
  '#suffix' => '</div>',
  );
  $form['main-container']['left-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-8','col-sm-8','col-xs-12','project-details-left')),
  '#weight' => 1,
  );  
  $form['main-container']['left-container']['left-main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#weight' => 10,
  );
  $form['main-container']['left-container']['left-main-container']['inner-full-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-full')),
  '#weight' => 11,
  );
  $form['main-container']['left-container']['left-main-container']['inner-left-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  ); 
  $form['main-container']['left-container']['left-main-container']['inner-middle-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-middle')),
  );
  $form['main-container']['left-container']['left-main-container']['inner-right-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-right')),
  );
  $form['main-container']['right-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-right')),
  '#weight' => 2,
  );  
  $form['main-container']['full-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-full',)),
  '#weight' => 3,
  );
  $form['prefix_suffix']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','project-details-right')),
  '#weight' => 2,
  );
  $form['main-container']['left-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-left')),
  '#weight' => 41,
  );  
  $form['main-container']['left-container1']['left-main-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#weight' => 42,
  );  
  $form['main-container']['left-container1']['left-main-container1']['inner-left-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  ); 
  $form['main-container']['left-container1']['left-main-container1']['inner-middle-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['left-container1']['left-main-container1']['inner-right-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['left-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-left')),
  '#weight' => 13,
  );  
  $form['main-container']['left-container2']['left-main-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#weight' => 14,
  '#prefix' => '<label>Location</label><div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;">',
  '#suffix' => '</div>',
  );
  $form['main-container']['left-container2']['left-main-container2']['inner-left-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  ); 
  $form['main-container']['left-container2']['left-main-container2']['inner-middle-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['left-container2']['left-main-container2']['inner-right-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['left-container3']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-left')),
  '#weight' => 11,
  );  
  $form['main-container']['left-container3']['left-main-container3']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#weight' => 12,
  '#prefix' => '<label>Asset Information</label><div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;">',
  '#suffix' => '</div>',
  );
  $form['main-container']['left-container3']['left-main-container3']['inner-left-container3']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  ); 
  $form['main-container']['left-container3']['left-main-container3']['inner-middle-container3']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['left-container3']['left-main-container3']['inner-right-container3']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','project-details-left')),
  );
  $form['main-container']['full-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-full',)),
  '#weight' => 52,
  );
  $form['main-container']['full-left-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','project-details-full',)),
  '#weight' => 51,
  );
  $form['main-container']['full-right-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','project-details-full',)),
  '#weight' => 51,
  );
  
  $form['main-container2']['full-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-full',)),
  '#weight' => 14,
  );
  $form['main-container']['left-container']['left-main-container']['inner-left-container']['asset_number'] = array (
  '#title' => t('Asset Number'),
  '#attributes' => array(
    'class'=> array(      
      'as-asset-number'
    )
  ),
  '#type' => 'textfield', 
  '#default_value' => $Sserial, 
  '#required' => TRUE,
  );
  $form['main-container']['left-container']['left-main-container']['inner-middle-container']['asset_manuafacturer'] = array(
  '#title' => t('Manufacturer'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-manuafacturer'
    )
  ), 
  '#type' => 'textfield', 
  );  
  $form['main-container']['left-container']['left-main-container']['inner-right-container']['asset_model_number'] = array(
  '#title' => ('Model Number'), 
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'as-asset-model-number'
    )
  ),  
  '#type' => 'textfield',
  );    
  $form['main-container']['left-container']['left-main-container']['inner-left-container']['asset_serial_number'] = array (
  '#title' => ('Serial Number'),  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'as-asset-serial-number'
    )
  ),  
  '#type' => 'textfield',
  );
  $form['main-container']['left-container']['left-main-container']['inner-middle-container']['asset_original_cost'] = array(
  '#title' => t('Original Cost'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-original-cost'
    )
  ),
  '#type' => 'textfield',
  );
  $form['main-container']['left-container']['left-main-container']['inner-right-container']['asset_replacement_cost'] = array(
  '#title' => t('Replacement Cost'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-replacement-cost'
    )
  ),
  '#type' => 'textfield',
  );
  
  $form['main-container']['left-container']['left-main-container']['inner-full-container']['asset_description'] = array (
  '#title' => ('Description'),  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'as-asset-description'
    )
  ),  
  '#type' => 'textfield',
  );
  $asset_system = hcfm_nodenid_nodetitle_by_node_type('fm_asset_system');
  $form['main-container']['left-container3']['left-main-container3']['inner-left-container3']['asset_system'] = array (
  '#title' => t('Asset System'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-system'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_system,
  '#empty_option' => t('- Select -'),
  );
    
  $asset_sub_system = hcfm_nodenid_nodetitle_by_node_type('fm_asset_sub_system');
  $form['main-container']['left-container3']['left-main-container3']['inner-middle-container3']['asset_sub_system'] = array(
  '#title' => t('Asset Sub System'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-sub-system'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_sub_system,
  '#empty_option' => t('- Select -'),
  );  
  $asset_device_type = hcfm_nodenid_nodetitle_by_node_type('fm_asset_device_type');
  $form['main-container']['left-container3']['left-main-container3']['inner-right-container3']['asset_device_type'] = array(
  '#title' => t('Device Type'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset_device_type'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_device_type,
  '#empty_option' => t('- Select -'),
  );  
  $form['main-container']['left-container3']['left-main-container3']['inner-left-container3']['asset_device'] = array(
  '#title' => t('Device'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset_device'
    )
  ),
  '#type' => 'textfield',
  );

  $fm_account_number = hcfm_nodenid_nodetitle_by_node_type('fm_account_number');
  $form['main-container']['left-container3']['left-main-container3']['inner-middle-container3']['asset_account_number'] = array(   
    '#title' => t('Account Number'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-account-number'
    )
  ),
  '#type' => 'select',
  '#options' => $fm_account_number,
  '#empty_option' => t('- Select -'),
  );
  $asset_status = hcfm_nodenid_nodetitle_by_node_type('fm_asset_status');
  $form['main-container']['left-container3']['left-main-container3']['inner-right-container3']['asset_status'] = array(   
    '#title' => t('Status'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-status'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_status,
  '#empty_option' => t('- Select -'),
  );
  $asset_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
  $form['main-container']['left-container2']['left-main-container2']['inner-left-container2']['asset_region'] = array(
  '#title' => t('Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-region'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_region,
  '#empty_option' => t('- Select -'),
  );
  $location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$company->nid,$user->uid);
  $form['main-container']['left-container2']['left-main-container2']['inner-middle-container2']['asset_site'] = array(
  '#title' => t('Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-site'
    )
  ),
  '#type' => 'select',
  '#options' => $location_site,
  '#empty_option' => t('- Select -'),
  
  );
  $asset_facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  $form['main-container']['left-container2']['left-main-container2']['inner-right-container2']['asset_facility'] = array(
  '#title' => t('Facility '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-facility'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_facility,
  '#empty_option' => t('- Select -'),
  );
  $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$company->nid,$user->uid);
  $form['main-container']['left-container2']['left-main-container2']['inner-left-container2']['asset_location'] = array(
  '#title' => t('Location '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-location'
    )
  ),
  '#type' => 'select',
  '#options' => $location_location,
  '#empty_option' => t('- Select -'),
  );
  $asset_risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  $form['main-container']['left-container1']['left-main-container1']['inner-left-container1']['asset_priority_rr'] = array (
  '#title' => t('Priority / RR'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-priority-rr'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_risk_rank,
  '#empty_option' => t('- Select -'),
  );  
  $form['main-container']['left-container1']['left-main-container1']['inner-middle-container1']['asset_capital_item'] = array(
  '#title' => t('Capital Item'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-capital-item'
    )
  ),
  '#type' => 'select',
  '#options' => array(
    'yes' => 'Yes',
    'no' => 'No'
  ),
  '#empty_option' => t('- Select -'),
  );
  $form['main-container']['left-container1']['left-main-container1']['inner-right-container1']['asset_life_cycle'] = array(
  '#title' => t('Life Cycle'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-life-cycle'
    )
  ),
  '#type' => 'textfield',
  );
  $form['main-container']['left-container1']['left-main-container1']['inner-left-container1']['asset_date_purchased'] = array(
  '#title' => t('Date Purchased'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-date-purchased'
    )
  ),
  '#type' => 'date_popup',
    '#date_format' => 'm-d-Y',
  '#date_label_position' => '',
  '#size' => 33,
  );
  $form['main-container']['left-container1']['left-main-container1']['inner-middle-container1']['asset_date_received'] = array(
  '#title' => t('Date Received'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-date-received'
    )
  ),
  '#type' => 'date_popup',
    '#date_format' => 'm-d-Y',
  '#date_label_position' => '',
  '#size' => 33,
  );
  
  
  $form['main-container']['left-container1']['left-main-container1']['inner-right-container1']['asset_date_sold'] = array(
  '#title' => t('Date Sold'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-date-sold'
    )
  ),
  '#type' => 'date_popup',
    '#date_format' => 'm-d-Y',
  '#date_label_position' => '',
  '#size' => 33,
  );  
  $form['prefix_suffix']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','project-details-right')),
  '#weight' => 2,
  );
  $form['asset_picture_container']['asset_picture_container_inner']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','project-details-right')),
  '#weight' => 2,
  '#prefix' => '<div class="picture-priview-inner">',
  '#suffix' => '</div>',
  ); 
  $form['main-container']['right-container']['asset_pictures'] = array(
  '#title' => t('Pictures'),
  '#type' => 'managed_file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-pictures'
    )
  ),
  '#upload_location' => 'public://hcfm/asset/', 
  '#prefix' => '<div class="project-details-border"><div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  '#field_prefix' => '<div class="picture-preview-out"></div>',
  );
  $form['main-container']['asset_picture_fid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-picture-fid'
    )
  ),  
  );
  $form['main-container']['asset_picture_url'] = array(
    '#type' => 'hidden',
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'asset-picture-url'
      )
    ),  
  );
  $form['main-container']['full-left-container1']['asset_comments'] = array(
  '#title' => t('Comments'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-comments'
    )
  ),
  '#type' => 'textarea',
  '#prefix' => '<div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;"><div class="clearfix form-item">',
  '#suffix' => '</div>',
  );

  $form['main-container']['full-left-container1']['asset_attachment_one'] = array(
  '#title' => t('Attachment'),
  '#type' => 'file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-attachment-one'
    )
  ),
  '#upload_location' => 'public://hcfm/asset/', 
    '#name' => 'attach1[]',
  '#field_prefix' => '<div class="hcfm-asset-image-preview"></div>',
  '#description' => t('Use CTRL + Click to choose multiple attachments.'),
    '#attributes' => array('multiple' => 'multiple'),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  );
  $form['main-container']['full-right-container1']['asset_warranty_information'] = array(
  '#title' => t('Warranty Information'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-warranty-information'
    )
  ),
  '#type' => 'textarea',
  '#prefix' => '<div class="project-details-border margin-bottom-10" style="border:1px solid; padding:5px;"><div class="clearfix form-item">',
  '#suffix' => '</div>',
  );

  $form['main-container']['full-right-container1']['asset_attachment_two'] = array(
  '#title' => t('Attachment'),
  '#type' => 'file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-attachment-two'
    )
  ),
  '#upload_location' => 'public://hcfm/asset/', 
    '#name' => 'attach2[]',
  '#field_prefix' => '<div class="hcfm-asset-image-preview"></div>',
  '#description' => t('Use CTRL + Click to choose multiple attachments.'),
    '#attributes' => array('multiple' => 'multiple'),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  );
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-user-uid'
    )
  ),
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-company-nid'
    )
  ),
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-node-nid'
    )
  ),  
  );
  $form['hcfmtype'] = array('#type' => 'value', '#value' => 'fm_asset');
  $form['main-container']['full-container1']['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Save'),  
  );
  $form['main-container']['full-container1']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-asset">',    
  );
  /*$next_scroll_page = theme ( 'pager_next', array (
      'text' => t ( 'next' ) 
  ) );*/
  $next_scroll_page = theme('pager', array('quantity', 10));
  $header = array('Asset Number','Description','Site','Risk Rank','Action');
  $JoinField = array('nfasn-_value'=>'field_data_field_asset_number','nfais-_value'=>'field_data_field_asset_in_status','nfade-_value'=>'field_data_field_asset_description'  ,'ndfasi-_target_id'=>'field_data_field_asset_site'  ,'ndfaprrr-_target_id'=>'field_data_field_asset_priority_rr');
  $table_data = hcfm_asset_table_content($user->uid,'fm_asset',$header,$JoinField,'fm_asset');
  $form['main-container2']['full-container2']['table_datiles'] = array(
    '#markup' => $table_data,
  );
  
  
  return $form;
  
}

function hcfm_asset_add_form_validate($form, &$form_state) { //drup_msg($form_state ['values']);
  $values = $form_state ['values'];
  
  if(isset($_FILES['attach1'])) {
  $fileCount1 = count($_FILES['attach1']['name']);
  for ($i = 0; $i < $fileCount1; $i++) {      
    $file1 = custom_file_save_upload($i, 'attach1',FILE_EXISTS_REPLACE);     
    if ($file1) {   
    if ($file_move1 = file_move($file1, 'public://hcfm/asset')) {
      $form_state['values']['asset_attachment_one'][$i] = $file_move1;
    } 
    }
  }
  }
  if(isset($_FILES['attach2'])) {
  $fileCount2 = count($_FILES['attach2']['name']);
  //pre('attach2');  
  for ($j = 0; $j < $fileCount2; $j++) {
    $file2 = custom_file_save_upload($j, 'attach2',FILE_EXISTS_REPLACE);
   //pre((array) $file2);
    if ($file2) {  
   // pre('file1'); 
    if ($file_move2 = file_move($file2, 'public://hcfm/asset')) {
      
      $form_state['values']['asset_attachment_two'][$j] = $file_move2;
    } 
    }
  }
  }
//pre($_FILES);
}

function hcfm_asset_add_form_submit($form,&$form_state){ //drup_msg($form_state['values'],1);
  global $user, $company;
  $values = $form_state['values'];
  if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
  $node = node_load($values['node_nid']);
    $node->title = $values['asset_description'];
  $node->uid = $user->uid;
  $node->og_group_ref['und'][0]['target_id'] = $company->nid;     
  $node->field_asset_number['und'][0]['value'] = $values['asset_number'];
  $node->field_asset_manuafacturer['und'][0]['value'] = $values['asset_manuafacturer'];
  $node->field_asset_model_number['und'][0]['value'] = $values['asset_model_number'];
  $node->field_asset_serial_number['und'][0]['value'] = $values['asset_serial_number'];
  if(isset($values['asset_system']) && !empty($values['asset_system']))
    $node->field_asset_system['und'][0]['target_id'] = $values['asset_system'];
    if(isset($values['asset_sub_system']) && !empty($values['asset_sub_system']))
    $node->field_asset_sub_system['und'][0]['target_id'] = $values['asset_sub_system'];
  if(isset($values['asset_device_type']) && !empty($values['asset_device_type']))
    $node->field_asset_device_type['und'][0]['target_id'] = $values['asset_device_type'];
  $node->field_asset_device['und'][0]['value'] = $values['asset_device'];
  if(isset($values['asset_account_number']) && !empty($values['asset_account_number']))
    $node->field_asset_account_number['und'][0]['target_id'] = $values['asset_account_number'];
  if(isset($values['asset_status']) && !empty($values['asset_status']))
    $node->field_asset_status['und'][0]['target_id'] = $values['asset_status'];
  if(isset($values['asset_priority_rr']) && !empty($values['asset_priority_rr']))
    $node->field_asset_priority_rr['und'][0]['target_id'] = $values['asset_priority_rr'];
  if(isset($values['asset_region']) && !empty($values['asset_region']))   
    $node->field_asset_region['und'][0]['target_id'] = $values['asset_region'];
  if(isset($values['asset_site']) && !empty($values['asset_site']))
    $node->field_asset_site['und'][0]['target_id'] = $values['asset_site'];
  if(isset($values['asset_facility']) && !empty($values['asset_facility']))
    $node->field_asset_facility['und'][0]['target_id'] = $values['asset_facility'];
  if(isset($values['asset_location']) && !empty($values['asset_location']))
    $node->field_asset_location['und'][0]['target_id'] = $values['asset_location'];
  $node->field_asset_date_purchased['und'][0]['value'] = $values['asset_date_purchased'];
  $node->field_asset_date_received['und'][0]['value'] = $values['asset_date_received'];
  $node->field_asset_date_sold['und'][0]['value'] = $values['asset_date_sold'];
  $node->field_asset_original_cost['und'][0]['value'] = $values['asset_original_cost'];
  $node->field_asset_replacement_cost['und'][0]['value'] = $values['asset_replacement_cost'];
  $node->field_asset_capital_item['und'][0]['value'] = $values['asset_capital_item'];
  $node->field_asset_life_cycle['und'][0]['value'] = $values['asset_life_cycle'];     
  $node->field_asset_description['und'][0]['value'] = $values['asset_description'];
  $node->field_asset_comments['und'][0]['value'] = $values['asset_comments'];
  $node->field_asset_warranty_information['und'][0]['value'] = $values['asset_warranty_information'];     
  $node->field_asset_status_list['und'][0]['value'] = 'asset';
  if(isset($values['asset_pictures']) && !empty($values['asset_pictures']))
    $node->field_asset_pictures['und'][0]['fid'] = $values['asset_pictures'];
  
  node_save($node);
  }else{
  $node = new stdClass();
  $node->type = 'fm_asset';
  $node->title = $values['asset_description'];
  $node->uid = $user->uid;
  $node->og_group_ref['und'][0]['target_id'] = $company->nid;     
  $node->field_asset_number['und'][0]['value'] = $values['asset_number'];
  $node->field_asset_manuafacturer['und'][0]['value'] = $values['asset_manuafacturer'];
  $node->field_asset_model_number['und'][0]['value'] = $values['asset_model_number'];
  $node->field_asset_serial_number['und'][0]['value'] = $values['asset_serial_number'];
  if(isset($values['asset_system']) && !empty($values['asset_system']))
    $node->field_asset_system['und'][0]['target_id'] = $values['asset_system'];
    if(isset($values['asset_sub_system']) && !empty($values['asset_sub_system']))
    $node->field_asset_sub_system['und'][0]['target_id'] = $values['asset_sub_system'];
  if(isset($values['asset_device_type']) && !empty($values['asset_device_type']))
    $node->field_asset_device_type['und'][0]['target_id'] = $values['asset_device_type'];
  $node->field_asset_device['und'][0]['value'] = $values['asset_device'];
  if(isset($values['asset_account_number']) && !empty($values['asset_account_number']))
    $node->field_asset_account_number['und'][0]['target_id'] = $values['asset_account_number'];
  if(isset($values['asset_priority_rr']) && !empty($values['asset_priority_rr']))
    $node->field_asset_priority_rr['und'][0]['target_id'] = $values['asset_priority_rr'];
  if(isset($values['asset_region']) && !empty($values['asset_region']))   
    $node->field_asset_region['und'][0]['target_id'] = $values['asset_region'];
  if(isset($values['asset_site']) && !empty($values['asset_site']))
    $node->field_asset_site['und'][0]['target_id'] = $values['asset_site'];
  if(isset($values['asset_facility']) && !empty($values['asset_facility']))
    $node->field_asset_facility['und'][0]['target_id'] = $values['asset_facility'];
  if(isset($values['asset_location']) && !empty($values['asset_location']))
    $node->field_asset_location['und'][0]['target_id'] = $values['asset_location'];
  $node->field_asset_date_purchased['und'][0]['value'] = $values['asset_date_purchased'];
  $node->field_asset_date_received['und'][0]['value'] = $values['asset_date_received'];
  $node->field_asset_date_sold['und'][0]['value'] = $values['asset_date_sold'];
  $node->field_asset_original_cost['und'][0]['value'] = $values['asset_original_cost'];
  $node->field_asset_replacement_cost['und'][0]['value'] = $values['asset_replacement_cost'];
  $node->field_asset_capital_item['und'][0]['value'] = $values['asset_capital_item'];
  $node->field_asset_life_cycle['und'][0]['value'] = $values['asset_life_cycle'];     
  $node->field_asset_description['und'][0]['value'] = $values['asset_description'];
  $node->field_asset_comments['und'][0]['value'] = $values['asset_comments'];
  $node->field_asset_warranty_information['und'][0]['value'] = $values['asset_warranty_information'];
  if(isset($values['asset_pictures']) && !empty($values['asset_pictures']))
    $node->field_asset_pictures['und'][0]['fid'] = $values['asset_pictures'];     
  $node->field_asset_status_list['und'][0]['value'] = 'asset';
  node_save($node);
  
  }
}

function hcfm_autocomplete_callback($form,&$form_state){ //drup_msg($form_state);
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  
  if($triggering_element['#autocomplete_path'] == 'hcfm/asset_class/autotitle'){
  $AClassNid = '';
  $AssetClassNidTitle = hcfm_nodenid_nodetitle_by_node_type('asset_class');
  $AssetClassTitleNid = array_flip($AssetClassNidTitle);
    $AClassNid = $AssetClassTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.asset_class_value_target_id", 'val',array($AClassNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/asset_brand/autotitle'){
  $ABrandNid = '';
  $AssetBrandNidTitle = hcfm_nodenid_nodetitle_by_node_type('asset_brand');
  $AssetBrandTitleNid = array_flip($AssetBrandNidTitle);
    $ABrandNid = $AssetBrandTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.asset_brand_value_target_id", 'val',array($ABrandNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/facility/autotitle'){
  $AFacilityNid = '';
  $AssetFacilityNidTitle = hcfm_nodenid_nodetitle_by_node_type('facility');
  $AssetFacilityTitleNid = array_flip($AssetFacilityNidTitle);
    $AFacilityNid = $AssetFacilityTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.asset_facility_value_target_id", 'val',array($AFacilityNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/risk_rank/autotitle'){
  $ARiskRankNid = '';
  $AssetRiskRankNidTitle = hcfm_nodenid_nodetitle_by_node_type('risk_rank');
  $AssetRiskRankTitleNid = array_flip($AssetRiskRankNidTitle);
    $ARiskRankNid = $AssetRiskRankTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.asset_risk_rank_value_target_id", 'val',array($ARiskRankNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/region/autotitle'){
  $ARegionNid = '';
  $AssetRegionNidTitle = hcfm_nodenid_nodetitle_by_node_type('region');
  $AssetRegionTitleNid = array_flip($AssetRegionNidTitle);
    $ARegionNid = $AssetRegionTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.add_asset_facility_region_value_target_id", 'val',array($ARegionNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/facility_type/autotitle'){
  $AFacilityTypeNid = '';
  $AssetFacilityTypeNidTitle = hcfm_nodenid_nodetitle_by_node_type('facility_type');
  $AssetFacilityTypeTitleNid = array_flip($AssetFacilityTypeNidTitle);
    $AFacilityTypeNid = $AssetFacilityTypeTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.add_asset_facility_type_value_target_id", 'val',array($AFacilityTypeNid));
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/asset/autotitle'){
  $ANid = '';
  $AssetNidTitle = hcfm_nodenid_nodetitle_by_node_type('asset');
  $AssetTitleNid = array_flip($AssetNidTitle);
    $ANid = $AssetTitleNid[$triggering_element['#value']];  
  $commands[] = ajax_command_invoke("input.hcfm_asset_value_target_id", 'val',array($ANid));
  if($form_state['values']['form_id'] == 'hcfm_work_order_add_form'){
    $JoinField = array(  
    'nfas-_value'=>'field_data_field_asset_status',
    'nfaf-_target_id'=>'field_data_field_asset_facility',
    'nfarr-_target_id'=>'field_data_field_asset_risk_rank',
    'nfawa-_value'=>'field_data_field_asset_when_acquired',
    'nfaws-_value'=>'field_data_field_asset_when_sold',
    );
    $NodeObj = array('NodeNid'=>$ANid,'NodeType'=>'asset','Fetch'=>'fetchAssoc');
    $AssetNodeData = _get_hcfm_db_request($NodeObj,$JoinField );
    $AssetFacilityNidTitle = hcfm_nodenid_nodetitle_by_node_type('facility');
    $AssetRiskRankNidTitle = hcfm_nodenid_nodetitle_by_node_type('risk_rank');
    if(isset($AssetNodeData['field_asset_facility_target_id']) && is_numeric($AssetNodeData['field_asset_facility_target_id'])){
      $commands[] = ajax_command_invoke("input.asset-facility", 'val',array($AssetFacilityNidTitle[$AssetNodeData['field_asset_facility_target_id']]));
      $commands[] = ajax_command_invoke("input.asset-facility", 'trigger',array('blur'));
    }
    if(isset($AssetNodeData['field_asset_risk_rank_target_id']) && is_numeric($AssetNodeData['field_asset_risk_rank_target_id'])){
      $commands[] = ajax_command_invoke("input.asset-risk-rank", 'val',array($AssetRiskRankNidTitle[$AssetNodeData['field_asset_risk_rank_target_id']]));
      $commands[] = ajax_command_invoke("input.asset-risk-rank", 'trigger',array('blur'));
    }
    $commands[] = ajax_command_invoke("select.wo-status", 'val',array($AssetNodeData['field_asset_status_value']));   
    $commands[] = ajax_command_invoke("input.wo-when-acquired", 'val',array($AssetNodeData['field_asset_when_acquired_value']));
    $commands[] = ajax_command_invoke("input.wo-when-sold", 'val',array($AssetNodeData['field_asset_when_sold_value']));      
  }
  }
  if($triggering_element['#autocomplete_path'] == 'hcfm/user/autotitle'){
  $HcfmUid = '';
  $HcfmUidName = hcfm_nodenid_nodetitle_by_node_type('user');
  $HcfmNameUid = array_flip($HcfmUidName);
    $HcfmUid = $HcfmNameUid[$triggering_element['#value']]; 
  $commands[] = ajax_command_invoke("input.hcfm_user_value_target_id", 'val',array($HcfmUid));
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function hcfm_region_facility_list_callback($form,&$form_state){
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  if($triggering_element['#name'] == 'asset_facility_region'){
  $cfacilityNid = '';
  if(is_numeric($triggering_element['#value'])){
    $cfacilityNid = $triggering_element['#value'];
    $NodeObj1 = array('NodeNid'=>$cfacilityNid,'NodeType'=>'facility');;
      $FacilityRegion = _get_hcfm_db_request_three($NodeObj1);     
    $FacilityRegion01 = array(' ' => '- Select -') + $FacilityRegion;   
  } 
  }  
  return array('#type' => 'ajax','#commands' => $commands);
}

function hcfm_type_change_callback($form,&$form_state){ //drup_msg($form_state);
  $commands = array();
  $triggering_element = $form_state['triggering_element'];  
  if(isset($triggering_element['#attributes']['class']) && $triggering_element['#attributes']['class'][0] == 'asset_type_value_target_value'){    
  if(isset($triggering_element['#options']) && !empty($triggering_element['#value']) && is_numeric($triggering_element['#value'])){
    $rsNid = $triggering_element['#value'];
    $rsNode= _get_fm_type_node_details($rsNid);
    $yearExtention ='-'.date('Y');
    $startingNumber = (isset($rsNode[$rsNid]) && is_numeric($rsNode[$rsNid]['type_starting_number']))?$rsNode[$rsNid]['type_starting_number']:'';
    if(is_numeric($startingNumber)){
      $prefix = (isset($rsNode[$rsNid]) && !empty($rsNode[$rsNid]['type_prefix']))?$rsNode[$rsNid]['type_prefix']:'';
      $serialDefault = $startingNumber;
      $currentNumber = (isset($rsNode[$rsNid]) && !empty($rsNode[$rsNid]['type_current_number']))?$rsNode[$rsNid]['type_current_number']:0;
      $NextNumber = $startingNumber + $currentNumber + 1;
      $serial = $prefix.' '.str_pad($NextNumber, 5, '0', STR_PAD_LEFT).$yearExtention;      
      $commands[] = ajax_command_invoke("input.asset-number", 'val',array($serial));
    }
    
    $SyearExtention =date('y');
    $SmonthExtention ='-'.date('m');
      $SdayExtention =date('j');
      $StimeExtention =date('his');
      $Sprefix = 'ASS'.$SdayExtention ;
      $Sserial = $Sprefix.' '.$StimeExtention .$SmonthExtention.$SyearExtention;
    $commands[] = ajax_command_invoke("input.asset-serial-number", 'val',array($Sserial));
  }
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function hcfm_work_order_table_content($currentUserUid,$type,$headervalue,$nodeArr='',$Object='',$ajax = FALSE) {
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $NodeObj = array('NodeType'=>$type,'OrderBy'=>array('nid'=>'DESC'),'Plimit'=>'100','UserUid'=>$currentUserUid,); //'UserUid'=>$currentUserUid,
  $result =  _get_hcfm_db_request($NodeObj,$nodeArr);
  if ($result && ! empty ( $result )){
    foreach ($result as $key => $obj){
    //if($obj['field_asset_in_status_value'] == $Object){
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj['nid'].'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'),'for'=>array($obj['nid']))) ).'
            
           </li>
           <li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj['nid']), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>';
   $action .= '</ul>
         </div>
       </div>'; 
        
      $woTitleDes = '';
      if(isset($obj['field_wo_name_value'],$obj['field_wo_description_value']) && !empty($obj['field_wo_name_value']) && !empty($obj['field_wo_description_value'])){
      $woTitleDes = $obj['field_wo_name_value'].' | '.$obj['field_wo_description_value'];
      }
      else if(isset($obj['field_wo_name_value']) && !empty($obj['field_wo_name_value'])){
        $woTitleDes = $obj['field_wo_name_value'];
      }
      else if(isset($obj['field_wo_description_value']) && !empty($obj['field_wo_description_value'])){
      $woTitleDes = $obj['field_wo_description_value'];
      }
      $rows [] = array (
      'data' => array (
        array (
        'data' => (isset($obj['field_wo_date_completed_value']) && !empty($obj['field_wo_date_completed_value'])? date('m-d-Y', strtotime($obj['field_wo_date_completed_value'])) :''),
        'class' => array (
        'view-work-order-duedate' 
        )
        ),
        array (
        'data' => $obj['field_wo_number_value'],
        'class' => array (
        'view-work-order-number' 
        )
        ),
        array (
        'data' => (isset($obj['field_wo_type_target_id']) && !empty($obj['field_wo_type_target_id'])? _get_title_of_node($obj['field_wo_type_target_id']) :''),
        'class' => array (
        'view-work-order-type' 
        )
        ),
        array (
        'data' => $woTitleDes,
        'class' => array (
        'view-work-order-title-description' 
        )
        ),
        array (
        'data' => (isset($obj['field_wo_site_target_id']) && !empty($obj['field_wo_site_target_id'])? _get_title_of_node($obj['field_wo_site_target_id']) :''),
        'class' => array (
        'view-work-order-site' 
        )
        ),
        array (
        'data' => (isset($obj['field_wo_facility_target_id']) && !empty($obj['field_wo_facility_target_id'])? _get_title_of_node($obj['field_wo_facility_target_id']) :''),
        'class' => array (
        'view-work-order-facility' 
        )
        ),
        array (
        'data' => (isset($obj['field_wo_status_target_id']) && !empty($obj['field_wo_status_target_id'])? _get_title_of_node($obj['field_wo_status_target_id']) :''),

        'class' => array (
        'view-work-order-status' 
        )
        ),
        array (
        'data' => $action,
        'class' => array (
        'view-work-order-action' 
        )
        ),      
      ),
      'class' => array (
        'listing-row-' . $obj['nid'] 
      ) 
      );
      }
    //}
  }
  if ($ajax == FALSE) {
    //$output .= '<div class="cust-view-heading cust-rfp-heading"><span>Company Emails</span></div>';
    
  }
  $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'asset-detail-table-new',
          'class' => array (
              'asset-detail-table-new',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  $output .=  theme('pager', array('quantity', $result));
  return $output;
}

function hcfm_work_order_dashboard_table_content($currentUserUid,$type,$headervalue,$nodeArr='',$Object='',$ajax = FALSE) {
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $NodeObj = array('NodeType'=>$type,'UserUid'=>$currentUserUid,'OrderBy'=>array('nid'=>'DESC')); 
  $result =  _get_hcfm_db_request($NodeObj,$nodeArr);
  if($result && ! empty ( $result )){
    // Convert Array as per Risk rank 
    $rankItems = array();
    foreach ($result as $rankData) {
      $key = $rankData['field_wo_priority_rr_target_id'];
      $rankItems[$key][] = $rankData;
    }
  
  foreach ($rankItems as $rankDelta){    
      foreach($rankDelta as $rankDeltaKey => $rankDeltaVal) {
      $rows [] = array (
        'data' => array (
          array (
          'data' => _get_title_of_node($rankDeltaVal['field_wo_priority_rr_target_id']),
          'class' => array (
          'view-work-order-number' 
          )
          ),
          array (
          'data' => $rankDeltaVal['field_wo_number_value'],
          'class' => array (
          'view-work-order-title' 
          )
          ),
          array (
          'data' => $rankDeltaVal['title'],
          'class' => array (
          'view-work-order-action' 
          )
          ),      
        ),
        'class' => array (
          'listing-row-' . $rankDeltaVal['nid'] 
        ) 
        );
      }
    }   
    }
    if ($ajax == FALSE) {
      //$output .= '<div class="cust-view-heading cust-rfp-heading"><span>Company Emails</span></div>';
    
    }
    $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'work-order-detail-table',
          'class' => array (
              'work-order-detail-table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  return $output;
}

function hcfm_work_order_dashboard_table_content1($currentUserUid,$currentComNid,$type,$headervalue,$nodeArr='',$Object='',$Query='',$ajax = FALSE) {
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  if(isset($Query) && !empty($Query) && $Query != 0){
    $result = $Query;
  }else{
  $NodeObj = array('NodeType'=>$type,'UserUid'=>$currentUserUid,'OrderBy'=>array('nid'=>'DESC')); 
    $result =  _get_hcfm_db_request($NodeObj,$nodeArr);  
  }
  if($result && ! empty ( $result )){
    // Convert Array as per Risk rank 
    $rankItems = array();
    foreach ($result as $rankData) {
      //$key = $rankData['field_wo_priority_rr_target_id'];
    $key = (isset($Object) && !empty($Object) && $Object != 0 ?$rankData[$Object]: $rankData['field_wo_priority_rr_target_id']);
    $rankItems[$key][] = $rankData;
    } 
  foreach ($rankItems as $rankDelta){  
    foreach($rankDelta as $rankDeltaKey => $rankDeltaVal) {
    $rows [] = array (
      'data' => array (
        array (
        'data' => (isset($Object) && !empty($Object) && $Object != 0?_get_title_of_node($rankDeltaVal[$Object]) : _get_title_of_node($rankDeltaVal['field_wo_priority_rr_target_id'])),
        'class' => array (
        'view-work-order-number' 
        )
        ),
        array (
        'data' => $rankDeltaVal['field_wo_number_value'],
        'class' => array (
        'view-work-order-title' 
        )
        ),
        array (
        'data' => $rankDeltaVal['title'],
        'class' => array (
        'view-work-order-action' 
        )
        ),      
      ),
      'class' => array (
        'listing-row-' . $rankDeltaVal['nid'] 
      ) 
      );
    }
    }   
  }
  $output .= theme ( 'table', array (
  'header' => $header,
  'rows' => $rows,
  'empty' => 'Not Available Yet',
  'attributes' => array (
    'id' => 'work-order-detail-table',
    'class' => array (
    'work-order-detail-table',
    'table',
    'table-bordered',
    'm6connect-custom-table',
    'table-hover',
    'table-striped' 
    ) 
  ),
  'sticky' => FALSE 
  ) );
  return $output;
}

function hcfm_work_order_summary_table_content($currentUserUid,$type,$headervalue,$nodeArr='',$Object='',$ajax = FALSE) {
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $cdata =  array();
  $NodeObj = array('NodeType'=>$type,'UserUid'=>$currentUserUid,'OrderBy'=>array('nid'=>'DESC')); 
  $result =  _get_hcfm_db_request($NodeObj,$nodeArr);
  if ($result && ! empty ( $result )){
    
      $RowSN = '';
    foreach ($result as $key => $obj){
     ++$RowSN;
    //if($obj['field_asset_in_status_value'] == $Object){
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj['nid'].'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'))) ).'
           </li>  
           <li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj['nid']), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>';    
   $action .= '</ul>
         </div>
       </div>';   
        $rows [] = array (
      'data' => array (
        array (
        'data' => $RowSN,
        'class' => array (
        'view-hcfmrow-sn' 
        )
      ),
      array (
        'data' => $obj['nid'],
        'class' => array (
        'view-hcfmrow-nid' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-hcfmrow-action' 
        )
      ),
      ),
      'class' => array (
        'listing-row-' . $obj['nid'] 
      ) 
        );
      //}
    }
  }
  if ($ajax == FALSE) {
    //$output .= '<div class="cust-view-heading cust-rfp-heading"><span>Company Emails</span></div>';
    
  }
  $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => $type.'_detail_table',
          'class' => array (
              $type.'_detail_table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  return $output;
}

function hcfm_asset_table_content($currentUserUid,$type,$headervalue,$nodeArr='',$Object='',$ajax = FALSE) {
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $NodeObj = array('NodeType'=>$type,'OrderBy'=>array('nid'=>'DESC')); //'UserUid'=>$currentUserUid,
  //$result =  _get_hcfm_db_request($NodeObj,$nodeArr);
  
  
  $query = db_select('node', 'n');
  $query ->leftjoin('field_data_field_asset_number','fdfanu','fdfanu.entity_id=n.nid');
  $query ->leftjoin('field_data_field_asset_in_status','fdfaist','fdfaist.entity_id=n.nid');
  $query ->leftjoin('field_data_field_asset_description','fdfades','fdfades.entity_id=n.nid');  
  $query ->leftjoin('field_data_field_asset_site','fdfasi','fdfasi.entity_id=n.nid');
  $query ->leftjoin('field_data_field_asset_priority_rr','fdfapr','fdfapr.entity_id=n.nid');  
  $query ->fields('n',array('nid','type','title','uid','status'));  
  $query ->fields('fdfanu',array('field_asset_number_value'));
  $query ->fields('fdfaist',array('field_asset_in_status_value'));
  $query ->fields('fdfades',array('field_asset_description_value'));
  $query ->fields('fdfasi',array('field_asset_site_target_id'));
  $query ->fields('fdfapr',array('field_asset_priority_rr_target_id'));  
  $query ->condition('n.type','fm_asset');  
  $query ->orderBy('n.nid', 'DESC');
  $result =  $query->extend('PagerDefault')->limit(100)->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
  
  
  
  
  
  
  
  
  
  
  
  if ($result && ! empty ( $result )){
    foreach ($result as $key => $obj){
    //if($obj['field_asset_in_status_value'] == $Object){
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj['nid'].'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
           </li>
           
           <li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj['nid']), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>
           <li>
           '.l('Copy', url('hcfm-action/'.$type.'/'.$obj['nid'].'/copy/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'))) ).'
           </li>
          ';
           
           
           
           
    /*  
    
    
    
    
    
         if($Object == 'asset'){
             $action .= '<li>
           '.l('Move to Archive', url('hcfm-action/'.$type.'/'.$obj['nid'].'/movetoarchive/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','move-to-archive'))) ).'
              </li>';
           }else if($Object == 'archived'){
           $action .= '<li>
           '.l('Move to Asset', url('hcfm-action/'.$type.'/'.$obj['nid'].'/movetoasset/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','move-to-asset'))) ).'
              </li>';
           }
     $action .= '<li>
           '.l('Logs', url('hcfm/log/'.$type.'/'.$obj['nid']), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('hcfm-assetlog'))) ).'
           </li>';*/
   $action .= '</ul>
         </div>
       </div>'; 
    
      $rows [] = array (
      'data' => array (
        array (
        'data' => $obj['field_asset_number_value'],
        'class' => array (
        'view-asset-number' 
        )
        ),
        array (
        'data' => $obj['field_asset_description_value'],
        'class' => array (
        'view-asset-description' 
        )
        ),
        array (
        'data' => (isset($obj['field_asset_site_target_id']) && !empty($obj['field_asset_site_target_id']) ?_get_title_of_node($obj['field_asset_site_target_id']):''),
        'class' => array (
        'view-asset-site' 
        )
        ),
        array (
        'data' => (isset($obj['field_asset_priority_rr_target_id']) && !empty($obj['field_asset_priority_rr_target_id']) ?_get_title_of_node($obj['field_asset_priority_rr_target_id']):''),
        'class' => array (
        'view-asset-riskrank' 
        )
        ),
        array (
        'data' => $action,
        'class' => array (
        'view-asset-action' 
        )
        ),      
      ),
      'class' => array (
        'listing-row-' . $obj['nid'] 
      ) 
      );
      //}
    }
  }
  if ($ajax == FALSE) {
    //$output .= '<div class="cust-view-heading cust-rfp-heading"><span>Company Emails</span></div>';
    
  }
  $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'asset-detail-table-new',
          'class' => array (
              'asset-detail-table-new',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  $output .=  theme('pager', array('quantity', $result));
  return $output;
}

function hcfm_asset_revision_table_content($currentUserUid,$type,$headervalue,$nodeArr='',$Object='',$ajax = FALSE){ 
//pre($currentUserUid);pre($type);pre($headervalue);pre($nodeArr);pre($Object);
  global $user;
  $output = '';
  $header = array();
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );
  }
  
  $rows = array ();
  //$NodeObj = array('NodeType'=>$type,'UserUid'=>$currentUserUid,'OrderBy'=>array('nid'=>'DESC')); 
  $result =  _get_hcfm_db_request($nodeArr);
  //drup_msg($result);
  if ($result && ! empty ( $result )){
    $RowSN = '';
    foreach ($result as $key => $obj){
    
    //if($obj['field_asset_in_status_value'] == $Object){
    if($key != 0){
      ++$RowSN;
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj['nid'].'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'))) ).'
           </li>
           <li>
           '.l('Copy', url('hcfm-action/'.$type.'/'.$obj['nid'].'/copy/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'))) ).'
           </li>
           <li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj['nid']), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>';
           if($Object == 'asset'){
             $action .= '<li>
           '.l('Move to Archive', url('hcfm-action/'.$type.'/'.$obj['nid'].'/movetoarchive/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','move-to-archive'))) ).'
              </li>';
           }else if($Object == 'archived'){
           $action .= '<li>
           '.l('Move to Asset', url('hcfm-action/'.$type.'/'.$obj['nid'].'/movetoasset/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','move-to-asset'))) ).'
              </li>';
           }
   $action .= '</ul>
         </div>
       </div>'; 
    
      $rows [] = array (
      'data' => array (
        array (
        'data' => $RowSN,
        'class' => array (
        'view-asset-srn' 
        )
        ),
        array (
        'data' => $obj['uid'],
        'class' => array (
        'view-asset-action' 
        )
        ),
        array (
        'data' => format_date($obj['timestamp'], 'custom', 'j M Y'),
        'class' => array (
        'view-asset-action' 
        )
        ),
        array (
        'data' => l('View', url('hcfm-action/'.$type.'__'.$obj['nid'].'/'.$obj['id'].'/log/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','log-asset-view'))) ),
        'class' => array (
        'view-asset-action' 
        )
        ),
        
      ),
      'class' => array (
        'listing-row-' . $obj['nid'] 
      ) 
      );
      }
    }
  }
  if ($ajax == FALSE) {
    //$output .= '<div class="cust-view-heading cust-rfp-heading"><span>Company Emails</span></div>';
    
  }
  $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'asset-revisionlog-table',
          'class' => array (
              'asset-revisionlog-table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  return $output;
}

function hcfm_table_content($currentUserUid,$currentComNid,$type,$headervalue,$nodeArr='',$tableField='',$ajax = FALSE) {

  global $user,$company;
  $output = '';
  
  $header = array();
  foreach($headervalue as $HValue){
    $header[]=array(
      'data' =>  $HValue,
      'class' => array(
        'text-left' 
      ) 
    );
  }
 
  $rows = array ();
  if($type == 'fm_asset_system'){
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_system_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_system_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){  
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-system-title' 
        )
      ),
      array (
        'data' => $obj->field_system_description_value,
        'class' => array (
        'view-system-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-system-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_asset_sub_system'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_subsystem_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_subsystem_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){  
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-subsystem-title' 
        )
      ),
      array (
        'data' => $obj->field_subsystem_description_value,
        'class' => array (
        'view-subsystem-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-subsystem-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_asset_device_type'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_devicetype_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_devicetype_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){  
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-devicetype-title' 
        )
      ),
      array (
        'data' => $obj->field_devicetype_description_value,
        'class' => array (
        'view-devicetype-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-devicetype-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_asset_status'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_asset_status_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_asset_status_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-devicetype-title' 
        )
      ),
      array (
        'data' => $obj->field_asset_status_description_value,
        'class' => array (
        'view-devicetype-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-devicetype-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_account_number'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_account_number_description','fsd','fsd.entity_id=n.nid');
  $query->leftjoin('field_data_field_account_number_number','fann','fann.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_account_number_description_value'));
  $query->fields('fann',array('field_account_number_number_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->field_account_number_number_value,
        'class' => array (
        'view-accountnumber-number' 
        )
      ),
      array (
        'data' => $obj->title,
        'class' => array (
        'view-accountnumber-title' 
        )
      ),
      array (
        'data' => $obj->field_account_number_description_value,
        'class' => array (
        'view-accountnumber-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-accountnumber-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_risk_rank'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_riskrank_description','fsd','fsd.entity_id=n.nid');


  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_riskrank_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-riskrank-title' 
        )
      ),
      array (
        'data' => $obj->field_riskrank_description_value,
        'class' => array (
        'view-riskrank-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-riskrank-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_location_region'){ 
    $query = db_select('node','n');
    $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
    $query->leftjoin('field_data_field_locationregion_description','fsd','fsd.entity_id=n.nid');
    $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
    $query->fields('n',array('nid','title','type'));
    $query->fields('fsd',array('field_locationregion_description_value'));
    if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
      $query->condition('ogm.gid',$currentComNid,'=');
    }
    if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
      $query->condition('n.uid',$currentUserUid,'=');
    }
    $query->condition('n.type',$type,'=');
    $result = $query->execute()->fetchAllAssoc('nid');    
    if ($result && ! empty ( $result )){
      foreach ($result as $nid => $obj){
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
           <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
           <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
             '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
           </li>';
           
      if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
        $action .= '<li>
             '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
           </li>';
      }
      else{
        $action .= '<li>
             '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>';  
      }        
      $action .= '</ul>
         </div>
         </div>';   
    
      $rows [] = array (
        'data' => array (     
        array (
          'data' => $obj->title,
          'class' => array (
          'view-locationregion-title' 
          )
        ),
        array (
          'data' => $obj->field_locationregion_description_value,
          'class' => array (
          'view-locationregion-description' 
          )
        ),
        array (
          'data' => $action,
          'class' => array (
          'view-locationregion-action' 
          )
        ),      
        ),
        'class' => array (
          'listing-row-' . $obj->nid 
        ) 
      );
      }
    }   
   
  }
  else if($type == 'fm_location_site'){
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_locationsite_description','fsd','fsd.entity_id=n.nid');
  $query->leftjoin('field_data_field_locationsite_address','flsa','flsa.entity_id=n.nid');
  $query->leftjoin('field_data_field_location_region','flre','flre.entity_id=n.nid');
  $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_locationsite_description_value'));
  $query->fields('flsa',array('field_locationsite_address_locality'));
  $query->fields('flre',array('field_location_region_target_id'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-locationsite-title' 
        )
      ),
      array (
        'data' => $obj->field_locationsite_address_locality,
        'class' => array (
        'view-locationsite-address' 
        )
      ),
      array (
        'data' => $obj->field_locationsite_description_value,
        'class' => array (
        'view-locationsite-description' 
        )
      ),
      array (
        'data' => (isset($obj->field_location_region_target_id)? _get_title_of_node($obj->field_location_region_target_id) :''),
        'class' => array (
        'view-locationsite-region' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-locationsite-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_facility'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_facility_description','fsd','fsd.entity_id=n.nid');  
  $query->leftjoin('field_data_field_facility_location_site','flsite','flsite.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_region','flre','flre.entity_id=flsite.field_facility_location_site_target_id');
  $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_facility_description_value'));  
  $query->fields('flsite',array('field_facility_location_site_target_id'));
    $query->fields('flre',array('field_location_region_target_id'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'),'for'=>array($obj->nid))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-locationfacility-title' 
        )
      ),
      array (
        'data' => $obj->field_facility_description_value,
        'class' => array (
        'view-locationfacility-description' 
        )
      ),
      array (
        'data' => (isset($obj->field_facility_location_site_target_id)? _get_title_of_node($obj->field_facility_location_site_target_id) :''),
        'class' => array (
        'view-locationfacility-site' 
        )
      ),
      array (
        'data' => (isset($obj->field_location_region_target_id)? _get_title_of_node($obj->field_location_region_target_id) :''),
        'class' => array (
        'view-locationfacility-region' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-locationfacility-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_location_location'){ 
    $query = db_select('node','n');
    $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
    $query->leftjoin('field_data_field_location_description','fsd','fsd.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_facility','flfacility','flfacility.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_location_site','flsite','flsite.entity_id=flfacility.field_location_facility_target_id');
    $query->leftjoin('field_data_field_location_region','flre','flre.entity_id=flsite.field_facility_location_site_target_id');
    $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
    $query->fields('n',array('nid','title','type'));
    $query->fields('fsd',array('field_location_description_value'));
    $query->fields('flfacility',array('field_location_facility_target_id'));
    $query->fields('flsite',array('field_facility_location_site_target_id'));
    $query->fields('flre',array('field_location_region_target_id'));
    if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
      $query->condition('ogm.gid',$currentComNid,'=');
    }
    if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
      $query->condition('n.uid',$currentUserUid,'=');
    }
    $query->condition('n.type',$type,'=');
    $result = $query->execute()->fetchAllAssoc('nid');  
    if ($result && ! empty ( $result )){
      foreach ($result as $nid => $obj){
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
           <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
           <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
             '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'),'for'=>array($obj->nid))) ).'
           </li>';
           
      if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
        $action .= '<li>
             '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
           </li>';
      }
      else{
        $action .= '<li>
             '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
           </li>';  
      }        
      $action .= '</ul>
         </div>
         </div>';   
    
      $rows [] = array (
        'data' => array (     
        array (
          'data' => $obj->title,
          'class' => array (
          'view-locationlocation-title' 
          )
        ),      
        array (
          'data' => $obj->field_location_description_value,
          'class' => array (
          'view-locationlocation-description' 
          )
        ),
        array (
          'data' => (isset($obj->field_location_facility_target_id)? _get_title_of_node($obj->field_location_facility_target_id) :''),
          'class' => array (
          'view-locationlocation-facility' 
          )
        ),
        array (
          'data' => (isset($obj->field_facility_location_site_target_id)? _get_title_of_node($obj->field_facility_location_site_target_id) :''),
          'class' => array (
          'view-locationlocation-site' 
          )
        ),
        array (
          'data' => (isset($obj->field_location_region_target_id)? _get_title_of_node($obj->field_location_region_target_id) :''),
          'class' => array (
          'view-locationlocation-region' 
          )
        ),
        array (
          'data' => $action,
          'class' => array (
          'view-locationlocation-action' 
          )
        ),      
        ),
        'class' => array (
          'listing-row-' . $obj->nid 
        ) 
      );
      }
    }   
  }
  else if($type == 'fm_facility_type'){
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_facility_type_description','fsd','fsd.entity_id=n.nid');
  $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
  $query->fields('n',array('nid','title','type'));  
  $query->fields('fsd',array('field_facility_type_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-facilitytype-title' 
        )
      ),
      array (
        'data' => $obj->field_facility_type_description_value,
        'class' => array (
        'view-facilitytype-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-facilitytype-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_facility_area_type'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_fareatype_description','fsd','fsd.entity_id=n.nid');
  $query->leftjoin('field_data_field_cm_type','ficmty','ficmty.entity_id=n.nid');
    $query->fields('ficmty',array('field_cm_type_value'));
    $query->condition('ficmty.field_cm_type_value','hcfm','=');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_fareatype_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-facilityareatype-title' 
        )
      ),
      array (
        'data' => $obj->field_fareatype_description_value,
        'class' => array (
        'view-facilityareatype-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-facilityareatype-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_problem_code'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_problemcode_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_problemcode_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-problemcode-title' 
        )
      ),
      array (
        'data' => $obj->field_problemcode_description_value,
        'class' => array (
        'view-problemcode-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-problemcode-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_work_order_type'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_workordertype_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_workordertype_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-workordertype-title' 
        )
      ),
      array (
        'data' => $obj->field_workordertype_description_value,
        'class' => array (
        'view-workordertype-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-workordertype-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_work_order_status'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_wo_status_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_wo_status_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-wostatus-title' 
        )
      ),
      array (
        'data' => $obj->field_wo_status_description_value,
        'class' => array (
        'view-wostatus-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-wostatus-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_skill'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_skill_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_skill_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-skill-title' 
        )
      ),
      array (
        'data' => $obj->field_skill_description_value,
        'class' => array (
        'view-skill-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-skill-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_priorty'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_priorty_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_priorty_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-priorty-title' 
        )
      ),
      array (
        'data' => $obj->field_priorty_description_value,
        'class' => array (
        'view-priorty-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-priorty-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_resource'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_resource_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_resource_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-resource-title' 
        )
      ),
      array (
        'data' => $obj->field_resource_description_value,
        'class' => array (
        'view-resource-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-resource-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_special_tag'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_special_tag_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_special_tag_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-specialtag-title' 
        )
      ),
      array (
        'data' => $obj->field_special_tag_description_value,
        'class' => array (
        'view-specialtag-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-specialtag-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_needed_permit'){ 
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_needed_permit_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_needed_permit_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-neededpermit-title' 
        )
      ),
      array (
        'data' => $obj->field_needed_permit_description_value,
        'class' => array (
        'view-neededpermit-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-neededpermit-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else if($type == 'fm_preferred_vendor'){  
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_pref_vendor_description','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid','title','type'));
  $query->fields('fsd',array('field_pref_vendor_description_value'));
  if(isset($currentComNid) && !empty($currentComNid) && $currentComNid != 0){
    $query->condition('ogm.gid',$currentComNid,'=');
  }
  if(isset($currentUserUid) && !empty($currentUserUid) && $currentUserUid != 0){
    $query->condition('n.uid',$currentUserUid,'=');
  }
  $query->condition('n.type',$type,'=');
  $result = $query->execute()->fetchAllAssoc('nid');  
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','edit-'.$type.'-detail'),'for'=>array($obj->nid))) ).'
         </li>';
         
    if(_hcfm_node_delete_access($obj->nid,$type) == TRUE){     
      $action .= '<li>
           '.l('Inactive', 'javascript:void(0);', array( 'external'=>TRUE)).'
         </li>';
    }
    else{
      $action .= '<li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>';  
    }        
    $action .= '</ul>
       </div>
       </div>';   
  
    $rows [] = array (
      'data' => array (     
      array (
        'data' => $obj->title,
        'class' => array (
        'view-prefvendor-title' 
        )
      ),
      array (
        'data' => $obj->field_pref_vendor_description_value,
        'class' => array (
        'view-prefvendor-description' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-prefvendor-action' 
        )
      ),      
      ),
      'class' => array (
      'listing-row-' . $obj->nid 
      ) 
    );
    }
  }   
  }
  else{
    $result = _get_hcfm_table_data_by_nodetype($type,$company->nid,$user->uid);
  if ($result && ! empty ( $result )){
    foreach ($result as $nid => $obj){  
    $action = '<div class="btn-group hcfm-action-btn">
       <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
         <li>
           '.l('Edit', url('hcfm-action/'.$type.'/'.$obj->nid.'/edit/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'),'for'=>array($obj->nid)))).'
         </li>
         <li>
           '.l('Delete', url('hcfm-node-delete/nojs/'.$obj->nid), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax ctools-modal-assign-dashboard-popup-style ctools-use-modal')))).'
         </li>
         </ul>
       </div>
       </div>'; 
  
    $rows [] = array (
      'data' => array (
      array (
        'data' => $obj->nid,
        'class' => array (
        'view-asset-number' 
        )
      ),
      array (
        'data' => $obj->title,
        'class' => array (
        'view-asset-title' 
        )
      ),
      array (
        'data' => $action,
        'class' => array (
        'view-asset-action' 
        )
      ),      
      ),
      'class' => array (
        'listing-row-' . $obj->nid 
      ) 
    );
    }
  }
  }
  $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'asset-detail-table',
          'class' => array (
              'asset-detail-table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped',
              'table-full-width'
           
          ) 
      ),
      'sticky' => FALSE 
  ) );
  
  
  return $output;
}

function hcfm_configure_container_content(){
  drupal_add_js(drupal_get_path('module', 'm6connect_program') . '/js/jquery.multiselect.js');
  drupal_add_css(drupal_get_path('module', 'm6connect_program') . '/js/jquery.multiselect.css');
  drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/m6connect_hcfm.js');
  $elements = array();
  //$assetclass = drupal_get_form('hcfm_asset_add_assetclass_form');
  //$assetbrand = drupal_get_form('hcfm_asset_add_assetbrand_form');
  ////$assettype = drupal_get_form('hcfm_asset_add_assettype_form');
  //$assettype = drupal_get_form('hcfm_type_settings_form');
  //$assetfacility = drupal_get_form('hcfm_asset_add_assetfacility_form');
  //$assetriskrank = drupal_get_form('hcfm_asset_add_assetriskrank_form');
  $assetsystem = hcfm_config_asset_tab();
  //$assetsubsystem = drupal_get_form('hcfm_add_assetsubsystem_form');
  //$assetdevicetype = drupal_get_form('hcfm_add_assetdevicetype_form');
  //$assetdevice = drupal_get_form('hcfm_add_assetdevice_form');
  $assetlocation = hcfm_config_location_tab();
  $assetworkorder = hcfm_config_workorder_tab();
  $assetresources = hcfm_config_resources_tab();
  //$facilitytype = drupal_get_form('hcfm_add_config_facilitytype_form');
  //$configassetstatus = drupal_get_form('hcfm_add_config_asset_status_form');
  //$configacctnum = drupal_get_form('hcfm_add_config_account_number_form');
 /* $elements['assetclass']['estimates_form']= array(
  '#markup' => drupal_render(drupal_get_form('hcfm_asset_add_assetclass_form')),
  '#prefix' => '<div class="clearfix margin-bottom-10">',
  '#suffix' => '</div>',
  );*/
  /*
  <li role="presentation" class="active"><a href="#assetfacility" aria-controls="assetfacility" role="tab" data-toggle="tab">Asset Facility</a></li>
  <li role="presentation" class="active"><a href="#assetclass" aria-controls="assetclass" role="tab" data-toggle="tab">Add Asset Class</a></li>
              <li role="presentation"><a href="#assetbrand" aria-controls="assetbrand" role="tab" data-toggle="tab">Add Asset Brand</a></li>
              <li role="presentation"><a href="#assettype" aria-controls="assettype" role="tab" data-toggle="tab">Add Asset Type</a></li>
              
              <div role="tabpanel" class="tab-pane active" id="assetfacility">'.drupal_render($assetfacility).'</div>
               <div role="tabpanel" class="tab-pane active" id="assetclass">'.drupal_render($assetclass).'</div>
              <div role="tabpanel" class="tab-pane" id="assetbrand">'.drupal_render($assetbrand).'</div>
              <div role="tabpanel" class="tab-pane" id="assettype">'.drupal_render($assettype).'</div>
  */
  $elements['container_tab'] = array(
    '#markup' => 
    '<div class="hcfm-configure-container company-prequal-fields">
      
      <!-- Nav tabs -->
      <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active assettab"><a href="#configasset" aria-controls="configasset" role="tab" data-toggle="tab">Asset</a></li>  
        <li role="presentation" class="locationtab"><a href="#assetlocation" aria-controls="assetlocation" role="tab" data-toggle="tab">Location</a></li>
        <li role="presentation" class="workordertab"><a href="#assetworkorder" aria-controls="assetworkorder" role="tab" data-toggle="tab">Work Order</a></li>
        <li role="presentation" class="resourcestab"><a href="#assetresources" aria-controls="assetresources" role="tab" data-toggle="tab">Resources</a></li>  
      </ul>
      
      <!-- Tab panes -->
      <div class="tab-content">     
        <div role="tabpanel" class="tab-pane active assettab" id="configasset">'.drupal_render($assetsystem).'</div>                
        <div role="tabpanel" class="tab-pane locationtab" id="assetlocation">'.drupal_render($assetlocation).'</div>
        <div role="tabpanel" class="tab-pane workordertab" id="assetworkorder">'.drupal_render($assetworkorder).'</div>
        <div role="tabpanel" class="tab-pane resourcestab" id="assetresources">'.drupal_render($assetresources).'</div>      
      </div>      
      </div>'
  
  );
  return $elements;
}

function custom_asset_configure_submit($form,&$form_state){ //pre($form_state,1);//drup_msg($form_state['values']);
  global $user, $company;
  $values = $form_state['values'];
  
  
  
  
    if($values['add_ntype'] == 'fm_facility_type'){
    if(isset($values['facility_type_node_nid']) && !empty($values['facility_type_node_nid']) && is_numeric($values['facility_type_node_nid'])){
    $node = node_load($values['facility_type_node_nid']);
    $node->title = $values['config_facility_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    
    $node->field_facility_type_description['und'][0]['value'] = $values['config_facility_type_description'];
    node_save($node);
    }else{
    $node = new stdClass();
    $node->type = 'fm_facility_type';
    $node->title = $values['config_facility_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_facility_type_description['und'][0]['value'] = $values['config_facility_type_description'];
    node_save($node);
    }
  }
  if($values['add_ntype'] == 'fm_facility_area_type'){
    if(isset($values['facility_area_type_node_nid']) && !empty($values['facility_area_type_node_nid']) && is_numeric($values['facility_area_type_node_nid']) ){
    $node = node_load($values['facility_area_type_node_nid']);
    $node->title = $values['config_facility_area_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_fareatype_description['und'][0]['value'] = $values['config_facility_area_type_description'];
    node_save($node);
    }else{
    $node = new stdClass();
    $node->type = 'fm_facility_area_type';
    $node->title = $values['config_facility_area_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_fareatype_description['und'][0]['value'] = $values['config_facility_area_type_description'];
    node_save($node);
    }
  }  
  
  
  
  
  if($values['add_ntype'] == 'fm_location_region'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_location_region_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_locationregion_description['und'][0]['value'] = $values['config_location_region_description'];   
    if(isset($values['config_location_region_country']) && !empty($values['config_location_region_country']))
      $node->field_locationregion_address['und'][0]['country'] = $values['config_location_region_country'];
    if(isset($values['config_location_region_address1']) && !empty($values['config_location_region_address1']))
      $node->field_locationregion_address['und'][0]['thoroughfare'] = $values['config_location_region_address1'];
    if(isset($values['config_location_region_address2']) && !empty($values['config_location_region_address2']))
      $node->field_locationregion_address['und'][0]['premise'] = $values['config_location_region_address2'];
    if(isset($values['config_location_region_city']) && !empty($values['config_location_region_city']))
      $node->field_locationregion_address['und'][0]['locality'] = $values['config_location_region_city'];
    if(isset($values['config_location_region_state']) && !empty($values['config_location_region_state']))
      $node->field_locationregion_address['und'][0]['administrative_area'] = $values['config_location_region_state'];
    if(isset($values['config_location_region_zipcode']) && !empty($values['config_location_region_zipcode']))
      $node->field_locationregion_address['und'][0]['postal_code'] = $values['config_location_region_zipcode'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_location_region_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_locationregion_description['und'][0]['value'] = $values['config_location_region_description'];   
    if(isset($values['config_location_region_country']) && !empty($values['config_location_region_country']))
      $node->field_locationregion_address['und'][0]['country'] = $values['config_location_region_country'];
    if(isset($values['config_location_region_address1']) && !empty($values['config_location_region_address1']))
      $node->field_locationregion_address['und'][0]['thoroughfare'] = $values['config_location_region_address1'];
    if(isset($values['config_location_region_address2']) && !empty($values['config_location_region_address2']))
      $node->field_locationregion_address['und'][0]['premise'] = $values['config_location_region_address2'];
    if(isset($values['config_location_region_city']) && !empty($values['config_location_region_city']))
      $node->field_locationregion_address['und'][0]['locality'] = $values['config_location_region_city'];
    if(isset($values['config_location_region_state']) && !empty($values['config_location_region_state']))
      $node->field_locationregion_address['und'][0]['administrative_area'] = $values['config_location_region_state'];
    if(isset($values['config_location_region_zipcode']) && !empty($values['config_location_region_zipcode']))
      $node->field_locationregion_address['und'][0]['postal_code'] = $values['config_location_region_zipcode'];
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_location_site'){ //drup_msg($values);
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_location_site_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_locationsite_description['und'][0]['value'] = $values['config_location_site_description'];
    if(isset($values['config_location_pick_region']) && !empty($values['config_location_pick_region']))
      $node->field_location_region['und'][0]['target_id'] = $values['config_location_pick_region'];   
    if(isset($values['config_location_site_country']) && !empty($values['config_location_site_country']))
      $node->field_locationsite_address['und'][0]['country'] = $values['config_location_site_country'];    
    $node->field_use_same_address_region['und'][0]['value'] = $values['config_location_site_addresscopy'];  
    if(isset($values['config_location_site_addresscopy']) && $values['config_location_site_addresscopy'] == 0){    
    if(isset($values['config_location_site_address1']) && !empty($values['config_location_site_address1']))
      $node->field_locationsite_address['und'][0]['thoroughfare'] = $values['config_location_site_address1'];
    if(isset($values['config_location_site_address2']) && !empty($values['config_location_site_address2']))
      $node->field_locationsite_address['und'][0]['premise'] = $values['config_location_site_address2'];
    if(isset($values['config_location_site_city']) && !empty($values['config_location_site_city']))
      $node->field_locationsite_address['und'][0]['locality'] = $values['config_location_site_city'];
    if(isset($values['config_location_site_state']) && !empty($values['config_location_site_state']))
      $node->field_locationsite_address['und'][0]['administrative_area'] = $values['config_location_site_state'];
    if(isset($values['config_location_site_zipcode']) && !empty($values['config_location_site_zipcode']))
      $node->field_locationsite_address['und'][0]['postal_code'] = $values['config_location_site_zipcode'];  
     
     
     
    }else if(isset($values['config_location_site_addresscopy']) && $values['config_location_site_addresscopy'] == 1){   
    if(isset($values['config_location_pick_region']) && !empty($values['config_location_pick_region'])){
      $query= db_select('field_data_field_locationregion_address', 'flr');  
      $query->fields('flr',array('field_locationregion_address_country','field_locationregion_address_thoroughfare','field_locationregion_address_premise','field_locationregion_address_locality','field_locationregion_address_administrative_area','field_locationregion_address_postal_code'));
      $query->condition('flr.entity_id', $values['config_location_pick_region'] , '=');
      $query->condition('flr.bundle', 'fm_location_region' , '=');
      $CData = $query->execute()->fetchAssoc();     
      if(isset($CData) && !empty($CData)){      
      $node->field_locationsite_address['und'][0]['thoroughfare'] = $CData['field_locationregion_address_thoroughfare'];
      $node->field_locationsite_address['und'][0]['premise'] = $CData['field_locationregion_address_premise'];
      $node->field_locationsite_address['und'][0]['locality'] = $CData['field_locationregion_address_locality'];
      $node->field_locationsite_address['und'][0]['administrative_area'] = $CData['field_locationregion_address_administrative_area'];
      $node->field_locationsite_address['und'][0]['postal_code'] = $CData['field_locationregion_address_postal_code'];
      }
    }
    }
    
      
    
    
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_location_site_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
        $node->field_locationsite_description['und'][0]['value'] = $values['config_location_site_description'];
    if(isset($values['config_location_pick_region']) && !empty($values['config_location_pick_region']))
      $node->field_location_region['und'][0]['target_id'] = $values['config_location_pick_region'];   
    if(isset($values['config_location_site_country']) && !empty($values['config_location_site_country']))
      $node->field_locationsite_address['und'][0]['country'] = $values['config_location_site_country'];
    $node->field_use_same_address_region['und'][0]['value'] = $values['config_location_site_addresscopy'];
    if(isset($values['config_location_site_addresscopy']) && $values['config_location_site_addresscopy'] == 0){    
    if(isset($values['config_location_site_address1']) && !empty($values['config_location_site_address1']))
      $node->field_locationsite_address['und'][0]['thoroughfare'] = $values['config_location_site_address1'];
    if(isset($values['config_location_site_address2']) && !empty($values['config_location_site_address2']))
      $node->field_locationsite_address['und'][0]['premise'] = $values['config_location_site_address2'];
    if(isset($values['config_location_site_city']) && !empty($values['config_location_site_city']))
      $node->field_locationsite_address['und'][0]['locality'] = $values['config_location_site_city'];
    if(isset($values['config_location_site_state']) && !empty($values['config_location_site_state']))
      $node->field_locationsite_address['und'][0]['administrative_area'] = $values['config_location_site_state'];
    if(isset($values['config_location_site_zipcode']) && !empty($values['config_location_site_zipcode']))
      $node->field_locationsite_address['und'][0]['postal_code'] = $values['config_location_site_zipcode'];  
     
     
     
    }else if(isset($values['config_location_site_addresscopy']) && $values['config_location_site_addresscopy'] == 1){   
      if(isset($values['config_location_pick_region']) && !empty($values['config_location_pick_region'])){
        $query= db_select('field_data_field_locationregion_address', 'flr');  
        $query->fields('flr',array('field_locationregion_address_country','field_locationregion_address_thoroughfare','field_locationregion_address_premise','field_locationregion_address_locality','field_locationregion_address_administrative_area','field_locationregion_address_postal_code'));
        $query->condition('flr.entity_id', $values['config_location_pick_region'] , '=');
        $query->condition('flr.bundle', 'fm_location_region' , '=');
        $CData = $query->execute()->fetchAssoc();     
        if(isset($CData) && !empty($CData)){      
        $node->field_locationsite_address['und'][0]['thoroughfare'] = $CData['field_locationregion_address_thoroughfare'];
        $node->field_locationsite_address['und'][0]['premise'] = $CData['field_locationregion_address_premise'];
        $node->field_locationsite_address['und'][0]['locality'] = $CData['field_locationregion_address_locality'];
        $node->field_locationsite_address['und'][0]['administrative_area'] = $CData['field_locationregion_address_administrative_area'];
        $node->field_locationsite_address['und'][0]['postal_code'] = $CData['field_locationregion_address_postal_code'];
        }
      }
    }
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_facility'){
    if(isset($values['fm_facility_node_nid']) && !empty($values['fm_facility_node_nid']) && is_numeric($values['fm_facility_node_nid'])){
      $node = node_load($values['fm_facility_node_nid']);
        $node->title = $values['config_location_facility_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_facility_number_of_floor['und'][0]['value'] = $values['config_location_facility_floornumber'];
      $node->field_facility_employees['und'][0]['value'] = $values['config_location_facility_employees'];
      $node->field_facility_ftes['und'][0]['value'] = $values['config_location_facility_ftes'];
      $node->field_facility_description['und'][0]['value'] = $values['config_location_facility_description'];
      if(isset($values['config_location_pick_site']) && !empty($values['config_location_pick_site']))
        $node->field_facility_location_site['und'][0]['target_id'] = $values['config_location_pick_site'];
      if(isset($values['config_location_facility_facilitytype']) && !empty($values['config_location_facility_facilitytype']))
        $node->field_facility_type['und'][0]['target_id'] = $values['config_location_facility_facilitytype'];   
      if(isset($values['config_location_facility_country']) && !empty($values['config_location_facility_country']))
        $node->field_facility_address['und'][0]['country'] = $values['config_location_facility_country'];    
      $node->field_use_same_address_site['und'][0]['value'] = $values['config_location_facility_addresscopy'];
      if(isset($values['config_location_facility_addresscopy']) && $values['config_location_facility_addresscopy'] == 0){
             
      if(isset($values['config_location_facility_address1']) && !empty($values['config_location_facility_address1']))
        $node->field_facility_address['und'][0]['thoroughfare'] = $values['config_location_facility_address1'];
      if(isset($values['config_location_facility_address2']) && !empty($values['config_location_facility_address2']))
        $node->field_facility_address['und'][0]['premise'] = $values['config_location_facility_address2'];
      if(isset($values['config_location_facility_city']) && !empty($values['config_location_facility_city']))
        $node->field_facility_address['und'][0]['locality'] = $values['config_location_facility_city'];
      if(isset($values['config_location_facility_state']) && !empty($values['config_location_facility_state']))
        $node->field_facility_address['und'][0]['administrative_area'] = $values['config_location_facility_state'];
      if(isset($values['config_location_facility_zipcode']) && !empty($values['config_location_facility_zipcode']))
        $node->field_facility_address['und'][0]['postal_code'] = $values['config_location_facility_zipcode']; 
      }else if(isset($values['config_location_facility_addresscopy']) && $values['config_location_facility_addresscopy'] == 1){   
        if(isset($values['config_location_pick_site']) && !empty($values['config_location_pick_site'])){
          $query= db_select('field_data_field_locationsite_address', 'flr');  
          $query->fields('flr',array('field_locationsite_address_country','field_locationsite_address_thoroughfare','field_locationsite_address_premise','field_locationsite_address_locality','field_locationsite_address_administrative_area','field_locationsite_address_postal_code'));
          $query->condition('flr.entity_id',$values['config_location_pick_site'] , '=');
          $query->condition('flr.bundle', 'fm_location_site' , '=');      
          $CData = $query->execute()->fetchAssoc();       
          if(isset($CData) && !empty($CData)){      
          $node->field_facility_address['und'][0]['thoroughfare'] = $CData['field_locationsite_address_thoroughfare'];
          $node->field_facility_address['und'][0]['premise'] = $CData['field_locationsite_address_premise'];
          $node->field_facility_address['und'][0]['locality'] = $CData['field_locationsite_address_locality'];
          $node->field_facility_address['und'][0]['administrative_area'] = $CData['field_locationsite_address_administrative_area'];
          $node->field_facility_address['und'][0]['postal_code'] = $CData['field_locationsite_address_postal_code'];
          }
        }
      }
      if(isset($values['config_location_facility_areatype']) && !empty($values['config_location_facility_areatype'])){
      $node->field_facility_area_type = '';
      $FareaType = 0;
      foreach($values['config_location_facility_areatype'] as $FatValue){
        $node->field_facility_area_type['und'][$FareaType]['target_id'] = $FatValue;
        $FareaType++;   
      } 
      }
      if(isset($values['config_location_facility_floornumber']) && !empty($values['config_location_facility_floornumber']) && is_numeric($values['config_location_facility_floornumber'])){
      $node->field_facility_floor_name = '';
      $node->field_facility_floor_square_feet = '';
      $floor_sf = 1;
          for($i=0; $i<$values['config_location_facility_floornumber']; $i++){
        if(isset($values['floor_'.$floor_sf]) && isset($values['sf_'.$floor_sf])){
            $node->field_facility_floor_name['und'][$i]['value'] = $values['floor_'.$floor_sf];     
          $node->field_facility_floor_square_feet['und'][$i]['value'] = $values['sf_'.$floor_sf];
        }
        $floor_sf++;  
        }
      }
      
      node_save($node);
    }else{
      $node = new stdClass();   
      $node->title = $values['config_location_facility_title'];
      $node->uid = $user->uid;
      $node->type = $values['add_ntype'];
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_facility_number_of_floor['und'][0]['value'] = $values['config_location_facility_floornumber'];
      $node->field_facility_employees['und'][0]['value'] = $values['config_location_facility_employees'];
      $node->field_facility_ftes['und'][0]['value'] = $values['config_location_facility_ftes'];
      $node->field_facility_description['und'][0]['value'] = $values['config_location_facility_description'];
      if(isset($values['config_location_pick_site']) && !empty($values['config_location_pick_site']))
        $node->field_facility_location_site['und'][0]['target_id'] = $values['config_location_pick_site'];
      if(isset($values['config_location_facility_facilitytype']) && !empty($values['config_location_facility_facilitytype']))
        $node->field_facility_type['und'][0]['target_id'] = $values['config_location_facility_facilitytype'];   
      if(isset($values['config_location_facility_country']) && !empty($values['config_location_facility_country']))
        $node->field_facility_address['und'][0]['country'] = $values['config_location_facility_country'];    
        $node->field_use_same_address_site['und'][0]['value'] = $values['config_location_facility_addresscopy'];
      if(isset($values['config_location_facility_addresscopy']) && $values['config_location_facility_addresscopy'] == 0){
             
      if(isset($values['config_location_facility_address1']) && !empty($values['config_location_facility_address1']))
        $node->field_facility_address['und'][0]['thoroughfare'] = $values['config_location_facility_address1'];
      if(isset($values['config_location_facility_address2']) && !empty($values['config_location_facility_address2']))
        $node->field_facility_address['und'][0]['premise'] = $values['config_location_facility_address2'];
      if(isset($values['config_location_facility_city']) && !empty($values['config_location_facility_city']))
        $node->field_facility_address['und'][0]['locality'] = $values['config_location_facility_city'];
      if(isset($values['config_location_facility_state']) && !empty($values['config_location_facility_state']))
        $node->field_facility_address['und'][0]['administrative_area'] = $values['config_location_facility_state'];
      if(isset($values['config_location_facility_zipcode']) && !empty($values['config_location_facility_zipcode']))
        $node->field_facility_address['und'][0]['postal_code'] = $values['config_location_facility_zipcode']; 
      }else if(isset($values['config_location_facility_addresscopy']) && $values['config_location_facility_addresscopy'] == 1){   
        if(isset($values['config_location_pick_site']) && !empty($values['config_location_pick_site'])){
          $query= db_select('field_data_field_locationsite_address', 'flr');  
          $query->fields('flr',array('field_locationsite_address_country','field_locationsite_address_thoroughfare','field_locationsite_address_premise','field_locationsite_address_locality','field_locationsite_address_administrative_area','field_locationsite_address_postal_code'));
          $query->condition('flr.entity_id',$values['config_location_pick_site'] , '=');
          $query->condition('flr.bundle', 'fm_location_site' , '=');      
          $CData = $query->execute()->fetchAssoc();       
          if(isset($CData) && !empty($CData)){      
          $node->field_facility_address['und'][0]['thoroughfare'] = $CData['field_locationsite_address_thoroughfare'];
          $node->field_facility_address['und'][0]['premise'] = $CData['field_locationsite_address_premise'];
          $node->field_facility_address['und'][0]['locality'] = $CData['field_locationsite_address_locality'];
          $node->field_facility_address['und'][0]['administrative_area'] = $CData['field_locationsite_address_administrative_area'];
          $node->field_facility_address['und'][0]['postal_code'] = $CData['field_locationsite_address_postal_code'];
          }
        }
      }
      if(isset($values['config_location_facility_areatype']) && !empty($values['config_location_facility_areatype'])){
      $node->field_facility_area_type = '';
      $FareaType = 0;
        foreach($values['config_location_facility_areatype'] as $FatValue){
          $node->field_facility_area_type['und'][$FareaType]['target_id'] = $FatValue;
          $FareaType++;   
        } 
      }
      if(isset($values['config_location_facility_floornumber']) && !empty($values['config_location_facility_floornumber']) && is_numeric($values['config_location_facility_floornumber'])){
        $node->field_facility_floor_name = '';
        $node->field_facility_floor_square_feet = '';
        $floor_sf = 1;
        for($i=0; $i<$values['config_location_facility_floornumber']; $i++){
          if(isset($values['floor_'.$floor_sf]) && isset($values['sf_'.$floor_sf])){
              $node->field_facility_floor_name['und'][$i]['value'] = $values['floor_'.$floor_sf];     
            $node->field_facility_floor_square_feet['und'][$i]['value'] = $values['sf_'.$floor_sf];
          }
        $floor_sf++;  
        }
      }
      node_save($node);
    }
  }
  if($values['add_ntype'] == 'fm_location_location'){
    if(isset($values['fm_location_location_node_nid']) && !empty($values['fm_location_location_node_nid']) && is_numeric($values['fm_location_location_node_nid'])){
      $node = node_load($values['fm_location_location_node_nid']);
        $node->title = $values['config_location_location_title'];
      $node->uid = $user->uid;    
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_location_description['und'][0]['value'] = $values['config_location_zone_description'];
      $node->field_location_room_number['und'][0]['value'] = $values['config_location_location_roomnumber'];
      if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility']))
        $node->field_location_facility['und'][0]['target_id'] = $values['config_location_pick_facility'];
      if(isset($values['config_location_facility_facilitytype']) && !empty($values['config_location_facility_facilitytype']))
        $node->field_location_department['und'][0]['target_id'] = $values['config_location_facility_facilitytype'];    
      if(isset($values['config_location_location_country']) && !empty($values['config_location_location_country']))
        $node->field_location_zone_address['und'][0]['country'] = $values['config_location_location_country'];    
        $node->field_use_same_address_facility['und'][0]['value'] = $values['config_location_location_addresscopy'];
      if(isset($values['config_location_location_addresscopy']) && $values['config_location_location_addresscopy'] == 0){           
        if(isset($values['config_location_location_address1']) && !empty($values['config_location_location_address1']))
          $node->field_location_zone_address['und'][0]['thoroughfare'] = $values['config_location_location_address1'];
        if(isset($values['config_location_location_address2']) && !empty($values['config_location_location_address2']))
          $node->field_location_zone_address['und'][0]['premise'] = $values['config_location_location_address2'];
        if(isset($values['config_location_location_city']) && !empty($values['config_location_location_city']))
          $node->field_location_zone_address['und'][0]['locality'] = $values['config_location_location_city'];
        if(isset($values['config_location_location_state']) && !empty($values['config_location_location_state']))
          $node->field_location_zone_address['und'][0]['administrative_area'] = $values['config_location_location_state'];
        if(isset($values['config_location_location_zipcode']) && !empty($values['config_location_location_zipcode']))
          $node->field_location_zone_address['und'][0]['postal_code'] = $values['config_location_location_zipcode'];     
      }else if(isset($values['config_location_location_addresscopy']) && $values['config_location_location_addresscopy'] == 1){   
        if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility'])){        
          $query= db_select('field_data_field_facility_address', 'flr');  
          $query->fields('flr',array('field_facility_address_country','field_facility_address_thoroughfare','field_facility_address_premise','field_facility_address_locality','field_facility_address_administrative_area','field_facility_address_postal_code'));
          $query->condition('flr.entity_id', $values['config_location_pick_facility'] , '=');
          $query->condition('flr.bundle', 'fm_facility' , '=');     
          $CData = $query->execute()->fetchAssoc();            
          if(isset($CData) && !empty($CData)){      
            $node->field_location_zone_address['und'][0]['thoroughfare'] = $CData['field_facility_address_thoroughfare'];
            $node->field_location_zone_address['und'][0]['premise'] = $CData['field_facility_address_premise'];
            $node->field_location_zone_address['und'][0]['locality'] = $CData['field_facility_address_locality'];
            $node->field_location_zone_address['und'][0]['administrative_area'] = $CData['field_facility_address_administrative_area'];
            $node->field_location_zone_address['und'][0]['postal_code'] = $CData['field_facility_address_postal_code'];
          }
        }
      } 
      if(isset($values['config_location_location_numberoffloor']) && !empty($values['config_location_location_numberoffloor'])){
        $FloorCount = count($values['config_location_location_numberoffloor']);
        $node->field_location_floor_count['und'][0]['value'] = $FloorCount; 
        $FCount = 0;
        foreach($values['config_location_location_numberoffloor'] as $numberoffloorkey=>$vv){
          $node->field_location_floors['und'][$FCount]['value'] = $numberoffloorkey;
          $FCount ++;
        }
        $locationFloor = 0;
        $node->field_location_floor_name = '';      
        $node->field_location_total_sf = '';
        $node->field_location_sf = '';
        $node->field_location_floor_percentage = '';
        for($i=0; $i<$FloorCount; $i++){
          ++$locationFloor;
          if (isset($values['floor_'.$locationFloor]) && isset($values['sf_'.$locationFloor])) {
            $node->field_location_floor_name['und'][$i]['value'] = $values['floor_'.$locationFloor];
            $node->field_location_total_sf['und'][$i]['value'] = $values['sf_'.$locationFloor];
            $node->field_location_sf['und'][$i]['value'] = check_plain($form_state['input']['floorratiovalue_'.$locationFloor]);
            $node->field_location_floor_percentage['und'][$i]['value'] = check_plain($form_state['input']['floorratio_'.$locationFloor]);
          }
          ++$FCount;  
        }
      }
    
      node_save($node);
    }else{
      $node = new stdClass();   
      $node->title = $values['config_location_location_title'];
      $node->uid = $user->uid;
      $node->type = $values['add_ntype'];
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_location_description['und'][0]['value'] = $values['config_location_zone_description'];
      $node->field_location_room_number['und'][0]['value'] = $values['config_location_location_roomnumber'];
      if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility']))
        $node->field_location_facility['und'][0]['target_id'] = $values['config_location_pick_facility'];
      if(isset($values['config_location_facility_facilitytype']) && !empty($values['config_location_facility_facilitytype']))
        $node->field_location_department['und'][0]['target_id'] = $values['config_location_facility_facilitytype'];    
      if(isset($values['config_location_location_country']) && !empty($values['config_location_location_country']))
        $node->field_location_zone_address['und'][0]['country'] = $values['config_location_location_country'];
      $node->field_use_same_address_facility['und'][0]['value'] = $values['config_location_location_addresscopy'];
      if(isset($values['config_location_location_addresscopy']) && $values['config_location_location_addresscopy'] == 0){           
        if(isset($values['config_location_location_address1']) && !empty($values['config_location_location_address1']))
          $node->field_location_zone_address['und'][0]['thoroughfare'] = $values['config_location_location_address1'];
        if(isset($values['config_location_location_address2']) && !empty($values['config_location_location_address2']))
          $node->field_location_zone_address['und'][0]['premise'] = $values['config_location_location_address2'];
        if(isset($values['config_location_location_city']) && !empty($values['config_location_location_city']))
          $node->field_location_zone_address['und'][0]['locality'] = $values['config_location_location_city'];
        if(isset($values['config_location_location_state']) && !empty($values['config_location_location_state']))
          $node->field_location_zone_address['und'][0]['administrative_area'] = $values['config_location_location_state'];
        if(isset($values['config_location_location_zipcode']) && !empty($values['config_location_location_zipcode']))
          $node->field_location_zone_address['und'][0]['postal_code'] = $values['config_location_location_zipcode'];
      }else if(isset($values['config_location_location_addresscopy']) && $values['config_location_location_addresscopy'] == 1){   
        if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility'])){        
          $query= db_select('field_data_field_facility_address', 'flr');  
          $query->fields('flr',array('field_facility_address_country','field_facility_address_thoroughfare','field_facility_address_premise','field_facility_address_locality','field_facility_address_administrative_area','field_facility_address_postal_code'));
          $query->condition('flr.entity_id', $values['config_location_pick_facility'] , '=');
          $query->condition('flr.bundle', 'fm_facility' , '=');     
          $CData = $query->execute()->fetchAssoc(); 
              
          if(isset($CData) && !empty($CData)){      
            $node->field_location_zone_address['und'][0]['thoroughfare'] = $CData['field_facility_address_thoroughfare'];
            $node->field_location_zone_address['und'][0]['premise'] = $CData['field_facility_address_premise'];
            $node->field_location_zone_address['und'][0]['locality'] = $CData['field_facility_address_locality'];
            $node->field_location_zone_address['und'][0]['administrative_area'] = $CData['field_facility_address_administrative_area'];
            $node->field_location_zone_address['und'][0]['postal_code'] = $CData['field_facility_address_postal_code'];
          }
        }
      }
      if(isset($values['config_location_location_numberoffloor']) && !empty($values['config_location_location_numberoffloor'])){
        $FloorCount = count($values['config_location_location_numberoffloor']);
        $node->field_location_floor_count['und'][0]['value'] = $FloorCount; 
        $FCount = 0;
        foreach($values['config_location_location_numberoffloor'] as $numberoffloorkey=>$vv){
          $node->field_location_floors['und'][$FCount]['value'] = $numberoffloorkey;
          $FCount ++;
        }
        $locationFloor = 0;
        $node->field_location_floor_name = '';      
        $node->field_location_total_sf = '';
        $node->field_location_sf = '';
        $node->field_location_floor_percentage = '';
        for($i=0; $i<$FloorCount; $i++){
          ++$locationFloor;
          if (isset($values['floor_'.$locationFloor]) && isset($values['sf_'.$locationFloor])) {
            $node->field_location_floor_name['und'][$i]['value'] = $values['floor_'.$locationFloor];
            $node->field_location_total_sf['und'][$i]['value'] = $values['sf_'.$locationFloor];
            $node->field_location_sf['und'][$i]['value'] = check_plain($form_state['input']['floorratiovalue_'.$locationFloor]);
            $node->field_location_floor_percentage['und'][$i]['value'] = check_plain($form_state['input']['floorratio_'.$locationFloor]);
          }
          ++$FCount;  
        }
      }
      node_save($node);
    } 
  }  
  if($values['add_ntype'] == 'fm_risk_rank'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_riskrank_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_riskrank_description['und'][0]['value'] = $values['config_riskrank_description'];
    $node->field_riskrank_order['und'][0]['value'] = $values['config_riskrank_order'];
    $node->field_riskrank_goal['und'][0]['value'] = $values['config_riskrank_goal'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_riskrank_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_riskrank_description['und'][0]['value'] = $values['config_riskrank_description'];
    $node->field_riskrank_order['und'][0]['value'] = $values['config_riskrank_order'];
    $node->field_riskrank_goal['und'][0]['value'] = $values['config_riskrank_goal'];
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_asset_system'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_asset_system_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_system_description['und'][0]['value'] = $values['config_asset_system_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_asset_system_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_system_description['und'][0]['value'] = $values['config_asset_system_description'];    
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_asset_sub_system'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_asset_subsystem_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    if(isset($values['config_asset_subsystem_pick_system']) && !empty($values['config_asset_subsystem_pick_system']))
      $node->field_asset_system_list['und'][0]['target_id'] = $values['config_asset_subsystem_pick_system'];
    $node->field_subsystem_description['und'][0]['value'] = $values['config_asset_subsystem_description'];
    
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_asset_subsystem_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    if(isset($values['config_asset_subsystem_pick_system']) && !empty($values['config_asset_subsystem_pick_system']))
      $node->field_asset_system_list['und'][0]['target_id'] = $values['config_asset_subsystem_pick_system'];
    $node->field_subsystem_description['und'][0]['value'] = $values['config_asset_subsystem_description'];    
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_asset_device_type'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_asset_devicetype_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_devicetype_description['und'][0]['value'] = $values['config_asset_devicetype_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_asset_devicetype_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_devicetype_description['und'][0]['value'] = $values['config_asset_devicetype_description'];    
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_asset_status'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_asset_status_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_asset_status_description['und'][0]['value'] = $values['config_asset_status_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_asset_status_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_asset_status_description['und'][0]['value'] = $values['config_asset_status_description'];    
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_account_number'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_account_number_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_account_number_number['und'][0]['value'] = $values['config_account_number'];
    $node->field_account_number_description['und'][0]['value'] = $values['config_account_number_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_account_number_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_account_number_number['und'][0]['value'] = $values['config_account_number'];
    $node->field_account_number_description['und'][0]['value'] = $values['config_account_number_description'];    
    node_save($node);
  }
  }
  
  
  
  if($values['add_ntype'] == 'fm_problem_code'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_problemcode_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_problemcode_description['und'][0]['value'] = $values['config_wo_problemcode_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_problemcode_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_problemcode_description['und'][0]['value'] = $values['config_wo_problemcode_description'];  
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_work_order_type'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_workordertype_description['und'][0]['value'] = $values['config_wo_type_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_type_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_workordertype_description['und'][0]['value'] = $values['config_wo_type_description'];  
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_work_order_status'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_status_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_wo_status_description‎['und'][0]['value'] = $values['config_wo_status_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_status_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_wo_status_description‎['und'][0]['value'] = $values['config_wo_status_description'];  
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_skill'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_skill_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_skill_description['und'][0]['value'] = $values['config_wo_skill_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_skill_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_skill_description['und'][0]['value'] = $values['config_wo_skill_description'];  
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_priorty'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_priorty_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_priorty_description['und'][0]['value'] = $values['config_wo_priorty_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_priorty_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_priorty_description['und'][0]['value'] = $values['config_wo_priorty_description'];  
    node_save($node);
  }
  }
  if($values['add_ntype'] == 'fm_resource'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_resource_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_resource_description['und'][0]['value'] = $values['config_wo_resource_description'];
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = $values['add_ntype'];
    $node->title = $values['config_wo_resource_title'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid;
    $node->field_resource_description['und'][0]['value'] = $values['config_wo_resource_description'];  
    node_save($node);
  }
  }
  
  if($values['add_ntype'] == 'fm_special_tag'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
      $node = node_load($values['node_nid']);
        $node->title = $values['config_wo_special_tag_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_special_tag_description['und'][0]['value'] = $values['config_wo_special_tag_description'];
      node_save($node);
    }else{
      $node = new stdClass();
      $node->type = $values['add_ntype'];
      $node->title = $values['config_wo_special_tag_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_special_tag_description['und'][0]['value'] = $values['config_wo_special_tag_description'];  
      node_save($node);
    }
  }
  
  if($values['add_ntype'] == 'fm_needed_permit'){
    if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
      $node = node_load($values['node_nid']);
      $node->title = $values['config_wo_needed_permit_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_needed_permit_description['und'][0]['value'] = $values['config_wo_needed_permit_description'];
      node_save($node);
    }else{
      $node = new stdClass();
      $node->type = $values['add_ntype'];
      $node->title = $values['config_wo_needed_permit_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_needed_permit_description['und'][0]['value'] = $values['config_wo_needed_permit_description'];  
      node_save($node);
    }
  }
  
  
  
   if($values['add_ntype'] == 'fm_preferred_vendor'){  //drup_msg($values);
    if(isset($values['fm_preferred_vendor_node_nid']) && !empty($values['fm_preferred_vendor_node_nid']) && is_numeric($values['fm_preferred_vendor_node_nid'])){
      $node = node_load($values['fm_preferred_vendor_node_nid']);
      $node->title = $values['config_preferred_vendors_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_pref_vendor_description['und'][0]['value'] = $values['config_preferred_vendors_description'];
      $node->field_pref_vendor_country['und'][0]['value'] = $values['config_preferred_vendors_country'];
      $node->field_pref_vendor_state['und'][0]['value'] = $values['config_preferred_vendors_state'];
      $node->field_pref_vendor_city['und'][0]['value'] = $values['config_preferred_vendors_city'];    
      if(isset($values['vander']) && !empty($values['vander'])){
        $node->field_pref_vendor_com_users['und'] = '';
        foreach($values['vander'] as $uniKey => $uniValue){
         $Vcom = $uniValue['config_preferred_vendors_company'];
         $Vuser = $uniValue['config_preferred_vendors_user'];
          $node->field_pref_vendor_com_users['und'][]['value'] = json_encode(array('company'=>$Vcom,'users'=>$Vuser));
        }
      }
      node_save($node);
    }else{    
      $node = new stdClass();
      $node->type = $values['add_ntype'];
      $node->title = $values['config_preferred_vendors_title'];
      $node->uid = $user->uid;
      $node->og_group_ref['und'][0]['target_id'] = $company->nid;
      $node->field_pref_vendor_description['und'][0]['value'] = $values['config_preferred_vendors_description'];
      $node->field_pref_vendor_country['und'][0]['value'] = $values['config_preferred_vendors_country'];
      $node->field_pref_vendor_state['und'][0]['value'] = $values['config_preferred_vendors_state'];
      $node->field_pref_vendor_city['und'][0]['value'] = $values['config_preferred_vendors_city'];
      if(isset($values['vander']) && !empty($values['vander'])){
        foreach($values['vander'] as $uniKey => $uniValue){
          $Vcom = $uniValue['config_preferred_vendors_company'];
          $Vuser = $uniValue['config_preferred_vendors_user'];
          $node->field_pref_vendor_com_users['und'][]['value'] = json_encode(array('company'=>$Vcom,'users'=>$Vuser));
        }
      }
      node_save($node);
    }
  }  
  // after submit redrict page
  if (isset($values) && !empty($values['add_ntype'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_location_region'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_region')));
    }else if($values['add_ntype'] == 'fm_location_site'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_site')));
    }else if($values['add_ntype'] == 'fm_facility'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_facility')));
    }else if($values['add_ntype'] == 'fm_location_location'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_location')));
    }else if($values['add_ntype'] == 'fm_facility_type'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_facilitytype')));
    }
    else if($values['add_ntype'] == 'fm_asset_system'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_system')));
    }
    else if($values['add_ntype'] == 'fm_asset_sub_system'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_subsystem')));
    }
    else if($values['add_ntype'] == 'fm_asset_device_type'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_device_type')));
    }
    else if($values['add_ntype'] == 'fm_asset_device'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_device')));
    }
    else if($values['add_ntype'] == 'fm_asset_status'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_status')));
    }
    else if($values['add_ntype'] == 'fm_account_number'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_fm_account_number')));
    }
    else if($values['add_ntype'] == 'fm_risk_rank'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_fm_risk_rank')));
    } 
    else if($values['add_ntype'] == 'fm_problem_code'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_problemcode')));
    }
    else if($values['add_ntype'] == 'fm_work_order_type'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_type')));
    }
    else if($values['add_ntype'] == 'fm_work_order_status'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_status')));
    }
    else if($values['add_ntype'] == 'fm_skill'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_skill')));
    }
    else if($values['add_ntype'] == 'fm_priorty'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_priorty')));
    } 
    else if($values['add_ntype'] == 'fm_special_tag'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_specialtag')));
    }
    else if($values['add_ntype'] == 'fm_needed_permit'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_neededpermit')));
    }
    else if($values['add_ntype'] == 'fm_resource'){
      drupal_goto($redirect, array('query'=>array('configresourceactivetab'=>'config_workorder_resource')));
    }
    else if($values['add_ntype'] == 'fm_resource'){
      drupal_goto($redirect, array('query'=>array('configresourceactivetab'=>'config_workorder_preferredvendors')));
    }   
  }
}

function hcfm_asset_add_assettype_form($form,&$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['add_asset_type_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Name'),
  '#required' => TRUE,
  );
  $form['add_asset_type_description'] = array(
  '#type' => 'textarea',
  '#title' => t('Description'),
  );  
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'asset_types');
  $form['user_uid'] = array('#type' => 'value', '#value' => $user->uid);
  $form['company_nid'] = array('#type' => 'value', '#value' => $company->nid);
  $form['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );

  return $form;
}

function config_facility_type_container($element){
  $element['main-container']= array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('row')),
  );
  $element['main-container']['left-container']= array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','facilitytype-details-left')),
    '#weight' => 1,
  );
  $element['main-container']['right-container']= array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','facilitytype-details-right')),
    '#weight' => 2,
  );
  $element['main-container']['left-container']['facility_type'] = array(
    '#markup' => drupal_render(drupal_get_form('hcfm_add_config_facilitytype_form')),
  );
  $element['main-container']['right-container']['facility_area_type'] = array(
    '#markup' => drupal_render(drupal_get_form('hcfm_add_config_facility_areatype_form')),
  );  
  return $element;
}



function hcfm_add_config_facilitytype_form($form,&$form_state){
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  global $user, $company;
  $form['#prefix'] = '<div class="clearfix relative">';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 

  $form['main-container-main']= array(
    '#type' => 'container', 
    '#prefix' => '<div class="facilitytype-create-container margin-bottom-10">',
    '#suffix' => '</div>',
  );
  $form['main-container-main']['config_facility_type_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Facility Type Name'),
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'config_facility_type_title'
      )
    ),
    '#required' => TRUE,
  );
  $form['main-container-main']['config_facility_type_description'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_facility_type_description'
    )
  ),
  '#title' => t('Description'),
  );  
  $form['facility_type_node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'facility_type_node_nid'
    )
  ),  
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_facility_type');
  $form['user_uid'] = array('#type' => 'value', '#value' => $user->uid);
  $form['company_nid'] = array('#type' => 'value', '#value' => $company->nid);
  $form['main-container-main']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container-main']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-facility-type">',  
  );
  $header = array('Facility Type Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_facility_type',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data, 
  );
 
  return $form;
}

function hcfm_add_config_facilitytype_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_facility_type');
  if(in_array($values['config_facility_type_title'],$NodeData) && empty($values['facility_type_node_nid'])){  
  form_set_error ('config_facility_type_title','already exists " '.$values['config_facility_type_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_facility_type_title'])) {
  $redirect = '/hcfm/add/configure';
  if($values['add_ntype'] == 'fm_facility_type'){
    drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_facilitytype')));
  }
  }
}


function hcfm_add_config_facility_areatype_form($form,&$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-facilitytype hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-facilitytype-link green-round-btn" title="Create New Facility Type">
      <i class="glyphicon glyphicon-plus"></i> New Facility Type
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 

  $form['main-container-main']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="facilitytype-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );  
  $form['main-container-main']['config_facility_area_type_title'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_facility_area_type_title'
    )
  ),
  '#title' => t('Area Type Name'),
  '#required' => TRUE,
  );
  $form['main-container-main']['config_facility_area_type_description'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_facility_area_type_description'
    )
  ),
  '#title' => t('Description'),
  ); 
  $form['facility_area_type_node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'facility_area_type_node_nid'
    )
  ),  
  );
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_facility_area_type');
  $form['user_uid'] = array('#type' => 'value', '#value' => $user->uid);
  $form['company_nid'] = array('#type' => 'value', '#value' => $company->nid);
  $form['main-container-main']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container-main']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-facility-area-type">', 
  );
  $header1 = array('Area Type Name','Description','Action'); 
  $table_data1 = hcfm_table_content(0,0,'fm_facility_area_type',$header1);
  $form['table_datiles1'] = array(
    '#markup' => $table_data1,
  );
  return $form;
}

function hcfm_add_config_facility_areatype_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_facility_area_type');
  if(in_array($values['config_facility_area_type_title'],$NodeData) && empty($values['facility_area_type_node_nid'])){  
  form_set_error ('config_facility_area_type_title','already exists " '.$values['config_facility_area_type_title'].' "'); 
  }  
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_facility_area_type_title'])) {
  $redirect = '/hcfm/add/configure';
  if($values['add_ntype'] == 'fm_facility_area_type'){
    drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_facilitytype')));
  }
  }
}

function hcfm_add_config_asset_status_form($form,&$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-assetstatus hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-assetstatus-link green-round-btn" title="Create New Asset Status">
      <i class="glyphicon glyphicon-plus"></i> New Asset Status
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="assetstatus-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_asset_status_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Status Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_status_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_asset_status_description'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_status_description'
    )
  ),
  '#title' => t('Description'),
  );  
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_asset_status');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-asset-status">',    
  );
  $header = array('Status Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_asset_status',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_add_config_asset_status_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_asset_status');
  if(in_array($values['config_asset_status_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_asset_status_title','already exists " '.$values['config_asset_status_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_asset_status_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_asset_status'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_status')));
    }
  }
}

function hcfm_add_config_account_number_form($form,&$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-accountnumber hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-accountnumber-link green-round-btn" title="Create New Department">
      <i class="glyphicon glyphicon-plus"></i> New Department
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="accountnumber-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_account_number_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Department Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_account_number_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_account_number'] = array(
  '#type' => 'textfield',
  '#title' => t('Cost Center'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_account_number'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_account_number_description'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_account_number_description'
    )
  ),
  '#title' => t('Description'),
  );  
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_account_number');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )

  ),    
  ); 
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
 $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-account-number">',    
  );
  $header = array('Cost Center','Department Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_account_number',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_add_config_account_number_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData1 = hcfm_nodenid_nodetitle_by_node_type('fm_account_number');
  if(in_array($values['config_account_number_title'],$NodeData1) && empty($values['node_nid'])){  
  form_set_error ('config_account_number_title','already exists " '.$values['config_account_number_title'].' "'); 
  }
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_account_number_number','fann','fann.entity_id=n.nid'); 
  $query->fields('n',array('nid'));
  $query->fields('fann',array('field_account_number_number_value'));
  $query->condition('n.type','fm_account_number','=');
  $NodeData2 = $query->execute()->fetchAllKeyed();
  
  if(in_array($values['config_account_number'],$NodeData2) && empty($values['node_nid'])){  
  form_set_error ('config_account_number','already exists " '.$values['config_account_number'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && (empty($values['config_account_number_title']) || empty($values['config_account_number']))) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_account_number'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_fm_account_number')));
    }
  }
}

function hcfm_asset_add_assetfacility_form($form,&$form_state){
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  /*global $user, $company;
  if(empty($form_state['hcfm_form_storage_main'])){
    $tempIdentifer = uniqid();
    $form_state['hcfm_form_storage_main'][]  = $tempIdentifer;
  $form_state['hcfm_form_storage'][$tempIdentifer] = array(); 
  } 
  $form['hcfm_form_container'] = array(
  '#type' => 'container',
  '#attributes' => array('class'=> array('hcfm-form-main-container')),
  '#prefix' => '<div id="hcfm-form-main-container-section" class="clearfix">',
  '#suffix' => '</div>',
  '#process' => array('hcfm_form_container_process'),
  );
  return $form;
*/}

function hcfm_form_container_process($elements, &$form_state){
  global $user,$company;
  $storage = $form_state['hcfm_form_storage_main'];
  $elements['#storage'] = $storage;
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  module_load_include('inc', 'addressfield', 'addressfield.administrative_areas');
  $fieldsetTitle = 'Asset Facility';
  foreach ($storage as $key => $uniqId) {
    $form['facility_section_group'][$uniqId] = array(
    '#type' => 'container',
    '#attributes' => array('class'=> array('facility-container'.$uniqId,'facility-container-item')),        
    );
    $facility_location_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
    $elements['facility_section_group'][$uniqId]['add_asset_facility_region'] = array (
      '#type' => 'select',
    '#title' => ('Region'),
    //'#name' => 'add_asset_facility_region_'.$uniqId,
    '#attributes' => array(
      'class'=> array(
      'asset-facility-region'
      )
    ),
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_region'),
    '#options' => $facility_location_region,
    '#empty_option' => t('- Select -'),
    '#required' => TRUE,
    '#prefix' => '<div class="row"><div class="col-md-6">',
      '#suffix' => '</div>',
    );
    $elements['facility_section_group'][$uniqId]['add_asset_facility_title'] = array(
      '#type' => 'textfield',
    '#title' => t('Facility Name'),
    //'#name' => 'add_asset_facility_title_'.$uniqId,
    //'#name' => $uniqId,
    //'#default_value' => '',//$subUniqueId,
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_title'),
    '#attributes' => array(
      'class'=> array(
      'asset-facility-title'
      )
    ),
    '#required' => TRUE,
    '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div></div>',
    );
    
    /*$facility_facility_type = hcfm_nodenid_nodetitle_by_node_type('facility_type');
    $elements['facility_section_group'][$uniqId]['add_asset_facility_type'] = array (
      '#type' => 'select',
    '#title' => ('Facility Type'),
    //'#name' => 'add_asset_facility_type_'.$uniqId,
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_type'),
    '#attributes' => array(
      'class'=> array(
      'asset-facility-type'
      )
    ),
    '#options' => $facility_facility_type,
    '#empty_option' => t('- Select -'),
    );*/
    
    $elements['facility_section_group'][$uniqId]['add_asset_facility_building'] = array(
    '#type' => 'textfield',
    '#title' => t('Area Name'),
    //'#name' => 'add_asset_facility_building_'.$uniqId,
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_building'),
    '#attributes' => array(
      'class'=> array(
      'asset-facility-building'
      )
    ),
    //'#required' => TRUE,
    '#prefix' => '<div class="row"><div class="col-md-6">',
      '#suffix' => '</div>',
    );
    $elements['facility_section_group'][$uniqId]['add_asset_facility_floor'] = array(
    '#type' => 'textfield',
    '#title' => t('Floor / Suite No.'),
    //'#name' => 'add_asset_facility_floor_'.$uniqId,
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_floor'),
    '#attributes' => array(
      'class'=> array(
      'asset-facility-floor'
      )
    ),
    //'#required' => TRUE,
    '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div></div>',
    );
    $elements['facility_section_group'][$uniqId]['add_asset_facility_status'] = array (
      '#type' => 'select',
    '#title' => ('Status'),
    //'#name' => 'add_asset_facility_status_'.$uniqId,
    '#parents' => array('facility_data',$uniqId,'add_asset_facility_status'),
    '#attributes' => array(
      'class'=> array(
      'asset-facility-status'
      )
    ),
    '#options' => array(
      'active' => t('Active'),
      'inactive' => t('Inactive'),
    ),
    '#empty_option' => t('- Select -'),
    '#prefix' => '<div class="row"><div class="col-md-6">',
      '#suffix' => '</div>',
    );
    $elements['facility_section_group'][$uniqId]['fa_country'] = array(
    '#type' => 'select',  
    '#title' => t('Country'),
    '#parents' => array('facility_data',$uniqId,'fa_country'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-country'
      )
    ),
    '#options' => $countryNamesList,
    '#empty_option' => t('- Select -'),
    //'#default_value' => 'US',
    '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div></div>',
    );
    $elements['facility_section_group'][$uniqId]['fa_country_value'] = array(
    '#type' => 'hidden',
    '#parents' => array('facility_data',$uniqId,'fa_country_value'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-country-value'
      )
    ),  
    );
    $elements['facility_section_group'][$uniqId]['fa_address1'] = array(
    '#type' => 'textfield', 
    '#title' => t('Address1'),
    '#parents' => array('facility_data',$uniqId,'fa_address1'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-address1'
      )
    ),    
    );   
    $elements['facility_section_group'][$uniqId]['fa_address2'] = array(
    '#type' => 'textfield', 
    '#title' => t('Address2'),
    '#parents' => array('facility_data',$uniqId,'fa_address2'),
    '#attributes' => array(
      'class'=> array(
      'wo-region-address2'
      )
    ),
    
    );
    $elements['facility_section_group'][$uniqId]['fa_city'] = array(
    '#type' => 'textfield', 
    '#title' => t('City'),
    '#parents' => array('facility_data',$uniqId,'fa_city'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-city'
      )
    ),
    '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
    );
    $administrativeNamesList = addressfield_get_administrative_areas('US');
    $elements['facility_section_group'][$uniqId]['fa_state'] = array(
    '#type' => 'select',  
    '#title' => t('State'),
    '#parents' => array('facility_data',$uniqId,'fa_state'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-state'
      )
    ),
    '#options' => _get_default_state(),
    '#validate' => TRUE,
    '#empty_option' => t('- Select -'),
    '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div>',
    );
    $elements['facility_section_group'][$uniqId]['fa_state_value'] = array(
    '#type' => 'hidden',
    '#parents' => array('facility_data',$uniqId,'fa_state_value'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-state-value'
      )
    ),  
    );
    $elements['facility_section_group'][$uniqId]['fa_zipcode'] = array(
    '#type' => 'textfield', 
    '#title' => t('Zip Code'),
    '#parents' => array('facility_data',$uniqId,'fa_zipcode'),
    '#attributes' => array(
      'class'=> array(
      'fa-region-zipcode'
      )
    ),
    '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    
   
    $elements['facility_section_group'][$uniqId]['remove'] = array(
      '#type' => 'submit',
    '#value' => 'Remove',
    '#name' => 'remove_'.$uniqId,
    '#parents' => array('facility_data',$uniqId,'remove'),
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('alert-container-section', 'workflow-remove-submit')),
    "#limit_validation_errors" => array(),
    '#submit'=> array('remove_hcfm_form_row_handler'),
      '#ajax' => array(
        'callback' => 'remove_hcfm_form_row_callback',
      'wrapper' => 'hcfm-form-main-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
      ),    
      );
    $elements['facility_section_group'][$uniqId]['node_nid'] = array(
      '#type' => 'hidden',
      '#parents' => array('facility_data',$uniqId,'node_nid'),
      '#attributes' => array(
      'class'=> array(
        'asset-facility-node-nid'
      )
      ),  
    ); 
    if(isset($form_state['hcfm_facility_default_value'][$uniqId])) {
      $stdefault = $form_state['hcfm_facility_default_value'][$uniqId];
    }
    }
    $elements['hcfm_workflow_add_new'] = array(
      '#type' => 'submit',
      '#value' => 'Add new',
      '#name' => 'hcfm_workflow_add_new',
      '#limit_validation_errors' => array(),
      '#submit'=> array('add_more_hcfm_submit_handler'),
      '#ajax' => array(
      'callback' => 'add_more_hcfm_action_callback',
      'wrapper' => 'hcfm-form-main-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
      ),
    );
  
  $elements['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-class-user-uid'
    )
  ),
  );
  $elements['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-class-company-nid'
    )
  ),
  );
  $elements['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),//
  '#value' => t('Save'),
  );
  $elements['add_ntype'] = array('#type' => 'value', '#value' => 'facility');
  $header = array('Asset Facility Number','Asset Facility Name','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'facility',$header);
  $elements['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $elements;
}

function add_more_hcfm_action_callback($form, &$form_state){
  return $form['hcfm_form_container'];
}

function add_more_hcfm_submit_handler(&$form, &$form_state){
  $triggerElement = $form_state['triggering_element'];
  if($triggerElement['#name'] == 'hcfm_workflow_add_new'){
    $tempIdentifer = uniqid();
    $form_state['hcfm_form_storage_main'][]  = $tempIdentifer;
  }
  $form_state['rebuild'] = TRUE;
}

function remove_hcfm_form_row_callback(&$form, &$form_state) {
  return $form['hcfm_form_container'];
}

function remove_hcfm_form_row_handler(&$form,&$form_state) { //pre($form_state,1);  
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#array_parents'][2];
  if(isset($form_state['hcfm_form_storage_main'])){
    foreach ($form_state['hcfm_form_storage_main'] as $key => $value) {
      if($form_state['hcfm_form_storage_main'][$key] == $identifier){   
        unset($form_state['hcfm_form_storage_main'][$key]);
      } 
    }             
  }   
  $form_state['rebuild'] = TRUE;
  
} 

function hcfm_asset_add_assetriskrank_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-assetriskrank hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-assetriskrank-link green-round-btn" title="Create New Risk Rank">
      <i class="glyphicon glyphicon-plus"></i> New Risk Rank
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container-main']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="assetriskrank-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['config_riskrank_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Risk Rank Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_riskrank_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container-main']['config_riskrank_description'] = array(
  '#type' => 'textarea',
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_riskrank_description'
    )
  ),
  );
  $form['main-container-main']['config_riskrank_order'] = array(
  '#type' => 'textfield',
  '#title' => t('Order'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_riskrank_order'
    )
  ),
  );
  $form['main-container-main']['config_riskrank_goal'] = array(
  '#type' => 'textfield',
  '#title' => t('Goal'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_riskrank_goal'
    )
  ),
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_risk_rank');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),
  );
  $form['main-container-main']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),  
  );
  $form['main-container-main']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container-main']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-riskrank">',    
  );
  $header = array('Risk Rank Name','Risk Rank Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_risk_rank',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_asset_add_assetriskrank_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_riskrank_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_risk_rank'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_fm_risk_rank')));
    }
  }
  if(in_array($values['config_riskrank_title'],$NodeData) && empty($values['node_nid'])){
  form_set_error ('config_riskrank_title','already exists " '.$values['config_riskrank_title'].' "'); 
  }
}

function hcfm_add_assetsystem_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-assetsystem hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-assetsystem-link green-round-btn" title="Create New System">
      <i class="glyphicon glyphicon-plus"></i> New System
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="assetsystem-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_asset_system_title'] = array(
  '#type' => 'textfield',
  '#title' => t('System Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_system_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_asset_system_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_system_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_asset_system');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  ); 
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  ); 
  $form['main-container']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-asset-system">',    
  ); 
  $header = array('System Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_asset_system',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_add_assetsystem_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_asset_system');
  
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_asset_system_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_asset_system'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_system')));
    }
  }
  if(in_array($values['config_asset_system_title'],$NodeData) && empty($values['node_nid'])){
  form_set_error ('config_asset_system_title','already exists " '.$values['config_asset_system_title'].' "'); 
  }
}


function hcfm_add_assetsubsystem_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-assetsubsystem hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-assetsubsystem-link green-round-btn" title="Create New Subsystem">
      <i class="glyphicon glyphicon-plus"></i> New Subsystem
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="assetsubsystem-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $fm_asset_system = hcfm_nodenid_nodetitle_by_node_type('fm_asset_system');
/*  $form['main-container']['config_asset_subsystem_pick_system'] = array(
  '#type' => 'select',
  '#options' => $fm_asset_system,
  '#empty_option' => t('- Select -'),
  '#title' => t('System'),
  '#attributes' => array(
    'class'=> array(
      'config_asset_subsystem_pick_system'
    )
  ),
  '#required' => TRUE,
  
  );*/
  $form['main-container']['config_asset_subsystem_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Subsystem Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_subsystem_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_asset_subsystem_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_subsystem_description'
    )
  ),
  //'#required' => TRUE,
  ); 
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_asset_sub_system');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),  
  );
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-asset-subsystem">',    
  );
  $header = array('Subsystem Name','Subsystem Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_asset_sub_system',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_add_assetsubsystem_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_asset_sub_system');
  if(in_array($values['config_asset_subsystem_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_asset_subsystem_title','already exists " '.$values['config_asset_subsystem_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_asset_subsystem_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_asset_sub_system'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_subsystem')));
    }
  }
}

function hcfm_add_assetdevicetype_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-assetdevicetype hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-assetdevicetype-link green-round-btn" title="Create New Subsystem">
      <i class="glyphicon glyphicon-plus"></i> New Device Type
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="assetdevicetype-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_asset_devicetype_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Device Type Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_devicetype_title'
    )
  ),
  '#required' => TRUE,
  ); 
  $form['main-container']['config_asset_devicetype_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_asset_devicetype_description'
    )
  ),
  //'#required' => TRUE,
  ); 
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_asset_device_type');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  ); 
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-asset-devicetype">',    
  );
  $header = array('Device Type Name','Device Type Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_asset_device_type',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_add_assetdevicetype_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('asset_device_type');
  if(in_array($values['config_asset_devicetype_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_asset_devicetype_title','already exists " '.$values['config_asset_devicetype_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_asset_devicetype_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_asset_device_type'){
      drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_asset_device_type')));
    }
  }
}



/********************** fm tye genranter start ***************************/
function hcfm_type_settings_form($form, &$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#attributes']['class'][] = 'modify-hcfm-type-settings-form'; 
 
  $form['#attached']['js'][] = array(
    'data'=>drupal_get_path('module', 'm6connect_hcfm') . '/js/hcfm-setting-form.js',
  'type'=>'file'
  );
  
  if(empty($form_state['rs_save_node_storage'])){
  $form_state['rs_save_node_storage'] = array();  
  }
  $form_state['rs_setting_node_storage'] = array();
  if(empty($form_state['rs_type_storage'])){
  $form_state['rs_type_storage'] = array();
  $RoutingSettingNodes = _get_fm_type_node_details();
  if($RoutingSettingNodes && !empty($RoutingSettingNodes)){
    foreach($RoutingSettingNodes as $nid => $settObj){
    $tempIdentifer = uniqid();
      $form_state['rs_type_storage'][$tempIdentifer]=$nid;
    $form_state['rs_setting_node_storage'][$tempIdentifer] = $settObj; 
    $form_state['rs_save_node_storage'][$tempIdentifer] = $settObj;
    }
    $tempIdentifer = uniqid();
    $form_state['rs_type_storage'][$tempIdentifer]='';
  }
  if(empty($form_state['rs_type_storage'])){
    $tempIdentifer = uniqid();
    $form_state['rs_type_storage'][$tempIdentifer]='';
  }
  }
  
  if(isset($form_state['values']) && isset($form_state['input']) && isset($form_state['triggering_element']) && isset($form_state['triggering_element']['#type'])){
  $triggering_element = $form_state['triggering_element'];
  $input = $form_state['input'];
  $values = $form_state['values'];
  if($triggering_element['#type'] == 'textfield' && count($triggering_element['#parents'])==3 && $triggering_element['#parents'][0]=='rstype' && $triggering_element['#parents'][2] == 'type_name'){
    $lastkey = key( array_slice( $values['rstype'], -1, 1, TRUE ) );
    $lastrow = $values['rstype'][$lastkey];
    $typeName = trim($lastrow['type_name']);
    if(!empty($typeName)){
    $tempIdentifer = uniqid();
      $form_state['rs_type_storage'][$tempIdentifer]=''; 
    }
  }
  }
  
  $form['type_container']= array(
    '#type'=>'container',
  '#title' => 'Workflow',
  '#theme' => 'hcfm_type_theme',
  '#tree' => TRUE,
  '#attributes' => array('class'=>array('rs-type-container-section')),
  '#prefix' => '<div id="rstype-container-section" class="margin-bottom-10"><div class="rstype-container-label routing-table-label">Customize your FM types:</div>',
    '#suffix' => '</div>',
  '#process' => array('hcfm_rs_type_process_callback'),
  );
  
  $form['action_container'] = array(
    '#type'=> 'container',
  '#prefix' => '<div class="action-container-section pull-left">',
  '#suffix' => '</div>',
  );  
  $form['action_container']['save']= array(
    '#type' => 'submit',
    '#value' => 'Save',
    '#name' => 'rstype_save',
    '#attributes'=> array('class'=>array('routing-rstype-action','routing-rstype-action-save')),
    '#validate' => array('fm_type_setting_rstype_validate_handler'),
    '#submit' => array('fm_type_setting_rstype_submit_handler'),
  );
  
  $form['routing_setting_type_dialog']= array(
  '#markup' => '<div id="routing-setting-type-dialog"></div>',
  );
  $header = array('Asset Type Number','Asset Type Name','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'fm_type_setting',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  $form['user_uid'] = array('#type' => 'value', '#value' => $user->uid);
  $form['company_nid'] = array('#type' => 'value', '#value' => $company->nid);
  return $form;
}
function fm_type_setting_rstype_validate_handler($form,&$form_state){
  $values = $form_state['values']['rstype'];
  $elementErrorCount = array('type_name'=>0,'type_prefix'=>0,'type_starting_number'=>0,'type_year_extention'=>0);
  $form_state['error_elements']= array();
  $lastkey = key( array_slice( $values, -1, 1, TRUE ) );
  foreach($values as $identifier => $elements){
  $type_name = trim($elements['type_name']);
    $type_prefix = trim($elements['type_prefix']);
    $type_starting_number = trim($elements['type_starting_number']);
  if($lastkey == $identifier){
    if(empty($type_name) && empty($type_prefix) && empty($type_starting_number)){
    continue;  
    }
  }
    if(empty($type_name)){
    $message = ($elementErrorCount['type_name']==0)?'Enter Valid FM Type':'';
    form_set_error('rstype]['.$identifier.'][type_name',$message);
    $form_state['error_elements'][] = 'input[name="rstype['.$identifier.'][type_name]"]'; 
    $elementErrorCount['type_name']++;
    } 
  
    if(strlen($type_prefix)<1 || strlen($type_prefix)>5){
    $message = ($elementErrorCount['type_prefix']==0)?'Enter Valid prefix, must contain 5 characters':'';
    form_set_error('rstype]['.$identifier.'][type_prefix',$message);
    $form_state['error_elements'][] = 'input[name="rstype['.$identifier.'][type_prefix]"]';
    $elementErrorCount['type_prefix']++;
    }
  
    if(!is_numeric($type_starting_number)){
    $message = ($elementErrorCount['type_starting_number']==0)?'Enter Valid Starting Number':'';
    form_set_error('rstype]['.$identifier.'][type_starting_number',$message);
    $form_state['error_elements'][] = 'input[name="rstype['.$identifier.'][type_starting_number]"]';
    $elementErrorCount['type_starting_number']++; 
    }

  }
}

function fm_type_setting_rstype_submit_handler($form,&$form_state){//drup_msg($form_state);
  global $user,$company;
  $values = $form_state['values']['rstype'];
  $lastkey = key( array_slice( $values, -1, 1, TRUE ) );
  foreach($values as $uniqueId => $dataArr){
  $node = array();
  $dataArr['type_name'] = trim($dataArr['type_name']);
  $dataArr['type_prefix'] = trim($dataArr['type_prefix']);
  $dataArr['type_starting_number'] = trim($dataArr['type_starting_number']);
  if(empty($dataArr['type_name']) || empty($dataArr['type_prefix']) || empty($dataArr['type_starting_number'])){
    continue; 
  }
  if(empty($form_state['rs_type_storage'][$uniqueId])){
    //$node = new stdClass();
    $node['type'] = 'fm_type_setting';
    //node_object_prepare($node);
    $node['og_audience'] = $company->nid;
    //$node->comment =0;
    $node['uid'] = $user->uid; 
    $node['field_rs_current_number']=0; 
  }else{
    if(isset($form_state['rs_save_node_storage'][$uniqueId])){
      $nodeValues = $form_state['rs_save_node_storage'][$uniqueId][$form_state['rs_type_storage'][$uniqueId]];    
    if($dataArr['type_name']!= $nodeValues['type_name'] || $dataArr['type_prefix']!= $nodeValues['type_prefix'] || $dataArr['type_starting_number']!= $nodeValues['type_starting_number']) {
      $node['nid'] = $form_state['rs_type_storage'][$uniqueId]; 
      
    }
      }  
  }
  
  $node['title'] = $dataArr['type_name'];
  $node['field_rs_prifix'] = $dataArr['type_prefix'];
  $node['field_rs_stating_number'] = $dataArr['type_starting_number'];
   
  hcfm_get_node_create_or_update($node);
  
  }
}

function hcfm_type_settings_access_callback(){
  global $user;
  $cmpNid = $_SESSION['company'];
  $userCmpRoles = og_get_user_roles('node', $cmpNid);
  $intersect = array_intersect(array_values($userCmpRoles),array('administrator member','company admin'));
  if(!empty($intersect)){
  return TRUE;  
  }
  return FALSE; 
}

function fm_type_setting_ajax_remove_callback($form, &$form_state){
  return $form['type_container'];   
}

function hcfm_rs_type_process_callback($element , &$form_state){
  $storage = $form_state['rs_type_storage'];
  $nodeStorage = $form_state['rs_setting_node_storage'];
  $element['#storage']= $storage;
  $currentDateYear = date('Y');
  foreach($storage as $uniqueId => $settingId){
  $nodevalue = array();
  if(isset($nodeStorage[$uniqueId])){
    $nodevalue = $nodeStorage[$uniqueId];
  } 
  $element['type_name'][$uniqueId]= array(
    '#type'=> 'textfield',
    //'#title' => 'FM Type:',
    '#attributes'=> array('class'=> array('form-control','rs-type-name')),
    '#parents' => array('rstype',$uniqueId,'type_name'),
    '#default_value' => (isset($nodevalue['type_name']))?$nodevalue['type_name']:'',
    //'#autocomplete_path' => 'hcfm/asset_types/autotitle',
    '#ajax' => array(
      'callback' => 'add_new_rs_type_row_callback',
    'wrapper' => 'rstype-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    ),
  );    
  $element['type_prefix'][$uniqueId]= array(
    '#type'=> 'textfield',
    //'#title' => 'Prefix:',
    '#attributes'=> array('class'=> array('form-control','rs-type-prefix'),'maxlength'=>5,'minlength'=>2),
    '#parents' => array('rstype',$uniqueId,'type_prefix'),
    '#size' =>15,
    '#default_value' => (isset($nodevalue['type_prefix']))?$nodevalue['type_prefix']:'',
  );
  $element['type_starting_number'][$uniqueId]= array(
    '#type'=> 'textfield',
    //'#title' => 'Starting Number:',
    '#attributes'=> array('class'=> array('form-control','rs-type-starting-number'),'maxlength'=>5,'onkeyup'=>'this.value=this.value.replace(/[^0-9]/g,"");'),
    '#parents' => array('rstype',$uniqueId,'type_starting_number'),
    '#size' =>25,
    '#default_value' => (isset($nodevalue['type_starting_number']))?$nodevalue['type_starting_number']:'',  
  );
  $element['type_starting_number_markup'][$uniqueId]= array(
    '#type'=> 'textfield',
    '#attributes'=> array('class'=> array('form-control','rs-type-starting-number-markup','form-disabled-field'),'data-year'=>'-'.$currentDateYear),
    '#parents' => array('rstype',$uniqueId,'type_starting_number_markup'),
    '#default_value' => (isset($nodevalue['type_starting_number_markup']))?$nodevalue['type_starting_number_markup']:'',
  );  
  $element['remove'][$uniqueId]= array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => 'remove_'.$uniqueId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('rs-type-save-submit','remove-routing-type-'.$uniqueId)),
    '#parents' => array('rstype',$uniqueId,'remove'),
    "#limit_validation_errors" => array(),
    '#submit'=> array('fm_type_remove_submit_handler'),
    '#ajax' => array(
    'callback' => 'fm_type_setting_ajax_remove_callback',
    'wrapper' => 'rstype-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'event' => 'click',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
     ),
  );
  if(!empty($settingId)){
    $element['remove'][$uniqueId]['#attributes']['style']='display:none;';
    $element['remove'][$uniqueId]['#prefix'] = l('<i class="fa fa-trash-o"></i>','javascript:void(0);',array('html'=>TRUE,'external'=>TRUE,'attributes'=>array('class'=>array('hcfm-rs-type-delete-link','rs-type-save-submit','form-submit'),'id'=>'remove-routing-type-'.$uniqueId)));
    }
  }
  return $element;  
}

function fm_type_remove_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1];
  if(isset($form_state['rs_type_storage'][$identifier])){
  if(!empty($form_state['rs_type_storage'][$identifier])){
    $NodeType = 'asset';
      $NodeNid = $form_state['rs_type_storage'][$identifier];
      $NodeArr = array('status'=>0);
      $params= hcfm_get_node_update($NodeType,$NodeNid,$NodeArr);
  }
    unset($form_state['rs_type_storage'][$identifier]);
  
  }
  if(!in_array('',array_values($form_state['rs_type_storage']))){
  $tempIdentifer = uniqid();
    $form_state['rs_type_storage'][$tempIdentifer]='';
  }
  $form_state['rebuild'] = TRUE;  
}

/********************** fm tye genranter end ***************************/

function _get_fm_type_node_details($nodeNid=''){
  $str = array('request'=>'request','nodeNid'=>$nodeNid);
  $postData = json_encode($str);
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "http://m6connectnewe5skxgn2js.devcloud.acquia-sites.com/hcfm/request/getfmtypenodedetails");
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
  curl_setopt($ch, CURLOPT_POST, true);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
  curl_setopt($ch, CURLOPT_HEADER, false);  
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Content-Length: ' . strlen($postData)                                                                       
  ));         
  // execute the request  
  $output = curl_exec($ch);   
  $output01 = json_decode($output,TRUE);
  return $output01;   
}

function theme_hcfm_type_theme($variables) {
  $element = $variables['form'];
  $output = '';
  $storage = $element['#storage'];
  $header = array('FM Type','Prefix','Starting Number','Starting Numbers','');
  $rows = array();
  foreach($storage as $uniqueId => $settingId){
    $rows[] = array(
    'data'=> array(
      array('data'=>drupal_render($element['type_name'][$uniqueId]),'class'=> array('rs-type-name-td')),
    array('data'=>drupal_render($element['type_prefix'][$uniqueId]),'class'=> array('rs-type-prefix-td')),
    array('data'=>drupal_render($element['type_starting_number'][$uniqueId]),'class'=> array('rs-type-starting-number-td')),
    //array('data'=>drupal_render($element['type_year_extention'][$uniqueId]),'class'=> array('rs-type-year-extention-td')),
    array('data'=>drupal_render($element['type_starting_number_markup'][$uniqueId]),'class'=> array('rs-type-number-markup-td')),
    array('data'=>drupal_render($element['remove'][$uniqueId]),'class'=> array('rs-type-save-remove-td','text-center')),
    
    ),
  ); 
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('routing-workflow-table'))));
  $output .= drupal_render_children($element);
  return $output;
}

function hcfm_node_delete_custom_callback($ajax, $nodeId = 0) {
  if ($ajax) {
    ctools_include('ajax');
  ctools_include('modal');
  $form_state = array(
            'ajax' => TRUE,
            'node_id' => $nodeId,
          );
    $output = ctools_modal_form_wrapper('hcfm_node_delete_form', $form_state);
  if (!empty($form_state['ajax_commands'])) {
    $output = $form_state['ajax_commands'];
    }
  print ajax_render($output);
  drupal_exit();

  }
  return drupal_get_form('hcfm_node_delete_form', $nodeId);
}

function hcfm_node_delete_form($form, &$form_state, $nodeId = 0) {
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  if(!$nodeId) {
    $nodeId = $form_state['node_id'];
  }
  $form['node_action_title'] = array(
    '#type' => 'markup',
  '#title' => t('status'),
  '#markup' => '<div class="group-action-status"><p>Are you sure you want to delete this Record ?</p></div>', 
  );
  $form['node_id'] = array(
    '#type' => 'hidden',
  '#value' => $nodeId, 
  );
  $form['submit_action_dgroup'] = array(
    '#type' => 'submit',
  '#value' => t('Confirm')
  );

  $form['submit_action_cancel']['close'] = array(
    '#markup' => '&nbsp;&nbsp;' . l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('group-delete-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();'))),
    '#weight' => 10,
  );
  return $form;
}
// function for delete group
function hcfm_node_delete_form_submit($form, &$form_state) {
  $form_values = $form_state['values'];
  $options = array();
  $nodeId = $form_state['node_id'];
  $nodeType = _get_node_type_by_nid($nodeId);
  if($nodeType == 'fm_asset') {
    $url = '/hcfm/asset';
  }
  if($nodeType == 'fm_work_order') {
    $url = '/hcfm/work_order';
  }
   if (isset($nodeType) && !empty($nodeType)) {
  if($nodeType == 'fm_location_region'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configlocationactivetab'=>'config_location_region'));
  }else if($nodeType == 'fm_location_site'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configlocationactivetab'=>'config_location_site'));
  }else if($nodeType == 'fm_facility'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configlocationactivetab'=>'config_location_facility'));
  }else if($nodeType == 'fm_location_location'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configlocationactivetab'=>'config_location_location'));
  }else if($nodeType == 'fm_facility_type'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configlocationactivetab'=>'config_location_facilitytype'));
  }
  /*else if($nodeType == 'fm_risk_rank'){
    $url = '/hcfm/add/configure';
  }*/
  else if($nodeType == 'fm_asset_system'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_asset_system'));
  }
  else if($nodeType == 'fm_asset_sub_system'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_asset_subsystem'));
  }
  else if($nodeType == 'fm_asset_device_type'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_asset_device_type'));
  }
  else if($nodeType == 'fm_asset_device'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_asset_device'));
  }
  else if($nodeType == 'fm_asset_status'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_asset_status'));
  }
  else if($nodeType == 'fm_account_number'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configassetactivetab'=>'config_fm_account_number'));
  }
  else if($values['add_ntype'] == 'fm_risk_rank'){
    drupal_goto($redirect, array('query'=>array('configassetactivetab'=>'config_fm_risk_rank')));
  }
  else if($nodeType == 'fm_problem_code'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_problemcode'));
  }
  else if($nodeType == 'fm_work_order_type'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_type'));
  }
  else if($nodeType == 'fm_work_order_status'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_status'));
  }
  else if($nodeType == 'fm_skill'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_skill'));
  }
  else if($nodeType == 'fm_priorty'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_priorty'));
  } 
  else if($nodeType == 'fm_special_tag'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_specialtag'));
  }
  else if($nodeType == 'fm_needed_permit'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configwoactivetab'=>'config_workorder_neededpermit'));
  }
  else if($nodeType == 'fm_resource'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configresourceactivetab'=>'config_workorder_resource'));
  }
  else if($nodeType == 'fm_preferred_vendor'){
    $url = '/hcfm/add/configure';
      $options = array('query'=>array('configresourceactivetab'=>'config_workorder_preferredvendors'));
  } 
  }
  
  if(!empty($nodeId)) { 
  node_delete($nodeId);
  drupal_set_message('Record has been deleted successfully!');  
    if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
      $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
    $form_state['ajax_commands'][] = ctools_ajax_command_redirect($url,$delay = 0, $options);
    }
  }
}

function hcfm_node_action_callback($NodeType,$NodeNid,$Action,$ajax){
  ctools_include('ajax');
  $commands = array();
  //Edit Section Callback
  if(isset($NodeType) && isset($NodeNid) && is_numeric($NodeNid) && $Action == 'edit'){
  if($NodeType == 'fm_asset'){
    $query = db_select('node','n'); 
    $query->fields('n',array('nid','title'));   
    $query->leftjoin('field_data_field_asset_number','nfan','nfan.entity_id=n.nid');
    $query->fields('nfan',array('field_asset_number_value'));
    $query->leftjoin('field_data_field_asset_manuafacturer','nfama','nfama.entity_id=n.nid');
    $query->fields('nfama',array('field_asset_manuafacturer_value'));
    $query->leftjoin('field_data_field_asset_model_number','nfamnu','nfamnu.entity_id=n.nid');
    $query->fields('nfamnu',array('field_asset_model_number_value'));
    $query->leftjoin('field_data_field_asset_serial_number','nfasn','nfasn.entity_id=n.nid');
    $query->fields('nfasn',array('field_asset_serial_number_value'));
    $query->leftjoin('field_data_field_asset_system','nfasy','nfasy.entity_id=n.nid');
    $query->fields('nfasy',array('field_asset_system_target_id'));
    $query->leftjoin('field_data_field_asset_sub_system','nfassy','nfassy.entity_id=n.nid');
    $query->fields('nfassy',array('field_asset_sub_system_target_id'));
    $query->leftjoin('field_data_field_asset_device_type','nfadty','nfadty.entity_id=n.nid');
    $query->fields('nfadty',array('field_asset_device_type_target_id'));
    $query->leftjoin('field_data_field_asset_device','nfadev','nfadev.entity_id=n.nid');
    $query->fields('nfadev',array('field_asset_device_value'));
    $query->leftjoin('field_data_field_asset_account_number','nfaanu','nfaanu.entity_id=n.nid');
    $query->fields('nfaanu',array('field_asset_account_number_target_id'));
    $query->leftjoin('field_data_field_asset_status','nfasta','nfasta.entity_id=n.nid');
    $query->fields('nfasta',array('field_asset_status_target_id'));
    $query->leftjoin('field_data_field_asset_priority_rr','nfarra','nfarra.entity_id=n.nid');
    $query->fields('nfarra',array('field_asset_priority_rr_target_id'));
    $query->leftjoin('field_data_field_asset_region','nfare','nfare.entity_id=n.nid');
    $query->fields('nfare',array('field_asset_region_target_id'));
    $query->leftjoin('field_data_field_asset_site','nfasit','nfasit.entity_id=n.nid');
    $query->fields('nfasit',array('field_asset_site_target_id'));
    $query->leftjoin('field_data_field_asset_facility','nfafac','nfafac.entity_id=n.nid');
    $query->fields('nfafac',array('field_asset_facility_target_id'));
    $query->leftjoin('field_data_field_asset_location','nfaloc','nfaloc.entity_id=n.nid');
    $query->fields('nfaloc',array('field_asset_location_target_id'));
    $query->leftjoin('field_data_field_asset_original_cost','nfaoco','nfaoco.entity_id=n.nid');
    $query->fields('nfaoco',array('field_asset_original_cost_value'));
    $query->leftjoin('field_data_field_asset_date_purchased','nfapur','nfapur.entity_id=n.nid');
    $query->fields('nfapur',array('field_asset_date_purchased_value'));
    $query->leftjoin('field_data_field_asset_date_received','nfawa','nfawa.entity_id=n.nid');
    $query->fields('nfawa',array('field_asset_date_received_value'));
    $query->leftjoin('field_data_field_asset_date_sold','nfaws','nfaws.entity_id=n.nid');
    $query->fields('nfaws',array('field_asset_date_sold_value'));
    $query->leftjoin('field_data_field_asset_replacement_cost','nfarco','nfarco.entity_id=n.nid');
    $query->fields('nfarco',array('field_asset_replacement_cost_value'));
    $query->leftjoin('field_data_field_asset_capital_item','nfacit','nfacit.entity_id=n.nid');
    $query->fields('nfacit',array('field_asset_capital_item_value'));
    $query->leftjoin('field_data_field_asset_life_cycle','nfalcy','nfalcy.entity_id=n.nid');
    $query->fields('nfalcy',array('field_asset_life_cycle_value'));
    $query->leftjoin('field_data_field_asset_description','nfad','nfad.entity_id=n.nid');
    $query->fields('nfad',array('field_asset_description_value'));
    $query->leftjoin('field_data_field_asset_comments','nfaco','nfaco.entity_id=n.nid');
    $query->fields('nfaco',array('field_asset_comments_value'));
    $query->leftjoin('field_data_field_asset_warranty_information','nfawin','nfawin.entity_id=n.nid');
    $query->fields('nfawin',array('field_asset_warranty_information_value'));
    
    $query->leftjoin('field_data_field_asset_pictures','nfafict','nfafict.entity_id=n.nid');
    $query->fields('nfafict',array('field_asset_pictures_fid'));
    
    $query->leftjoin('file_managed','filma','filma.fid=nfafict.field_asset_pictures_fid');
    $query->fields('filma');
    $query->condition('n.nid',$NodeNid,'=');
    $query->condition('n.type','fm_asset','=');
    $AssetData = $query->execute()->fetchAll();  
    
    $commands[] = ajax_command_invoke("input.as-asset-number", 'val',array($AssetData[0]->field_asset_number_value));
    $commands[] = ajax_command_invoke("input.as-asset-manuafacturer", 'val',array($AssetData[0]->field_asset_manuafacturer_value));
    $commands[] = ajax_command_invoke("input.as-asset-model-number", 'val',array($AssetData[0]->field_asset_model_number_value));
    $commands[] = ajax_command_invoke("input.as-asset-serial-number", 'val',array($AssetData[0]->field_asset_serial_number_value));   
    $commands[] = ajax_command_invoke("select.as-asset-system", 'val',array($AssetData[0]->field_asset_system_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-sub-system", 'val',array($AssetData[0]->field_asset_sub_system_target_id));
    $commands[] = ajax_command_invoke("select.as-asset_device_type", 'val',array($AssetData[0]->field_asset_device_type_target_id));
    $commands[] = ajax_command_invoke("input.as-asset_device", 'val',array($AssetData[0]->field_asset_device_value));
    $commands[] = ajax_command_invoke("select.as-asset-account-number", 'val',array($AssetData[0]->field_asset_account_number_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-status", 'val',array($AssetData[0]->field_asset_status_target_id));    
    $commands[] = ajax_command_invoke("select.as-asset-priority-rr", 'val',array($AssetData[0]->field_asset_priority_rr_target_id));    
    $commands[] = ajax_command_invoke("select.as-asset-region", 'val',array($AssetData[0]->field_asset_region_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-site", 'val',array($AssetData[0]->field_asset_site_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-facility", 'val',array($AssetData[0]->field_asset_facility_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-location", 'val',array($AssetData[0]->field_asset_location_target_id));
    $commands[] = ajax_command_invoke("input.as-asset-original-cost", 'val',array($AssetData[0]->field_asset_original_cost_value)); 
  
      if(isset($AssetData[0]->field_asset_date_purchased_value) && !empty($AssetData[0]->field_asset_date_purchased_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-purchased", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_purchased_value))));
    }
    if(isset($AssetData[0]->field_asset_date_received_value) && !empty($AssetData[0]->field_asset_date_received_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-received", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_received_value))));
    }
    if(isset($AssetData[0]->field_asset_date_sold_value) && !empty($AssetData[0]->field_asset_date_sold_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-sold", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_sold_value))));
    }
    $commands[] = ajax_command_invoke("input.as-asset-replacement-cost", 'val',array($AssetData[0]->field_asset_replacement_cost_value));
    $commands[] = ajax_command_invoke("select.as-asset-capital-item", 'val',array($AssetData[0]->field_asset_capital_item_value));
    $commands[] = ajax_command_invoke("input.as-asset-life-cycle", 'val',array($AssetData[0]->field_asset_life_cycle_value));
       
    $commands[] = ajax_command_invoke("input.as-asset-description", 'val',array($AssetData[0]->field_asset_description_value));
    $commands[] = ajax_command_invoke("textarea.asset-comments", 'val',array($AssetData[0]->field_asset_comments_value));
    $commands[] = ajax_command_invoke("textarea.asset-warranty-information", 'val',array($AssetData[0]->field_asset_warranty_information_value));
    $commands[] = ajax_command_invoke("input.asset-node-nid", 'val',array($AssetData[0]->nid));
    
    
    if(isset($AssetData[0]->field_asset_pictures_fid) && !empty($AssetData[0]->field_asset_pictures_fid)){
      /*$commands[] = ajax_command_invoke("input.asset-picture-fid", 'val',array($AssetData[0]->field_asset_pictures_fid));
    $commands[] = ajax_command_invoke("input.asset-picture-url", 'val',array(file_create_url($AssetData[0]->uri)));
    
    $file_pic_img = '<img src="'.file_create_url($AssetData[0]->uri).'" style="height: 130px;width: 150px;">';
     $file_pic = '<div id="edit-asset-pictures-upload" class="asset-pictures form-managed-file">
  <span class="file"><img class="file-icon" alt="Image icon" title="'.$AssetData[0]->filemime.'" src="/modules/file/icons/image-x-generic.png"> <a href="'.file_create_url($AssetData[0]->uri).'" type="'.$AssetData[0]->filemime.'; length='.$AssetData[0]->filesize.'">'.$AssetData[0]->filename.'</a></span>
    <input type="submit" id="edit-asset-pictures-remove-button" name="asset_pictures_remove_button" value="Remove" class="form-submit use-ajax">
    <input type="hidden" name="asset_pictures[fid]" value="'.$AssetData[0]->field_asset_pictures_fid.'">
  </div>';
    $commands[] = ajax_command_html(".picture-preview-out", $file_pic_img);
    
    
    
    $commands[] = ajax_command_replace(".form-item-asset-pictures .asset-pictures",$file_pic);
    
    $commands[] = ajax_command_replace(".form-item-asset-pictures .asset-pictures", render($form['main-container']['right-container']['asset_pictures'][LANGUAGE_NONE][0]['value']['#default_value'] = $AssetData[0]->field_asset_pictures_fid));*/
    }
   
    
    
    ///////image////
    
    //$NodeObj11 = array('NodeType'=>'asset','TableJoin'=>'TableJoin','NodeNid'=>$NodeNid,'TableName'=>'m6connect_hcfm_revision_log','Fetch'=>'fetchAssoc','OrderBy'=>array('timestamp'=>'DESC')); 
   // $TableData11 =  _get_hcfm_db_request($NodeObj11);
   // $uTableData = unserialize($TableData11['node_asset']);
    if(isset($uTableData) && !empty($uTableData['node_asset_photos']) && is_numeric($uTableData['node_asset_photos_fid'])){
      $Assetpic = '<img src="'.$uTableData['node_asset_photos'].'" style="height: 130px;width: 150px;">';
      $commands[] = ajax_command_html(".picture-preview-out",$Assetpic);
    $commands[] = ajax_command_invoke("input.asset-picture-fid", 'val',array($uTableData['node_asset_photos_fid']));
    $commands[] = ajax_command_invoke("input.asset-picture-url", 'val',array($uTableData['node_asset_photos']));
    }
    else{
      $commands[] = ajax_command_html(".picture-preview-out",'');
    $commands[] = ajax_command_invoke("input.asset-picture-fid", 'val',array(''));
    $commands[] = ajax_command_invoke("input.asset-picture-url", 'val',array(''));
    }
    //$Assetpic = '<img src="http://m6connectg9kgomtyk4.devcloud.acquia-sites.com/sites/default/files/hcfm/asset/Testing_0.jpg" style="height: 130px;width: 150px;">';
    //$commands[] = ajax_command_html(".picture-preview-out",$Assetpic);
  }

  if($NodeType == 'fm_risk_rank'){
    $JoinField = array(
    'nfrrd-_value'=>'field_data_field_riskrank_description',
    'nfrro-_value'=>'field_data_field_riskrank_order',
    'nfrrg-_value'=>'field_data_field_riskrank_goal',   
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $AssetData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_riskrank_title", 'val',array($AssetData[0]['title']));  
    $commands[] = ajax_command_invoke("textarea.config_riskrank_description", 'val',array($AssetData[0]['field_riskrank_description_value']));  
    $commands[] = ajax_command_invoke("input.config_riskrank_order", 'val',array($AssetData[0]['field_riskrank_order_value']));
    $commands[] = ajax_command_invoke("input.config_riskrank_goal", 'val',array($AssetData[0]['field_riskrank_goal_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($AssetData[0]['nid'])); 
  } 
  
  //config location region
  if($NodeType == 'fm_location_region'){    
    $query= db_select('node', 'n');      
    $query->leftjoin('field_data_field_locationregion_description' ,'fld', 'fld.entity_id=n.nid');
    $query->leftjoin('field_data_field_locationregion_address' ,'fla' ,'fla.entity_id=n.nid');
    $query->fields('n',array('nid','title'));
    $query->fields('fld',array('field_locationregion_description_value'));
    $query->fields('fla',array('field_locationregion_address_country','field_locationregion_address_thoroughfare','field_locationregion_address_premise','field_locationregion_address_locality','field_locationregion_address_administrative_area','field_locationregion_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
           
    $commands[] = ajax_command_invoke("input.config_location_region_title", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_region_description", 'val',array($CData[0]->field_locationregion_description_value));
    //$commands[] = ajax_command_invoke("input.config_location_region_address", 'val',array($CData[0]['field_region_address_value']));
    
    $commands[] = ajax_command_invoke("select.config_location_region_country", 'val',array($CData[0]->field_locationregion_address_country));
    $commands[] = ajax_command_invoke("select.config_location_region_country", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("input.config_location_region_country_value", 'val',array($CData[0]['field_country_code_value_value']));
    $commands[] = ajax_command_invoke("input.config_location_region_address1", 'val',array($CData[0]->field_locationregion_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_region_address2", 'val',array($CData[0]->field_locationregion_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_region_city", 'val',array($CData[0]->field_locationregion_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_region_state", 'val',array($CData[0]->field_locationregion_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_region_state_key", 'val',array($CData[0]->field_locationregion_address_administrative_area));
    //$commands[] = ajax_command_invoke("input.config_location_region_state_value", 'val',array($CData[0]['field_state_code_value_value']));
    $commands[] = ajax_command_invoke("input.config_location_region_zipcode", 'val',array($CData[0]->field_locationregion_address_postal_code));
    
  
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]->nid));
  }
  //config location site
  if($NodeType == 'fm_location_site'){
    $query= db_select('node', 'n');
      $query->leftjoin('field_data_field_location_region' ,'flr', 'flr.entity_id=n.nid');      
    $query->leftjoin('field_data_field_locationsite_description' ,'fld', 'fld.entity_id=n.nid');
    $query->leftjoin('field_data_field_locationsite_address' ,'fla' ,'fla.entity_id=n.nid');
    $query->leftjoin('field_data_field_use_same_address_region' ,'fusar' ,'fusar.entity_id=n.nid');
    $query->fields('n',array('nid','title'));
    $query->fields('flr',array('field_location_region_target_id'));
    $query->fields('fld',array('field_locationsite_description_value'));
    $query->fields('fusar',array('field_use_same_address_region_value'));
    $query->fields('fla',array('field_locationsite_address_country','field_locationsite_address_thoroughfare','field_locationsite_address_premise','field_locationsite_address_locality','field_locationsite_address_administrative_area','field_locationsite_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
    
    $commands[] = ajax_command_invoke("select.config_location_pick_region", 'val',array($CData[0]->field_location_region_target_id));    
    $commands[] = ajax_command_invoke("input.config_location_site_title", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_site_description", 'val',array($CData[0]->field_locationsite_description_value));
   // $commands[] = ajax_command_invoke("input.config_location_site_address", 'val',array($CData[0]->title));
    
    $commands[] = ajax_command_invoke("select.config_location_site_country", 'val',array($CData[0]->field_locationsite_address_country));
    $commands[] = ajax_command_invoke("select.config_location_site_country", 'trigger',array('change'));
   // $commands[] = ajax_command_invoke("input.config_location_site_country_value", 'val',array($CData[0]['field_country_code_value_value']));
    /*$commands[] = ajax_command_invoke("input.config_location_site_address1", 'val',array($CData[0]->field_locationsite_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_site_address2", 'val',array($CData[0]->field_locationsite_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_site_city", 'val',array($CData[0]->field_locationsite_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_site_state", 'val',array($CData[0]->field_locationsite_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_site_state_key", 'val',array($CData[0]->field_locationsite_address_administrative_area));
    //$commands[] = ajax_command_invoke("input.config_location_site_state_value", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_site_zipcode", 'val',array($CData[0]->field_locationsite_address_postal_code));*/  
    if(isset($CData[0]->field_location_region_target_id) && !empty($CData[0]->field_location_region_target_id)){
    $commands[] = ajax_command_invoke(".siteaddress-outer",'show'); 
    }else{
      $commands[] = ajax_command_invoke(".siteaddress-outer",'hide');
    }
    
    
    if(isset($CData[0]->field_use_same_address_region_value) && $CData[0]->field_use_same_address_region_value == 1){
    //$commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'trigger',array('checked'));
    $commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'attr', array('checked',TRUE));
    $commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'trigger',array('change'));
    
    
    
    $commands[] = ajax_command_invoke("input.config_location_site_address1", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_site_address2", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_site_city", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_site_state", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_site_state_key", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_site_zipcode", 'val',array(''));
    
    
    }else if(isset($CData[0]->field_use_same_address_region_value) && $CData[0]->field_use_same_address_region_value == 0 || empty($CData[0]->field_use_same_address_region_value)){
     $commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'removeAttr', array('checked')); 
     $commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'trigger',array('change'));
     
     
     
      $commands[] = ajax_command_invoke("input.config_location_site_address1", 'val',array($CData[0]->field_locationsite_address_thoroughfare));
      $commands[] = ajax_command_invoke("input.config_location_site_address2", 'val',array($CData[0]->field_locationsite_address_premise));
      $commands[] = ajax_command_invoke("input.config_location_site_city", 'val',array($CData[0]->field_locationsite_address_locality));
      $commands[] = ajax_command_invoke("select.config_location_site_state", 'val',array($CData[0]->field_locationsite_address_administrative_area));
      $commands[] = ajax_command_invoke("input.config_location_site_state_key", 'val',array($CData[0]->field_locationsite_address_administrative_area));
      $commands[] = ajax_command_invoke("input.config_location_site_zipcode", 'val',array($CData[0]->field_locationsite_address_postal_code));
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]->nid));
  }
  //config location facility
  if($NodeType == 'fm_facility'){
    $query= db_select('node', 'n');
      $query->leftjoin('field_data_field_facility_location_site' ,'flr', 'flr.entity_id=n.nid');      
    $query->leftjoin('field_data_field_facility_number_of_floor' ,'ffnof', 'ffnof.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_ftes' ,'ffft', 'ffft.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_employees' ,'ffem', 'ffem.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_type' ,'ffty', 'ffty.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_address' ,'fla' ,'fla.entity_id=n.nid');
    $query->fields('n',array('nid','title'));
    $query->fields('ffft',array('field_facility_ftes_value'));
    $query->fields('ffem',array('field_facility_employees_value'));
    $query->fields('ffty',array('field_facility_type_target_id'));    
    $query->fields('flr',array('field_facility_location_site_target_id'));
    $query->fields('ffnof',array('field_facility_number_of_floor_value'));
    $query->fields('fla',array('field_facility_address_country','field_facility_address_thoroughfare','field_facility_address_premise','field_facility_address_locality','field_facility_address_administrative_area','field_facility_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
    
    
    $NodeObj111 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_area_type','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('delta','field_facility_area_type_target_id'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$NodeNid ))); 
  $TableData111 =  _get_hcfm_db_request($NodeObj111);
      
    
    $commands[] = ajax_command_invoke("select.config_location_pick_site", 'val',array($CData[0]->field_facility_location_site_target_id));  
    $commands[] = ajax_command_invoke("input.config_location_facility_title", 'val',array($CData[0]->title));
   // $commands[] = ajax_command_invoke("input.config_location_facility_conditionalarea", 'val',array($CData[0]->nid)); 
    $commands[] = ajax_command_invoke("select.config_location_facility_facilitytype", 'val',array($CData[0]->field_facility_type_target_id));   
    //$commands[] = ajax_command_invoke("input.config_location_facility_howmanyfloors", 'val',array($CData[0]['field_facility_how_many_floors_value']));
    //$commands[] = ajax_command_invoke("input.config_location_facility_totalarea",  'val',array($CData[0]['field_facility_total_area_value']));    
    $commands[] = ajax_command_invoke("input.config_location_facility_employees", 'val',array($CData[0]->field_facility_employees_value));
    $commands[] = ajax_command_invoke("input.config_location_facility_ftes", 'val',array($CData[0]->field_facility_ftes_value));
   // $commands[] = ajax_command_invoke("input.config_location_facility_footprintarea", 'val',array($CData[0]->nid));
   // $commands[] = ajax_command_invoke("input.config_location_facility_roofarea", 'val',array($CData[0]->nid));
    //$commands[] = ajax_command_invoke("input.config_location_facility_address", 'val',array($CData[0]->nid));  
    
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber", 'val',array($CData[0]->field_facility_number_of_floor_value));
    if(isset($CData[0]->field_facility_number_of_floor_value) && !empty($CData[0]->field_facility_number_of_floor_value)){
      $commands[] = ajax_command_invoke("input.config_location_facility_floornumber", 'val',array($CData[0]->field_facility_number_of_floor_value));
      $commands[] = ajax_command_invoke("input.config_location_facility_floornumber_addmore", 'trigger',array('mousedown'));
    }
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'val',array($CData[0]->field_facility_address_country));
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'trigger',array('change'));
   // $commands[] = ajax_command_invoke("input.config_location_facility_country_value", 'val',array($CData[0]->nid));
    $commands[] = ajax_command_invoke("input.config_location_facility_address1", 'val',array($CData[0]->field_facility_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_facility_address2", 'val',array($CData[0]->field_facility_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_facility_city", 'val',array($CData[0]->field_facility_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_facility_state", 'val',array($CData[0]->field_facility_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_facility_state_key", 'val',array($CData[0]->field_facility_address_administrative_area));
    //$commands[] = ajax_command_invoke("input.config_location_facility_state_value", 'val',array($CData[0]->nid));
    $commands[] = ajax_command_invoke("input.config_location_facility_zipcode", 'val',array($CData[0]->field_facility_address_postal_code));
    
    $commands[] = ajax_command_invoke("input.facility_area_type_values", 'val',array($TableData111));
    
  
    $commands[] = ajax_command_invoke("input.fm_facility_node_nid", 'val',array($CData[0]->nid));     
  }
  //config location location
  if($NodeType == 'fm_location_location'){
    $query= db_select('node', 'n');
      $query->leftjoin('field_data_field_location_facility' ,'flr', 'flr.entity_id=n.nid');      
    $query->leftjoin('field_data_field_location_description' ,'ffnof', 'ffnof.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_room_number' ,'ffft', 'ffft.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_department' ,'ffty', 'ffty.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_zone_address' ,'fla' ,'fla.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_floor_count' ,'flfco' ,'flfco.entity_id=n.nid');
    $query->fields('n',array('nid','title'));
    $query->fields('ffft',array('field_location_room_number_value'));
    $query->fields('ffty',array('field_location_department_target_id'));    
    $query->fields('flr',array('field_location_facility_target_id'));
    $query->fields('ffnof',array('field_location_description_value'));
    $query->fields('flfco',array('field_location_floor_count_value'));
    $query->fields('fla',array('field_location_zone_address_country','field_location_zone_address_thoroughfare','field_location_zone_address_premise','field_location_zone_address_locality','field_location_zone_address_administrative_area','field_location_zone_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
    
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'val',array($CData[0]->field_location_facility_target_id));
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("select.config_location_location_numberoffloor", 'trigger',array('change'));  
   // $commands[] = ajax_command_invoke("input.config_location_location_numberoffloor", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_location_title", 'val',array($CData[0]->title)); 
    $commands[] = ajax_command_invoke("input.config_location_zone_description", 'val',array($CData[0]->field_location_description_value));    
    $commands[] = ajax_command_invoke("input.config_location_location_roomnumber", 'val',array($CData[0]->field_location_room_number_value));
    $commands[] = ajax_command_invoke("select.config_location_department_number",  'val',array($CData[0]->field_location_department_target_id));    
    //$commands[] = ajax_command_invoke("input.config_location_location_address",  'val',array($CData[0]->title));  
    if(isset($CData[0]->field_location_floor_count_value) && !empty($CData[0]->field_location_floor_count_value)){
      //$commands[] = ajax_command_invoke("select.config_location_location_floornumber_select", 'val',array($CData[0]->field_location_floor_count_value));
     // $commands[] = ajax_command_invoke("input.config_location_location_floornumber_addmore", 'trigger',array('mousedown'));
    }
    
    $FloorListsObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_floors','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_floors_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'equal'=>array('entity_id'=>$NodeNid)));
    $FloorLists =  _get_hcfm_db_request($FloorListsObj);
  
    $commands[] = ajax_command_invoke("input.location_location_numberoffloor_values", 'val',array($FloorLists));
    
    
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'val',array($CData[0]->field_location_zone_address_country));
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("input.config_location_location_country_value", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_location_address1", 'val',array($CData[0]->field_location_zone_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_location_address2", 'val',array($CData[0]->field_location_zone_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_location_city", 'val',array($CData[0]->field_location_zone_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array($CData[0]->field_location_zone_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_location_state_key", 'val',array($CData[0]->field_location_zone_address_administrative_area));
    //$commands[] = ajax_command_invoke("input.config_location_location_state_value", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_location_zipcode", 'val',array($CData[0]->field_location_zone_address_postal_code));
    $commands[] = ajax_command_invoke("input.fm_location_location_node_nid", 'val',array($CData[0]->nid));      
  }
  
  //config asset system
  if($NodeType == 'fm_asset_system'){
    $JoinField = array(
    'nfacd-_value'=>'field_data_field_system_description',    
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_asset_system_title", 'val',array($CData[0]['title']));  
    $commands[] = ajax_command_invoke("input.config_asset_system_description", 'val',array($CData[0]['field_system_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config asset sub system
  if($NodeType == 'fm_asset_sub_system'){
    $JoinField = array(
    'nfacd-_value'=>'field_data_field_subsystem_description',
    'nfasl-_target_id'=>'field_data_field_asset_system_list',   
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("select.config_asset_subsystem_pick_system", 'val',array($CData[0]['field_asset_system_list_target_id']));
    $commands[] = ajax_command_invoke("input.config_asset_subsystem_title", 'val',array($CData[0]['title'])); 
    $commands[] = ajax_command_invoke("input.config_asset_subsystem_description", 'val',array($CData[0]['field_subsystem_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config asset Device Type
  if($NodeType == 'fm_asset_device_type'){
    $JoinField = array(
    'nfacd-_value'=>'field_data_field_devicetype_description',    
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_asset_devicetype_title", 'val',array($CData[0]['title']));  
    $commands[] = ajax_command_invoke("input.config_asset_devicetype_description", 'val',array($CData[0]['field_devicetype_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config asset status
  if($NodeType == 'fm_asset_status'){
    $JoinField = array(
    'nfacd-_value'=>'field_data_field_asset_status_description',    
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_asset_status_title", 'val',array($CData[0]['title']));  
    $commands[] = ajax_command_invoke("input.config_asset_status_description", 'val',array($CData[0]['field_asset_status_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm Account Number
  if($NodeType == 'fm_account_number'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_account_number_description',
    'nfacd-_value'=>'field_data_field_account_number_number',   
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_account_number_title", 'val',array($CData[0]['title']));  
    $commands[] = ajax_command_invoke("input.config_account_number", 'val',array($CData[0]['field_account_number_number_value']));
    $commands[] = ajax_command_invoke("input.config_account_number_description", 'val',array($CData[0]['field_account_number_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_problem_code
  if($NodeType == 'fm_problem_code'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_problemcode_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_problemcode_title", 'val',array($CData[0]['title']));    
    $commands[] = ajax_command_invoke("input.config_wo_problemcode_description", 'val',array($CData[0]['field_problemcode_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_work_order_type
  if($NodeType == 'fm_work_order_type'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_workordertype_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_type_title", 'val',array($CData[0]['title']));   
    $commands[] = ajax_command_invoke("input.config_wo_type_description", 'val',array($CData[0]['field_workordertype_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_work_order_status
  if($NodeType == 'fm_work_order_status'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_wo_status_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_status_title", 'val',array($CData[0]['title']));   
    $commands[] = ajax_command_invoke("input.config_wo_status_description", 'val',array($CData[0]['field_wo_status_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_skill
  if($NodeType == 'fm_skill'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_skill_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_skill_title", 'val',array($CData[0]['title']));    
    $commands[] = ajax_command_invoke("input.config_wo_skill_description", 'val',array($CData[0]['field_skill_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_priorty
  if($NodeType == 'fm_priorty'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_priorty_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_priorty_title", 'val',array($CData[0]['title']));    
    $commands[] = ajax_command_invoke("input.config_wo_priorty_description", 'val',array($CData[0]['field_priorty_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_resource
  if($NodeType == 'fm_resource'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_resource_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_resource_title", 'val',array($CData[0]['title']));   
    $commands[] = ajax_command_invoke("input.config_wo_resource_description", 'val',array($CData[0]['field_resource_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_resource
  if($NodeType == 'fm_special_tag'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_special_tag_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_special_tag_title", 'val',array($CData[0]['title']));    
    $commands[] = ajax_command_invoke("input.config_wo_special_tag_description", 'val',array($CData[0]['field_special_tag_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  //config fm_resource
  if($NodeType == 'fm_needed_permit'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_needed_permit_description', 
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField );  
    $commands[] = ajax_command_invoke("input.config_wo_needed_permit_title", 'val',array($CData[0]['title']));    
    $commands[] = ajax_command_invoke("input.config_wo_needed_permit_description", 'val',array($CData[0]['field_needed_permit_description_value']));
    $commands[] = ajax_command_invoke("input.node-nid", 'val',array($CData[0]['nid'])); 
  }
  
  //config fm_facility_type
  if($NodeType == 'fm_facility_type'){
    $JoinField = array(
    'nfacds-_value'=>'field_data_field_facility_type_description', 
    );    
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $CData = _get_hcfm_db_request($NodeObj,$JoinField); 
    $commands[] = ajax_command_invoke("input.config_facility_type_title", 'val',array($CData[0]['title']));
    $commands[] = ajax_command_invoke("input.config_facility_type_description", 'val',array($CData[0]['field_facility_type_description_value']));
    $commands[] = ajax_command_invoke("input.facility_type_node_nid", 'val',array($CData[0]['nid'])); 
  }
    //config fm_facility_area_type
    if($NodeType == 'fm_facility_area_type'){
      $JoinField = array(
      'nfacds-_value'=>'field_data_field_fareatype_description', 
      );    
      $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
      $CData = _get_hcfm_db_request($NodeObj,$JoinField); 
      $commands[] = ajax_command_invoke("input.config_facility_area_type_title", 'val',array($CData[0]['title']));
      $commands[] = ajax_command_invoke("input.config_facility_area_type_description", 'val',array($CData[0]['field_fareatype_description_value']));
      $commands[] = ajax_command_invoke("input.facility_area_type_node_nid", 'val',array($CData[0]['nid']));  
    }
  
  }  
  // Copy Section Callback
  if(isset($NodeType) && isset($NodeNid) && is_numeric($NodeNid) && $NodeType == 'fm_asset' && $Action == 'copy'){   
   $query = db_select('node','n');  
    $query->fields('n',array('nid','title'));   
    $query->leftjoin('field_data_field_asset_number','nfan','nfan.entity_id=n.nid');
    $query->fields('nfan',array('field_asset_number_value'));
    $query->leftjoin('field_data_field_asset_manuafacturer','nfama','nfama.entity_id=n.nid');
    $query->fields('nfama',array('field_asset_manuafacturer_value'));
    $query->leftjoin('field_data_field_asset_model_number','nfamnu','nfamnu.entity_id=n.nid');
    $query->fields('nfamnu',array('field_asset_model_number_value'));
    $query->leftjoin('field_data_field_asset_serial_number','nfasn','nfasn.entity_id=n.nid');
    $query->fields('nfasn',array('field_asset_serial_number_value'));
    $query->leftjoin('field_data_field_asset_system','nfasy','nfasy.entity_id=n.nid');
    $query->fields('nfasy',array('field_asset_system_target_id'));
    $query->leftjoin('field_data_field_asset_sub_system','nfassy','nfassy.entity_id=n.nid');
    $query->fields('nfassy',array('field_asset_sub_system_target_id'));
    $query->leftjoin('field_data_field_asset_device_type','nfadty','nfadty.entity_id=n.nid');
    $query->fields('nfadty',array('field_asset_device_type_target_id'));
    $query->leftjoin('field_data_field_asset_device','nfadev','nfadev.entity_id=n.nid');
    $query->fields('nfadev',array('field_asset_device_value'));
    $query->leftjoin('field_data_field_asset_account_number','nfaanu','nfaanu.entity_id=n.nid');
    $query->fields('nfaanu',array('field_asset_account_number_target_id'));
    $query->leftjoin('field_data_field_asset_status','nfasta','nfasta.entity_id=n.nid');
    $query->fields('nfasta',array('field_asset_status_target_id'));
    $query->leftjoin('field_data_field_asset_priority_rr','nfarra','nfarra.entity_id=n.nid');
    $query->fields('nfarra',array('field_asset_priority_rr_target_id'));
    $query->leftjoin('field_data_field_asset_region','nfare','nfare.entity_id=n.nid');
    $query->fields('nfare',array('field_asset_region_target_id'));
    $query->leftjoin('field_data_field_asset_site','nfasit','nfasit.entity_id=n.nid');
    $query->fields('nfasit',array('field_asset_site_target_id'));
    $query->leftjoin('field_data_field_asset_facility','nfafac','nfafac.entity_id=n.nid');
    $query->fields('nfafac',array('field_asset_facility_target_id'));
    $query->leftjoin('field_data_field_asset_location','nfaloc','nfaloc.entity_id=n.nid');
    $query->fields('nfaloc',array('field_asset_location_target_id'));
    $query->leftjoin('field_data_field_asset_original_cost','nfaoco','nfaoco.entity_id=n.nid');
    $query->fields('nfaoco',array('field_asset_original_cost_value'));
    $query->leftjoin('field_data_field_asset_date_purchased','nfapur','nfapur.entity_id=n.nid');
    $query->fields('nfapur',array('field_asset_date_purchased_value'));
    $query->leftjoin('field_data_field_asset_date_received','nfawa','nfawa.entity_id=n.nid');
    $query->fields('nfawa',array('field_asset_date_received_value'));
    $query->leftjoin('field_data_field_asset_date_sold','nfaws','nfaws.entity_id=n.nid');
    $query->fields('nfaws',array('field_asset_date_sold_value'));
    $query->leftjoin('field_data_field_asset_replacement_cost','nfarco','nfarco.entity_id=n.nid');
    $query->fields('nfarco',array('field_asset_replacement_cost_value'));
    $query->leftjoin('field_data_field_asset_capital_item','nfacit','nfacit.entity_id=n.nid');
    $query->fields('nfacit',array('field_asset_capital_item_value'));
    $query->leftjoin('field_data_field_asset_life_cycle','nfalcy','nfalcy.entity_id=n.nid');
    $query->fields('nfalcy',array('field_asset_life_cycle_value'));
    $query->leftjoin('field_data_field_asset_description','nfad','nfad.entity_id=n.nid');
    $query->fields('nfad',array('field_asset_description_value'));
    $query->leftjoin('field_data_field_asset_comments','nfaco','nfaco.entity_id=n.nid');
    $query->fields('nfaco',array('field_asset_comments_value'));
    $query->leftjoin('field_data_field_asset_warranty_information','nfawin','nfawin.entity_id=n.nid');
    $query->fields('nfawin',array('field_asset_warranty_information_value'));
    
    $query->leftjoin('field_data_field_asset_pictures','nfafict','nfafict.entity_id=n.nid');
    $query->fields('nfafict',array('field_asset_pictures_fid'));
    
    $query->leftjoin('file_managed','filma','filma.fid=nfafict.field_asset_pictures_fid');
    $query->fields('filma');
    $query->condition('n.nid',$NodeNid,'=');
    $query->condition('n.type','fm_asset','=');
    $AssetData = $query->execute()->fetchAll();  
    
    $commands[] = ajax_command_invoke("input.as-asset-number", 'val',array($AssetData[0]->field_asset_number_value));
    $commands[] = ajax_command_invoke("input.as-asset-manuafacturer", 'val',array($AssetData[0]->field_asset_manuafacturer_value));
    $commands[] = ajax_command_invoke("input.as-asset-model-number", 'val',array($AssetData[0]->field_asset_model_number_value));
    $commands[] = ajax_command_invoke("input.as-asset-serial-number", 'val',array($AssetData[0]->field_asset_serial_number_value));   
    $commands[] = ajax_command_invoke("select.as-asset-system", 'val',array($AssetData[0]->field_asset_system_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-sub-system", 'val',array($AssetData[0]->field_asset_sub_system_target_id));
    $commands[] = ajax_command_invoke("select.as-asset_device_type", 'val',array($AssetData[0]->field_asset_device_type_target_id));
    $commands[] = ajax_command_invoke("input.as-asset_device", 'val',array($AssetData[0]->field_asset_device_value));
    $commands[] = ajax_command_invoke("select.as-asset-account-number", 'val',array($AssetData[0]->field_asset_account_number_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-status", 'val',array($AssetData[0]->field_asset_status_target_id));    
    $commands[] = ajax_command_invoke("select.as-asset-priority-rr", 'val',array($AssetData[0]->field_asset_risk_rank_target_id));    
    $commands[] = ajax_command_invoke("select.as-asset-region", 'val',array($AssetData[0]->field_asset_region_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-site", 'val',array($AssetData[0]->field_asset_site_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-facility", 'val',array($AssetData[0]->field_asset_facility_target_id));
    $commands[] = ajax_command_invoke("select.as-asset-location", 'val',array($AssetData[0]->field_asset_location_target_id));
    $commands[] = ajax_command_invoke("input.as-asset-original-cost", 'val',array($AssetData[0]->field_asset_original_cost_value)); 
  
      if(isset($AssetData[0]->field_asset_date_purchased_value) && !empty($AssetData[0]->field_asset_date_purchased_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-purchased", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_purchased_value))));
    }
    if(isset($AssetData[0]->field_asset_date_received_value) && !empty($AssetData[0]->field_asset_date_received_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-received", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_received_value))));
    }
    if(isset($AssetData[0]->field_asset_date_sold_value) && !empty($AssetData[0]->field_asset_date_sold_value)){
      $commands[] = ajax_command_invoke("input.as-asset-date-sold", 'val',array(date("m-d-Y", strtotime($AssetData[0]->field_asset_date_sold_value))));
    }
    $commands[] = ajax_command_invoke("input.as-asset-replacement-cost", 'val',array($AssetData[0]->field_asset_replacement_cost_value));
    $commands[] = ajax_command_invoke("select.as-asset-capital-item", 'val',array($AssetData[0]->field_asset_capital_item_value));
    $commands[] = ajax_command_invoke("input.as-asset-life-cycle", 'val',array($AssetData[0]->field_asset_life_cycle_value));
       
    $commands[] = ajax_command_invoke("input.as-asset-description", 'val',array('copy '.$AssetData[0]->field_asset_description_value));
    $commands[] = ajax_command_invoke("textarea.asset-comments", 'val',array($AssetData[0]->field_asset_comments_value));
    $commands[] = ajax_command_invoke("textarea.asset-warranty-information", 'val',array($AssetData[0]->field_asset_warranty_information_value));
    $commands[] = ajax_command_invoke("input.asset-node-nid", 'val',array(''));
  }
  print ajax_render($commands);
  exit;  
}

function hcfm_asset_archive_container_content(){
  global $user;
  $output = '';
  $header = array('Asset Number','Asset Name','Site','Risk Rank','Action');
  $JoinField = array('nfasn-_value'=>'field_data_field_asset_number','nfais-_value'=>'field_data_field_asset_in_status','nfades-_value'=>'field_data_field_asset_description');
  $table_data = hcfm_asset_table_content($user->uid,'asset',$header,$JoinField,'archived');
  $output = $table_data;
  return $output;
}

function hcfm_asset_revision_log_content($NodeType='',$Action='',$NodeNid= ''){
  global $user;
  $output = '<div class="row margin-5"><div class="col-md-8 padding-5">';
  $outputOld = '';
  $NodeObj1 = array('NodeType'=>'asset','TableJoin'=>'TableJoin','NodeNid'=>$NodeNid,'TableName'=>'m6connect_hcfm_revision_log'); 
  $TableData =  _get_hcfm_db_request($NodeObj1);
  $asset_type = hcfm_nodenid_nodetitle_by_node_type('fm_type_setting',$company->nid,$user->uid);
  $asset_class = hcfm_nodenid_nodetitle_by_node_type('asset_class',$company->nid,$user->uid);
  $asset_brand = hcfm_nodenid_nodetitle_by_node_type('asset_brand',$company->nid,$user->uid);
  $facility = hcfm_nodenid_nodetitle_by_node_type('facility',$company->nid,$user->uid);
  $asset_risk_rank = hcfm_nodenid_nodetitle_by_node_type('risk_rank',$company->nid,$user->uid);
  
  
  $_SESSION['VAtype'] = $_SESSION['VAnumber'] = $_SESSION['VAname'] = $_SESSION['VAserialn'] = $_SESSION['VAclsss'] = $_SESSION['VAbrand'] = $_SESSION['VAstatus'] = $_SESSION['VAfacility'] = $_SESSION['VAriskrank'] = $_SESSION['VAwhenacquired'] = $_SESSION['VAwhensold'] = $_SESSION['VAdescription'] = $_SESSION['VAcomments'] = '';
  

  $output .= '<div class="panel-group accordion clearfix margin-bottom-5 hcfm_revision_log_content">';
    $sr = 1;
  foreach($TableData as $key => $Tdvlue){
    $CAtype = $CAnumber = $CAname = $CAserialn = $CAclsss = $CAbrand = $CAstatus = $CAfacility = $CAriskrank = $CAwhenacquired = $CAwhensold = $CAdescription = $CAcomments = '';
    if($key == 0){
    $_SESSION['VAtype'] = $asset_type[$Tdvlue['node_asset_type']];
    $_SESSION['VAnumber'] = $Tdvlue['node_asset_number'];
    $_SESSION['VAname'] = $Tdvlue['title'];
    $_SESSION['VAserialn'] = $Tdvlue['asset_serial_number'];
    $_SESSION['VAclsss'] = $asset_class[$Tdvlue['node_asset_class']];
    $_SESSION['VAbrand'] = $asset_brand[$Tdvlue['node_asset_brand']];
    $_SESSION['VAstatus'] = $Tdvlue['node_asset_status'];
    $_SESSION['VAfacility'] = $facility[$Tdvlue['node_asset_facility']];
    $_SESSION['VAriskrank'] = $asset_risk_rank[$Tdvlue['node_asset_risk_rank']];
    $_SESSION['VAwhenacquired'] = $Tdvlue['node_asset_when_acquired'];
    $_SESSION['VAwhensold'] = $Tdvlue['node_asset_when_sold'];
    $_SESSION['VAdescription'] = $Tdvlue['node_asset_comments'];    
    $_SESSION['VAcomments'] = $Tdvlue['node_asset_comments'];
    }
    else{
      
    if($_SESSION['VAtype'] != $asset_type[$Tdvlue['node_asset_type']]){     
      $CAtype = 'text-danger';      
    }
    if($_SESSION['VAnumber'] != $Tdvlue['node_asset_number']){      
      $CAnumber = 'text-danger';      
    }
    if($_SESSION['VAname'] != $Tdvlue['title']){      
      $CAname = 'text-danger';      
    }
    if($_SESSION['VAserialn'] != $Tdvlue['asset_serial_number']){     
      $CAserialn = 'text-danger';     
    }
    if($_SESSION['VAclsss'] != $asset_class[$Tdvlue['node_asset_class']]){      
      $CAclsss = 'text-danger';     
    }
    if($_SESSION['VAbrand'] != $asset_brand[$Tdvlue['node_asset_brand']]){      
      $CAbrand = 'text-danger';     
    }
    if($_SESSION['VAstatus'] != $Tdvlue['node_asset_status']){      
      $CAstatus = 'text-danger';      
    }
    if($_SESSION['VAfacility'] != $facility[$Tdvlue['node_asset_facility']]){     
      $CAfacility = 'text-danger';      
    }
    if($_SESSION['VAriskrank'] != $asset_risk_rank[$Tdvlue['node_asset_risk_rank']]){     
      $CAriskrank = 'text-danger';      
    }
    if($_SESSION['VAwhenacquired'] != $Tdvlue['node_asset_when_acquired']){     
      $CAwhenacquired = 'text-danger';      
    }
    if($_SESSION['VAwhensold'] != $Tdvlue['node_asset_when_sold']){     
      $CAwhensold = 'text-danger';      
    }
    if($_SESSION['VAdescription'] != $Tdvlue['node_asset_comments']){     
      $CAdescription = 'text-danger';     
    }
    if($_SESSION['VAcomments'] != $Tdvlue['node_asset_comments']){      
      $CAcomments = 'text-danger';      
    }
    
      $_SESSION['VAtype'] = $asset_type[$Tdvlue['node_asset_type']];
    $_SESSION['VAnumber'] = $Tdvlue['node_asset_number'];
    $_SESSION['VAname'] = $Tdvlue['title'];
    $_SESSION['VAserialn'] = $Tdvlue['asset_serial_number'];
    $_SESSION['VAclsss'] = $asset_class[$Tdvlue['node_asset_class']];
    $_SESSION['VAbrand'] = $asset_brand[$Tdvlue['node_asset_brand']];
    $_SESSION['VAstatus'] = $Tdvlue['node_asset_status'];
    $_SESSION['VAfacility'] = $facility[$Tdvlue['node_asset_facility']];
    $_SESSION['VAriskrank'] = $asset_risk_rank[$Tdvlue['node_asset_risk_rank']];
    $_SESSION['VAwhenacquired'] = $Tdvlue['node_asset_when_acquired'];
    $_SESSION['VAwhensold'] = $Tdvlue['node_asset_when_sold'];
    $_SESSION['VAdescription'] = $Tdvlue['node_asset_comments'];    
    $_SESSION['VAcomments'] = $Tdvlue['node_asset_comments'];
    
    }   
      
    $output .=   '<div class="panel panel-default">';
    $output .=     '<div class="panel-heading">';
    $output .=       '<h4 class="panel-title">';
    $output .=         '<a aria-expanded="false" class="collapsed" data-parent="#jobs" data-toggle="collapse" href="#opportunities'.$sr.'">Version '.$sr.'&nbsp;'.format_date($Tdvlue['timestamp'], 'custom', 'j M Y h:i a').'&nbsp;'.$Tdvlue['realname']. '</a>';
    $output .=       '</h4>';
    $output .=     '</div>';
    $output .=     '<div aria-expanded="false" class="panel-collapse collapse" id="opportunities'.$sr.'" style="height: 0px;">';
    $output .=       '<div class="panel-body">';
    $output .=         '<div class="hcfm-log-outer padding-10">';  
    $output .=           '<div class="row margin-5"><div class="col-md-4 padding-5"><span class="'.$CAtype.'"><label>Asset Type: </label> '.$asset_type[$Tdvlue['node_asset_type']].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAnumber.'"><label>Asset Number: </label> '.$Tdvlue['node_asset_number'].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAname.'"><label>Asset Name: </label> '.$Tdvlue['title'].'</span></div></div>';
    $output .=           '<div class="row margin-5"><div class="col-md-4 padding-5"><span class="'.$CAserialn.'"><label>Serial Number: </label> '.$Tdvlue['asset_serial_number'].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAclsss.'"><label>Asset Class: </label> '.$asset_class[$Tdvlue['node_asset_class']].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAbrand.'"><label>Asset Brand: </label> '.$asset_brand[$Tdvlue['node_asset_brand']].'</span></div></div>';
    $output .=           '<div class="row margin-5"><div class="col-md-4 padding-5"><span class="'.$CAstatus.'"><label>Asset Status: </label> '.$Tdvlue['node_asset_status'].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAfacility.'"><label>Asset Facility: </label> '.$facility[$Tdvlue['node_asset_facility']].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAriskrank.'"><label>Asset Risk Rank: </label> '.$asset_risk_rank[$Tdvlue['node_asset_risk_rank']].'</span></div></div>';
    $output .=           '<div class="row margin-5"><div class="col-md-4 padding-5"><span class="'.$CAwhenacquired.'"><label>Asset When Acquired: </label> '.$Tdvlue['node_asset_when_acquired'].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAwhensold.'"><label>Asset When Sold: </label> '.$Tdvlue['node_asset_when_sold'].'</span></div>';
    $output .=           '<div class="col-md-4 padding-5"><span class="'.$CAdescription.'"><label>Asset Description: </label> '.$Tdvlue['node_asset_description'].'</span></div></div>';
    $output .=           '<div class="row margin-5"><div class="col-md-4 padding-5"><span class="'.$CAcomments.'"><label>Asset Comments: </label> '.$Tdvlue['node_asset_comments'].'</span></div></div>';  
    $output .=         '</div>';
    $output .=       '</div>';
    $output .=     '</div>';
    $output .=   '</div>';
   
    $sr++;
  }
  
  $output .= '</div>'; 
  $output .= l('Back', url('/hcfm/add/asset'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('btn','btn-primary'))));
  $output .= '</div><div class="col-md-4 padding-5"></div></div>';  
  return $output;
}

// hcfm work order start
function hcfm_work_order_add_form($form,$form_state){
  drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/m6connect_hcfm.js');
  drupal_add_js(drupal_get_path('module', 'm6connect_program') . '/js/jquery.multiselect.js');
  drupal_add_css(drupal_get_path('module', 'm6connect_program') . '/js/jquery.multiselect.css');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/select2/3.5.2/select2.min.js');
  drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.7.0/lodash.min.js');
  

  global $user,$company;
  $form['#attributes']['class'][] = 'chosentoselect select2style multipal-checkbox'; 
  $fm_work_order = hcfm_nodenid_nodetitle_by_node_type('fm_work_order');
  $form['get_workorder'] = array(
    '#type' => 'select',
  '#title'=> 'Select workorder',
  '#options' => $fm_work_order, 
  '#attributes' => array('class'=> array('form-control workorder-sel')),
  '#empty_option' => t('- Select -'),
  '#ajax' => array(
    'callback'=> 'change_workorder_nid_callback',
    'wrapper' => 'workorder_main_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );
  
  $form['main_container_main'] = array(
  '#type' => 'container',
  '#attributes' => array('class'=>array('workorder-container-section')),
  '#prefix' => '<div class="workorder-create-container padding-10">', 
  '#suffix' => '</div>',
  '#process' => array('hcfm_work_order_add_container_process'),
  );  
  
  
  $header = array('Due Date','Number','Type','Work Order Name | Description','Site','Facility','Status','Action');
  $JoinField = array('nfworr-_value'=>'field_data_field_wo_date_completed','nfwoname-_value'=>'field_data_field_wo_name','nfwon-_value'=>'field_data_field_wo_number','nffwb-_target_id'=>'field_data_field_wo_type','nfwodes-_value'=>'field_data_field_wo_description','nfwcity-_target_id'=>'field_data_field_wo_site','nfwof-_target_id'=>'field_data_field_wo_facility',   'nfwosa-_target_id'=>'field_data_field_wo_status');
  $table_data = hcfm_work_order_table_content($user->uid,'fm_work_order',$header,$JoinField,'fm_work_order');
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function change_workorder_nid_callback($form,&$form_state){
  ctools_include('ajax');
 
  $commands = array();
  $triggeringElement = $form_state['triggering_element'];  
  if($form_state['triggering_element']['#name'] == 'get_workorder') {
  $NodeType = $form_state['values']['hcfmtype'];
  $NodeNid = $form_state['values']['get_workorder'];
  
  //drup_msg($NodeType);
  //drup_msg($NodeNid);
  if($NodeType == 'fm_work_order' && $NodeNid && !empty($NodeNid)){
      $JoinField = array(
      'nfwoname-_value'=>'field_data_field_wo_name',
    'nfwon-_value'=>'field_data_field_wo_number',
    'nfwodes-_value'=>'field_data_field_wo_description',
    'nfwodr-_target_id'=>'field_data_field_wo_problem_code',    
    'nfwoades-_target_id'=>'field_data_field_wo_asset_description',
    'nfwoa-_target_id'=>'field_data_field_wo_asset_number',
    'nfwodc-_value'=>'field_data_field_wo_model_number',
    'nfwod-_value'=>'field_data_field_wo_manufacturer',
    'nfwop-_value'=>'field_data_field_wo_serial_number',
        'nfwr-_target_id'=>'field_data_field_wo_account_number',
    'nffwb-_target_id'=>'field_data_field_wo_type',
    'nfwf-_value'=>'field_data_field_wo_requestor_remarks',
    'nfwosa-_target_id'=>'field_data_field_wo_status',
    'nfwc-_target_id'=>'field_data_field_wo_skill',
    'nfwaa-_target_id'=>'field_data_field_wo_priority',
    'nfwos-_target_id'=>'field_data_field_wo_priority_rr',
    'nfwaaa-_target_id'=>'field_data_field_wo_resource',
    'nfwspta-_target_id'=>'field_data_field_wo_special_tag',
    'nfwnepe-_target_id'=>'field_data_field_wo_needed_permit',
    'nfwoat-_target_id'=>'field_data_field_wo_region',
    'nfwcity-_target_id'=>'field_data_field_wo_site',
    'nfwof-_target_id'=>'field_data_field_wo_facility',
    'nfwoflo-_value'=>'field_data_field_wo_floor',
    'nfwst-_target_id'=>'field_data_field_wo_location',
    'nfworoom-_value'=>'field_data_field_wo_room',
    'nfwzitim-_value'=>'field_data_field_wo_estimated_time_1',
    'nfwzitip-_value'=>'field_data_field_wo_estimated_time_2',
    'nfworr-_value'=>'field_data_field_wo_date_completed',
    'nfwoee-_value'=>'field_data_field_wo_date_requested',
    'nfwoinre-_value'=>'field_data_field_wo_internal_resources',
    'nfwoftich-_value'=>'field_data_field_wo_time_charge',
    );
    $NodeObj = array('NodeNid'=>$NodeNid,'NodeType'=>$NodeType);
    $NData = _get_hcfm_db_request($NodeObj,$JoinField );
        
    $woquery =  db_select('field_data_field_wo_attachement' ,'fdfwa');
    $woquery->leftjoin('file_managed','filem','filem.fid=fdfwa.field_wo_attachement_fid');
    // $woquery->fields('fdfwa');
    $woquery->fields('filem');    
    $woquery->condition('fdfwa.entity_id' ,$NodeNid ,'=');
    $woqresult = $woquery->execute()->fetchAllAssoc('fid', PDO::FETCH_ASSOC); 
    
    $NodeObj111 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_wo_outside_vendors','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('delta','field_wo_outside_vendors_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_work_order'),'equal'=>array('entity_id'=>$NodeNid))); 
  $TableData111 =  _get_hcfm_db_request($NodeObj111);     
        
    $commands[] = ajax_command_invoke("input.wo-number", 'val',array($NData[0]['field_wo_number_value']));
    $commands[] = ajax_command_invoke("textarea.wo-description", 'val',array($NData[0]['field_wo_description_value']));
    $commands[] = ajax_command_invoke("input.wo-name", 'val',array($NData[0]['field_wo_name_value']));      
    $commands[] = ajax_command_invoke("select.wo-problem-code", 'val',array($NData[0]['field_wo_problem_code_target_id']));
    $commands[] = ajax_command_invoke("select.wo-problem-code", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("select.wo_asset_description", 'val',array($NData[0]['field_wo_asset_description_target_id']));
    $commands[] = ajax_command_invoke(".form-item-wo-asset-description .select2-chosen", 'text',array(_get_title_of_node($NData[0]['field_wo_asset_description_target_id'])));    
    $commands[] = ajax_command_invoke(".wo_asset_description_new_value", 'val',array($NData[0]['field_wo_asset_description_target_id']));

    $commands[] = ajax_command_invoke(".form-item-wo-asset-number .select2-chosen", 'text',array(_get_asset_number($NData[0]['field_wo_asset_number_target_id'])));    
    $commands[] = ajax_command_invoke(".wo-asset-number-new-value", 'val',array($NData[0]['field_wo_asset_number_target_id']));

    //$commands[] = ajax_command_invoke("select.wo_asset_description", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("select.wo-asset-number", 'val',array($NData[0]['field_wo_asset_number_target_id']));
    //$commands[] = ajax_command_invoke("select.wo-asset-number", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.wo-model-number", 'val',array($NData[0]['field_wo_model_number_value']));
    $commands[] = ajax_command_invoke("input.wo-manufacturer", 'val',array($NData[0]['field_wo_manufacturer_value']));    
    $commands[] = ajax_command_invoke("input.wo-room", 'val',array($NData[0]['field_wo_room_value']));    
    $commands[] = ajax_command_invoke("input.wo-serial-number", 'val',array($NData[0]['field_wo_serial_number_value']));
    $commands[] = ajax_command_invoke("select.wo-account-number", 'val',array($NData[0]['field_wo_account_number_target_id']));
    $commands[] = ajax_command_invoke("select.wo-account-number", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-type", 'val',array($NData[0]['field_wo_type_target_id']));
    $commands[] = ajax_command_invoke("select.wo-type", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.wo-requestor-remarks", 'val',array($NData[0]['field_wo_requestor_remarks_value']));
    $commands[] = ajax_command_invoke("select.wo-status", 'val',array($NData[0]['field_wo_status_target_id']));
    $commands[] = ajax_command_invoke("select.wo-status", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-skill", 'val',array($NData[0]['field_wo_skill_target_id']));
    $commands[] = ajax_command_invoke("select.wo-skill", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-priority", 'val',array($NData[0]['field_wo_priority_target_id']));
    $commands[] = ajax_command_invoke("select.wo-priority", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-priority-rr", 'val',array($NData[0]['field_wo_priority_rr_target_id']));
    $commands[] = ajax_command_invoke("select.wo-priority-rr", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-resource", 'val',array($NData[0]['field_wo_resource_target_id']));
    $commands[] = ajax_command_invoke("select.wo-resource", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-needed-permit", 'val',array($NData[0]['field_wo_needed_permit_target_id']));
    $commands[] = ajax_command_invoke("select.wo-needed-permit", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-special-tag", 'val',array($NData[0]['field_wo_special_tag_target_id']));
    $commands[] = ajax_command_invoke("select.wo-special-tag", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-region", 'val',array($NData[0]['field_wo_region_target_id']));
    $commands[] = ajax_command_invoke("select.wo-region", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-site", 'val',array($NData[0]['field_wo_site_target_id']));
    $commands[] = ajax_command_invoke("select.wo-site", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-facility", 'val',array($NData[0]['field_wo_facility_target_id']));
    $commands[] = ajax_command_invoke("select.wo-facility", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-floor", 'val',array($NData[0]['field_wo_floor_value']));
    $commands[] = ajax_command_invoke("select.wo-floor", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-location", 'val',array($NData[0]['field_wo_location_target_id']));
    $commands[] = ajax_command_invoke("select.wo-location", 'trigger',array('change'));   
    $commands[] = ajax_command_invoke("input.wo-estimated_time", 'val',array($NData[0]['field_wo_estimated_time_1_value']));
    $commands[] = ajax_command_invoke("input.wo-date-time-charges", 'val',array($NData[0]['field_wo_time_charge_value']));
    $commands[] = ajax_command_invoke("select.wo-estimated_time_type", 'val',array($NData[0]['field_wo_estimated_time_2_value']));
    $commands[] = ajax_command_invoke("select.wo-internal-resources", 'val',array($NData[0]['field_wo_internal_resources_value']));
    $commands[] = ajax_command_invoke("select.wo-internal-resources", 'trigger',array('change'));   
    if(isset($NData[0]['field_wo_estimated_time_value']) && !empty($NData[0]['field_wo_estimated_time_value'])){
    $commands[] = ajax_command_invoke('input[name="wo_estimated_time[date]"]','val',array(date("m-d-Y",strtotime($NData[0]['field_wo_estimated_time_value']))));
    $commands[] = ajax_command_invoke('input[name="wo_estimated_time[time]"]','val',array(date("H:i",strtotime($NData[0]['field_wo_estimated_time_value']))));  
    }  
    if(isset($NData[0]['field_wo_date_requested_value']) && !empty($NData[0]['field_wo_date_requested_value'])){
      $commands[] = ajax_command_invoke("input.wo-date-requested", 'val',array(date("m-d-Y", strtotime($NData[0]['field_wo_date_requested_value']))));
    }
    if(isset($NData[0]['field_wo_date_completed_value']) && !empty($NData[0]['field_wo_date_completed_value'])){
      $commands[] = ajax_command_invoke("input.wo-completeby-date", 'val',array(date("m-d-Y", strtotime($NData[0]['field_wo_date_completed_value']))));
    }   
    if(isset($woqresult) && !empty($woqresult)) {
    foreach($woqresult as $addKey => $addVal) {
      $getFid = $woqresult[$addKey]['fid'];
      $getAdditionalImageSrc[] = '<p><input type="checkbox" checked="checked" class="hcfm-image-remove-update" value="'.$getFid.'" for="'.$NodeNid.'">'.l($woqresult[$addKey]['filename'], file_create_url($woqresult[$addKey]['uri'])).'</p>';
      }
    $commands[] = ajax_command_html(".wo-image-preview", '<div class="image-preview">'.implode('', $getAdditionalImageSrc).'</div>');
    } 
    else {
    $commands[] = ajax_command_html(".wo-image-preview", '');
    }  
    if(isset($TableData111) && !empty($TableData111)) {
    $commands[] = ajax_command_invoke("select.wo-region", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-site", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-facility", 'trigger',array('change'));
      $commands[] = ajax_command_invoke("select.wo-location", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.wo_outside_vendors_values", 'val',array($TableData111));
    }
    
    $commands[] = ajax_command_invoke("input.wo-node-nid", 'val',array($NData[0]['nid']));
  }
  else{
    //$commands[] = ajax_command_invoke("input.wo-number", 'val',array(''));
    $commands[] = ajax_command_invoke("textarea.wo-description", 'val',array(''));
    $commands[] = ajax_command_invoke("input.wo-name", 'val',array(''));      
    $commands[] = ajax_command_invoke("select.wo-problem-code", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-problem-code", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo_asset_description", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo_asset_description", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-asset-number", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-asset-number", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.wo-model-number", 'val',array(''));
    $commands[] = ajax_command_invoke("input.wo-manufacturer", 'val',array(''));    
    $commands[] = ajax_command_invoke("input.wo-room", 'val',array(''));    
    $commands[] = ajax_command_invoke("input.wo-serial-number", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-account-number", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-account-number", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-type", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-type", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.wo-requestor-remarks", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-status", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-status", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-skill", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-skill", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-priority", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-priority", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-priority-rr", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-priority-rr", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-resource", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-resource", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-needed-permit", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-needed-permit", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-special-tag", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-special-tag", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-region", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-region", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-site", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-site", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-facility", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-facility", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-floor", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-floor", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("select.wo-location", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-location", 'trigger',array('change'));   
    $commands[] = ajax_command_invoke("input.wo-estimated_time", 'val',array(''));
    $commands[] = ajax_command_invoke("select.wo-estimated_time_type", 'val',array(''));
    $commands[] = ajax_command_invoke("input.wo-date-time-charges", 'val',array(''));
  }
  }  
  return array('#type' => 'ajax', '#commands' => $commands);
}

function hcfm_work_order_add_container_process($element, &$form_state){
  global $user,$company;
  $SyearExtention =date('y');
  $SmonthExtention ='-'.date('m');
  $SdayExtention =date('j');
  $StimeExtention =date('his');
  $Sprefix = 'WON'.$SdayExtention ;
  $Sserial = $Sprefix.' '.$StimeExtention .$SmonthExtention.$SyearExtention;   
  $element['wo_number'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Number'),
  '#attributes' => array(
    'class'=> array(
      'clear-data-close',
      'wo-number'
    )
  ),
  '#default_value' => $Sserial,
  '#prefix' => '<div class="wo-customer-section"><div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  '#required' => TRUE,  
  );  
    
  
  $fm_priorty = hcfm_nodenid_nodetitle_by_node_type('fm_priorty');
  $element['wo_priority'] = array(
  '#title' => t('Priority'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'wo-priority'
    )
  ),
  '#type' => 'select',
  '#options' => $fm_priorty,  
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  //'#required' => TRUE,  
  );
  
  $fm_problem_code = hcfm_nodenid_nodetitle_by_node_type('fm_problem_code');
  $element['wo_problem_code'] = array ( 
  '#title' => ('Problem Code'), 
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'wo-problem-code'
    )
  ),
  '#type' => 'select',
  '#options' => $fm_problem_code, 
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div>',
  );

  //top section
  $fm_account_number = hcfm_nodenid_nodetitle_by_node_type('fm_account_number');
  $element['wo_account_number'] = array(
  '#title' => t('Department | Account'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'wo-account-number'
    )
  ),  
  '#type' => 'select',
  '#options' =>$fm_account_number,  
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="row"><div class="col-md-4"><div class="clearfix">', 
  //'#suffix' => '</div>',
  //'#required' => TRUE,  
  );
  
  
  $fm_skill = hcfm_nodenid_nodetitle_by_node_type('fm_skill');
  $element['wo_skill'] = array (
  '#title' => ('Skill'),  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'wo-skill'
    )
  ),  
  '#type' => 'select',
  '#options' => $fm_skill,  
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  //'#prefix' => '<div class="">',
  '#suffix' => '</div></div>',
  );
  
  $element['wo_description'] = array(
  '#type' => 'textarea',
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'wo-description'
    )
  ),
  '#cols' => 60,
    '#rows' => 3,
  '#resizable' => FALSE,
  '#prefix' => '<div class="col-md-8">',  
  '#suffix' => '</div></div>',
  //'#required' => TRUE,  
  );
  $element['wo_attachment_one'] = array(
    '#title' => t('Attachment'),
    '#type' => 'file',
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'asset-attachment-one'
      )
    ),
    '#upload_location' => 'public://',  
    '#name' => 'attach1[]',
    '#field_prefix' => '<div class="image-upload-done"></div><div class="wo-image-preview"></div>',
  //'#description' => t('Use CTRL + Click to choose multiple attachments.'),
    '#attributes' => array('multiple' => 'multiple'),
    '#prefix' => '<div class="row"><div class="col-md-4">',
    '#suffix' => '</div>',
  );
  $element['wo_attachment_one_upload'] = array(
    '#type' => 'submit',   
    '#value' => 'Upload Attachment',
    '#attributes' => array('class' => array('hcfmwo_attachment_send')),
    '#submit' => array('wo_attachment_one_attachment_submit_handler'),
    '#limit_validation_errors' => array(array('attachment-fid')),
    '#ajax' => array(
      'callback' => 'wo_attachment_one_attachment_callback',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="col-md-4">',
    '#suffix' => '</div></div></div>',
  );

  if(isset($user->roles) && !in_array('Hcfm Customer',$user->roles)){
    $element['location_box'] = array(
      '#type' => 'fieldset',
      '#title' => t('Location'),    
      '#collapsible' => true,
      '#collapsed' => true,
      '#attributes' => array(
        'class'=> array(
          'fieldsetbigtitle'
        )
      ),
    );
    
    $location_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region');
    $element['location_box']['wo_region'] = array(
      '#title' => t('Region'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-region','as-asset-region'
        )
      ),
      '#type' => 'select',
      '#options' => $location_region, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      //'#field_prefix' => '',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site');
    $element['location_box']['wo_site'] = array(
      '#title' => t('Site'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-site','as-asset-site'
        )
      ),  
      '#type' => 'select',
      '#options' => $location_site, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility');
    $element['location_box']['wo_facility'] = array (
      '#title' => ('Facility'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
        'wo-facility','as-asset-facility'
        )
      ),  
      '#type' => 'select',
      '#options' => $facility,  
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    $zone_facility_floor = _get_location_zone_facility_floor();
    $element['location_box']['wo_floor'] = array(
      '#title' => t('Floor'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-floor',
        ),
      ),  
      '#type' => 'select',
      '#options' => $zone_facility_floor, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#validate' => TRUE,
      '#field_prefix' => '',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location');
    $element['location_box']['wo_room'] = array(
      '#title' => t('Room#'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-room',
        )
      ),  
      '#type' => 'textfield', 
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location');
    $element['location_box']['wo_location'] = array(
      '#title' => t('Zone'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-location','as-asset-location'
        )
      ),  
      '#type' => 'select',
      '#options' => $location_location, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
      //'#required' => TRUE,  
    );
    
    $element['assignment_box'] = array(
      '#type' => 'fieldset',
      '#title' => t('Assignment'),    
      '#collapsible' => true,
      '#collapsed' => true,
      '#attributes' => array(
        'class'=> array(
          'fieldsetbigtitle'
        )
      ),
    );
    
    $element['assignment_box']['wo_requestor_remarks'] = array(
      '#title' => t('Remarks'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-requestor-remarks'
        )
      ),  
      '#type' => 'textfield',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $work_order_status = hcfm_nodenid_nodetitle_by_node_type('fm_work_order_status');
    $element['assignment_box']['wo_status'] = array(
      '#title' => t('Status'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-status'
        )
      ),
      '#type' => 'select',
      '#options' => $work_order_status, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $work_order_type = hcfm_nodenid_nodetitle_by_node_type('fm_work_order_type');
    $query = db_select('node', 'n');
    $query->leftjoin('field_data_field_workordertype_description','fwtd','fwtd.entity_id=n.nid');
    $query->fields('n',array('nid'));
    $query->fields('fwtd',array('field_workordertype_description_value'));
    $query->orderBy('n.nid', 'DESC');
    $query->condition('n.type', 'fm_work_order_type', '=');
    $wotypeDesc = $query->execute()->fetchAllKeyed();
    
    $element['assignment_box']['wo_type'] = array ( 
      '#title' => ('Work Order Type'),  
      '#attributes' => array(
        'class'=> array(
          'clear-data',
        'wo-type'
        )
      ),  
      '#type' => 'select',
      '#options' => $work_order_type,
      '#options_attributes' =>select_add_attribute($wotypeDesc,'title'),
      '#empty_option' => 'None',
      /*'#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',*/
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    
    $fm_special_tag = hcfm_nodenid_nodetitle_by_node_type('fm_special_tag');
    $element['assignment_box']['wo_special_tag'] = array (  
      '#title' => ('Special Tag(S)'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-special-tag'
        )
      ),  
      '#type' => 'select',
      '#options' => $fm_special_tag,      
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
    );
    $fm_needed_permit = hcfm_nodenid_nodetitle_by_node_type('fm_needed_permit');
    $element['assignment_box']['wo_needed_permit'] = array (  
      '#title' => ('Needed Permit(S)'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
        'wo-needed-permit'
        )
      ),  
      '#type' => 'select',
      '#options' => $fm_needed_permit,      
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div>',
    );
    
    $element['assignment_box']['wo_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Work Order Name'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-name'
        )
      ),  
      '#states' => array(
        'visible' => array(
          ':input[name="wo_type"]' => array('value' => '52921'),
        ),
      ),
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div></div>',
      //'#required' => TRUE,  
    );
    
    
    
    
    
    $element['asset_box'] = array(
      '#type' => 'fieldset',
      '#title' => t('Asset'),    
      '#collapsible' => true,
      '#collapsed' => true,
      '#attributes' => array(
        'class'=> array(
          'fieldsetbigtitle'
        )
      ),
    );
    
    


    $element['asset_box']['wo_asset_description'] = array(
      '#title' => t('Asset Description'),
      '#attributes' => array(
        'placeholder'=>array('- Select -'),
        'class'=> array(
          'clear-data',
          'wo_asset_description_new'
        )
      ),
      '#type' => 'textfield',
      //'#field_prefix' => '',  
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    //$asset = hcfm_nodenid_nodetitle_by_node_type('fm_asset',$company->nid,$user->uid);
    $element['wo_asset_description_value']= array(
      '#type' => 'hidden',
      '#attributes'=> array('class'=>('wo_asset_description_new_value')),
    );
    $element['asset_box']['wo_asset_number'] = array(
      '#title' => t('Asset Number'),
      '#attributes' => array(
        'placeholder'=>array('- Select -'),
        'class'=> array(
          'clear-data',
          'wo-asset-number-new'
        )
      ),
      '#type' => 'textfield',      
      //'#field_prefix' => '',  
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $element['wo_asset_number_value']= array(
      '#type' => 'hidden',
      '#attributes'=> array('class'=>('wo-asset-number-new-value')),
    );
    $risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
    $element['asset_box']['wo_priority_rr'] = array(
      '#title' => t('Risk Rank'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-priority-rr'
        )
      ),  
      '#type' => 'select',
      '#options' => $risk_rank, 
      '#empty_option' => 'None',
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      //'#field_prefix' => '',
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div></div>',
      //'#required' => TRUE,  
    );
    
    
    
    $element['asset_box']['wo_serial_number'] = array(  
      '#title' => t('Serial Number'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-serial-number'
        )
      ),
      '#type' => 'textfield',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $element['asset_box']['wo_model_number'] = array(
      '#title' => t('Model Number'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-model-number'
        )
      ),
      '#type' => 'textfield', 
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $element['asset_box']['wo_manufacturer'] = array(  
      '#title' => ('Manufacturer'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-manufacturer'
        )
      ),  
      '#type' => 'textfield',
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    
    $element['schedule_box'] = array(
      '#type' => 'fieldset',
      '#title' => t('Schedule'),    
      '#collapsible' => true,
      '#collapsed' => true,
      '#attributes' => array(
        'class'=> array(
          'fieldsetbigtitle'
        )
      ),
    );  
    $element['schedule_box']['wo_estimated_time'] = array(
      '#title' => t('Estimated Time (Hours)'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-estimated_time'
        )
      ),  
      '#type' => 'textfield',   
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    /*$element['schedule_box']['wo_estimated_time_type'] = array (
    //'#title' => ('Resource'), 
    '#attributes' => array(
      'class'=> array(
        'clear-data',
      'wo-estimated_time_type'
      )
    ),  
    '#type' => 'select',
    '#options' => array('day'=>'Day','hour'=>'Hour','minute'=>'Minute'),  
    '#empty_option' => t('- Select -'),
    '#prefix' => '<div class="col-md-2"><label for="edit-wo-estimated-time-type">&nbsp; </label>',
    '#suffix' => '</div>',
    );*/
    
    $element['schedule_box']['wo_complete_by_date'] = array(
      '#title' => t('Complete by date (Due Date)'),
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-completeby-date'
        )
      ),  
      '#type' => 'date_popup',
        '#date_format' => 'm-d-Y',
      '#date_label_position' => '',
      '#prefix' => '<div class="col-md-4">',  
      '#suffix' => '</div>',
      //'#required' => TRUE,  
    );
    $element['schedule_box']['wo_date_requested'] = array (
      '#title' => ('Date Requested'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
        'wo-date-requested'
        )
      ),  
      '#type' => 'date_popup',
      '#date_format' => 'm-d-Y',
      '#default_value' => date("Y-m-d"),
      '#date_label_position' => '',
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    $element['schedule_box']['wo_date_time_charges'] = array (
      '#title' => ('Time Charges'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-date-time-charges'
        )
      ),  
      '#type' => 'textfield',
      //'#date_format' => 'm-d-Y',
      //'#default_value' => date("Y-m-d"),
      //'#date_label_position' => '',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    $element['resources_box'] = array(
      '#type' => 'fieldset',
      '#title' => t('Resources'),    
      '#collapsible' => true,
      '#collapsed' => true,
      '#attributes' => array(
        'class'=> array(
          'fieldsetbigtitle',
        'fieldset-in-multicheck'
        )
      ),
    );
    $fm_resource = hcfm_nodenid_nodetitle_by_node_type('fm_resource');
    $q = db_select('field_data_field_hcfm_status','hcfmui');
    $q->leftjoin('users','u','u.uid=hcfmui.entity_id');
    $q->leftjoin ( 'realname', 'r', 'r.uid=u.uid' );  
    $q->fields('u',array('uid','name','mail'));
    $q->fields('r',array('realname'));
    $q->fields('hcfmui',array('field_hcfm_status_value'));
    $Internal_resources = $q->execute()->fetchAllKeyed(0,3);
    $element['resources_box']['wo_internal_resources'] = array (
      '#title' => ('Internal Resources'), 
      '#attributes' => array(
        'class'=> array(
          'clear-data',
        'wo-internal-resources'
        )
      ),  
      '#type' => 'select',
      '#options' => $Internal_resources,  
      '#empty_option' => 'None',
      '#validate' => TRUE,
      '#select2' => array(
        'width' => '100%',
        'minimumResultsForSearch' => '1',
      ),
      '#field_prefix' => '',
      '#prefix' => '<div class="row"><div class="col-md-4">',
      '#suffix' => '</div>',
    );
    
    $outside_vendors = get_vender_company_user_list();
    $element['resources_box']['wo_outside_vendors'] = array (
      '#title' => ('Outside Vendors'),  
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo-outside-vendors'
        )
      ),  
      '#type' => 'select',
      '#validate' => TRUE,
      '#multiple' => TRUE,
      '#options' => $outside_vendors, 
      '#empty_option' => 'None',  
      '#prefix' => '<div class="col-md-4">',
      '#suffix' => '</div></div>',
    );
    $element['resources_box']['wo_outside_vendors_values'] = array(
      '#type' => 'textfield',
      '#attributes' => array(
        'class'=> array(
          'clear-data',
          'wo_outside_vendors_values'
        )
      ),
      '#prefix' => '<div style="display:none">',
      '#suffix' => '</div>'
    );
  } //In Case user role hcfm customer hide end

  $element['user_uid'] = array(
    '#type' => 'value',
    '#value' => $user->uid,
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'wo-user-uid'
      )
    ),
  );
  $element['company_nid'] = array(
    '#type' => 'value',
    '#value' => $company->nid,
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'wo-company-nid'
      )
    ),
  );
  $element['node_nid'] = array(
    '#type' => 'hidden',
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'wo-node-nid'
      )
    ),  
  );
  $element['wo_upload_fid'] = array(
    '#type' => 'hidden',
    '#attributes' => array(
      'class'=> array(
        'clear-data',
        'wo-upload-fid'
      )
    ),  
  );
  $element['hcfmtype'] = array('#type' => 'value', '#value' => 'fm_work_order'); 
  $element['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),  
  );
  $element['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-workorder">',    
  );
  return $element;
}

function hcfm_work_order_add_form_validate($form, &$form_state) { //pre($form_state['values'],1);//drup_msg($form_state ['values']);
  $values = $form_state ['values'];
 /* if(isset($_FILES['attach1'])) {
    $fileCount1 = count($_FILES['attach1']['name']);
    for ($i = 0; $i < $fileCount1; $i++) {      
      $file1 = custom_file_save_upload($i, 'attach1',FILE_EXISTS_REPLACE);     
      if ($file1) {   
        if ($file_move1 = file_move($file1, 'public://')) {
          $form_state['values']['wo_attachment_one'][$i] = $file_move1;
        } 
      }
    }
  }*/
}

function wo_attachment_one_attachment_callback($form,&$form_state){
  $commands = array();
  
  //$commands[] = ajax_command_alert('file upload');  
  $insertedAttachment = array();
   $values = $form_state ['values'];
  if(isset($_FILES['attach1'])) {
    $fileCount1 = count($_FILES['attach1']['name']);
    for ($i = 0; $i < $fileCount1; $i++) {      
      $file1 = custom_file_save_upload($i, 'attach1',FILE_EXISTS_REPLACE);     
      if ($file1) {   
        if ($file_move1 = file_move($file1, 'public://')) {
          $form_state['values']['wo_attachment_one'][$i] = $file_move1;
        } 
      }
    }
  }
  //pre('callbacl file');
 // pre($form_state);

  foreach ($form_state['values']['wo_attachment_one'] as $fidindex => $fidvalue) {
   $insertedAttachment[] = $fidvalue->fid;
  }
  //pre($insertedAttachment);



  $commands[] = ajax_command_invoke(".wo-upload-fid", 'val',array(json_encode($insertedAttachment)));
  $commands[] = ajax_command_html(".image-upload-done", '<div style="color: green;"><h5>file uploaded successfully</h5></div>');
  
  $form_state['rebuild'] = TRUE;




  return array('#type' => 'ajax', '#commands' => $commands);    
}

function wo_attachment_one_attachment_submit_handler(&$form,&$form_state){ //pre('submit');pre($form_state);
  global $user, $company, $base_url, $base_path;
  $values = $form_state['values'];
  $form_state['insertAttachment'] = array();
  $insertedAttachment = array();
  //

  if(isset($values['wo_attachment_one']) && !empty($values['wo_attachment_one'])) {
    foreach ($form_state['values']['wo_attachment_one'] as $imgkey => $file) {
  
      $new_file = file_load($file->fid);
      $file_arr = (array)$new_file;
      $file_arr['display'] = 1;   
      $insertedAttachment[] = $file_arr;
    }  
  }
  $form_state['insertAttachment'] = $insertedAttachment;
  //$form_state['rebuild'] = TRUE;
}


function hcfm_work_order_add_form_submit($form,&$form_state){ //pre($form_state,1);//drup_msg($form_state['values']);
  global $user, $company;
  $values = $form_state['values'];
  if(isset($values['node_nid']) && !empty($values['node_nid']) && is_numeric($values['node_nid'])){
    $node = node_load($values['node_nid']);
    $node->title = $values['wo_number'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid; 
    $node->field_wo_name['und'][0]['value'] = $values['wo_name'];
    $node->field_wo_number['und'][0]['value'] = $values['wo_number'];
    $node->field_wo_description['und'][0]['value'] = $values['wo_description'];

    if(isset($values['wo_asset_description']) && !empty($values['wo_asset_description'])){
      $node->field_wo_asset_description['und'][0]['target_id'] = $values['wo_asset_description'];
    }
    if(isset($values['wo_asset_description_value']) && !empty($values['wo_asset_description_value']) && empty($values['wo_asset_description'])){
      $node->field_wo_asset_description['und'][0]['target_id'] = $values['wo_asset_description_value'];
    }

    if(isset($values['wo_asset_number']) && !empty($values['wo_asset_number'])){
      $node->field_wo_asset_number['und'][0]['target_id'] = $values['wo_asset_number'];       
    }
    if(isset($values['wo_asset_number_value']) && !empty($values['wo_asset_number_value']) && empty($values['wo_asset_number'])){
      $node->field_wo_asset_number['und'][0]['target_id'] = $values['wo_asset_number_value'];       
    }

    if(isset($values['wo_region']) && !empty($values['wo_region']))
      $node->field_wo_region['und'][0]['target_id'] = $values['wo_region']; 
    if(isset($values['wo_facility']) && !empty($values['wo_facility']))
      $node->field_wo_facility['und'][0]['target_id'] = $values['wo_facility'];     
    if(isset($values['wo_status']) && !empty($values['wo_status']))
      $node->field_wo_status['und'][0]['target_id'] = $values['wo_status'];
    if(isset($values['wo_priority_rr']) && !empty($values['wo_priority_rr']))
      $node->field_wo_priority_rr['und'][0]['target_id'] = $values['wo_priority_rr'];     
    $node->field_wo_date_requested['und'][0]['value'] = $values['wo_date_requested'];
    $node->field_wo_date_completed['und'][0]['value'] = $values['wo_complete_by_date']; 
    if(isset($values['wo_problem_code']) && !empty($values['wo_problem_code']))
      $node->field_wo_problem_code['und'][0]['target_id'] = $values['wo_problem_code'];
    $node->field_wo_model_number['und'][0]['value'] = $values['wo_model_number'];
    $node->field_wo_manufacturer['und'][0]['value'] = $values['wo_manufacturer'];
    $node->field_wo_serial_number['und'][0]['value'] = $values['wo_serial_number'];
    if(isset($values['wo_account_number']) && !empty($values['wo_account_number']))
      $node->field_wo_account_number['und'][0]['target_id'] = $values['wo_account_number'];
    if(isset($values['wo_type']) && !empty($values['wo_type']))
      $node->field_wo_type['und'][0]['target_id'] = $values['wo_type'];
    $node->field_wo_requestor_remarks['und'][0]['value'] = $values['wo_requestor_remarks'];
    if(isset($values['wo_skill']) && !empty($values['wo_skill']))
      $node->field_wo_skill['und'][0]['target_id'] = $values['wo_skill'];
    if(isset($values['wo_priority']) && !empty($values['wo_priority']))
      $node->field_wo_priority['und'][0]['target_id'] = $values['wo_priority'];
    if(isset($values['wo_resource']) && !empty($values['wo_resource']))
      $node->field_wo_resource['und'][0]['target_id'] = $values['wo_resource'];
    if(isset($values['wo_special_tag']) && !empty($values['wo_special_tag']))
      $node->field_wo_special_tag['und'][0]['target_id'] = $values['wo_special_tag'];
    if(isset($values['wo_needed_permit']) && !empty($values['wo_needed_permit']))
      $node->field_wo_needed_permit['und'][0]['target_id'] = $values['wo_needed_permit'];
    if(isset($values['wo_site']) && !empty($values['wo_site']))
      $node->field_wo_site['und'][0]['target_id'] = $values['wo_site'];
    if(isset($values['wo_location']) && !empty($values['wo_location']))
      $node->field_wo_location['und'][0]['target_id'] = $values['wo_location'];   
    if(isset($values['wo_floor']) && !empty($values['wo_floor']))
      $node->field_wo_floor['und'][0]['value'] = $values['wo_floor'];
    $node->field_wo_room['und'][0]['value'] = $values['wo_room'];
    $node->field_wo_estimated_time_1['und'][0]['value'] = $values['wo_estimated_time'];
    $node->field_wo_estimated_time_2['und'][0]['value'] = $values['wo_estimated_time_type']; 

    $node->field_wo_time_charge['und'][0]['value'] = $values['wo_date_time_charges']; 

    if(isset($values['wo_internal_resources']) && !empty($values['wo_internal_resources']))  
      $node->field_wo_internal_resources['und'][0]['value'] = $values['wo_internal_resources'];   

      $oldfid = array();
      $woquery =  db_select('field_data_field_wo_attachement' ,'fdfwa');
      $woquery->leftjoin('file_managed','filem','filem.fid=fdfwa.field_wo_attachement_fid');
      $woquery->fields('filem',array('fid'));    
      $woquery->condition('fdfwa.entity_id' ,$values['node_nid'] ,'=');
      $oldfid = $woquery->execute()->fetchCol();

    /*if(isset($values['wo_attachment_one']) && !empty($values['wo_attachment_one'])) {
      foreach ($form_state['values']['wo_attachment_one'] as $imgkey => $file) {
      if(!isset($node->field_wo_attachement['und'])){
      $node->field_wo_attachement['und'] = array();     
      }
      $new_file = file_load($file->fid);
      $file_arr = (array)$new_file;
        $file_arr['display'] = 1;   
      $node->field_wo_attachement['und'][] = $file_arr;
      }  
    }*/
    if(isset($values['wo_upload_fid']) && !empty($values['wo_upload_fid'])) {
      $fids = json_decode($values['wo_upload_fid'],TRUE);
      $finalfids = array_merge($oldfid,$fids);
      foreach ($finalfids as $fkey => $fvalue) {
        $new_file = file_load($fvalue);
        $file_arr = (array)$new_file;
        $file_arr['display'] = 1;   
        $file_arr['status'] = 1;   
        $node->field_wo_attachement['und'][] = $file_arr;
      }
    }
    if(isset($values['wo_outside_vendors']) && !empty($values['wo_outside_vendors'])){
      $node->field_wo_outside_vendors = '';   
      $FareaType = 0;
      foreach($values['wo_outside_vendors'] as $FatValue){
      $node->field_wo_outside_vendors['und'][$FareaType]['value'] = $FatValue;    
      $FareaType++;   
      } 
    }
    node_save($node);
  }else{
    $node = new stdClass();
    $node->type = 'fm_work_order';
    $node->title = $values['wo_number'];
    $node->uid = $user->uid;
    $node->og_group_ref['und'][0]['target_id'] = $company->nid; 
    $node->field_wo_name['und'][0]['value'] = $values['wo_name'];
    $node->field_wo_number['und'][0]['value'] = $values['wo_number'];
    $node->field_wo_description['und'][0]['value'] = $values['wo_description'];
    if(isset($values['wo_asset_description']) && !empty($values['wo_asset_description']))
      $node->field_wo_asset_description['und'][0]['target_id'] = $values['wo_asset_description'];
    if(isset($values['wo_asset_number']) && !empty($values['wo_asset_number']))
      $node->field_wo_asset_number['und'][0]['target_id'] = $values['wo_asset_number'];       
    if(isset($values['wo_region']) && !empty($values['wo_region']))
      $node->field_wo_region['und'][0]['target_id'] = $values['wo_region']; 
    if(isset($values['wo_facility']) && !empty($values['wo_facility']))
      $node->field_wo_facility['und'][0]['target_id'] = $values['wo_facility'];     
    if(isset($values['wo_status']) && !empty($values['wo_status']))
      $node->field_wo_status['und'][0]['target_id'] = $values['wo_status'];
    if(isset($values['wo_priority_rr']) && !empty($values['wo_priority_rr']))
      $node->field_wo_priority_rr['und'][0]['target_id'] = $values['wo_priority_rr'];     
    $node->field_wo_date_requested['und'][0]['value'] = $values['wo_date_requested'];
    $node->field_wo_date_completed['und'][0]['value'] = $values['wo_complete_by_date']; 
    if(isset($values['wo_problem_code']) && !empty($values['wo_problem_code']))
      $node->field_wo_problem_code['und'][0]['target_id'] = $values['wo_problem_code'];
    $node->field_wo_model_number['und'][0]['value'] = $values['wo_model_number'];
    $node->field_wo_manufacturer['und'][0]['value'] = $values['wo_manufacturer'];
    $node->field_wo_serial_number['und'][0]['value'] = $values['wo_serial_number'];
    if(isset($values['wo_account_number']) && !empty($values['wo_account_number']))
      $node->field_wo_account_number['und'][0]['target_id'] = $values['wo_account_number'];
    if(isset($values['wo_type']) && !empty($values['wo_type']))
      $node->field_wo_type['und'][0]['target_id'] = $values['wo_type'];
    $node->field_wo_requestor_remarks['und'][0]['value'] = $values['wo_requestor_remarks'];
    if(isset($values['wo_skill']) && !empty($values['wo_skill']))
      $node->field_wo_skill['und'][0]['target_id'] = $values['wo_skill'];
    if(isset($values['wo_priority']) && !empty($values['wo_priority']))
      $node->field_wo_priority['und'][0]['target_id'] = $values['wo_priority'];
    if(isset($values['wo_resource']) && !empty($values['wo_resource']))
      $node->field_wo_resource['und'][0]['target_id'] = $values['wo_resource'];
    if(isset($values['wo_special_tag']) && !empty($values['wo_special_tag']))
      $node->field_wo_special_tag['und'][0]['target_id'] = $values['wo_special_tag'];
    if(isset($values['wo_needed_permit']) && !empty($values['wo_needed_permit']))
      $node->field_wo_needed_permit['und'][0]['target_id'] = $values['wo_needed_permit'];
    if(isset($values['wo_site']) && !empty($values['wo_site']))
      $node->field_wo_site['und'][0]['target_id'] = $values['wo_site'];
    if(isset($values['wo_location']) && !empty($values['wo_location']))
      $node->field_wo_location['und'][0]['target_id'] = $values['wo_location'];   
    if(isset($values['wo_floor']) && !empty($values['wo_floor']))
      $node->field_wo_floor['und'][0]['value'] = $values['wo_floor'];
    $node->field_wo_room['und'][0]['value'] = $values['wo_room'];
    $node->field_wo_estimated_time_1['und'][0]['value'] = $values['wo_estimated_time'];
    $node->field_wo_estimated_time_2['und'][0]['value'] = $values['wo_estimated_time_type']; 
    $node->field_wo_time_charge['und'][0]['value'] = $values['wo_date_time_charges'];
    if(isset($values['wo_internal_resources']) && !empty($values['wo_internal_resources']))  
      $node->field_wo_internal_resources['und'][0]['value'] = $values['wo_internal_resources'];   
    /*if(isset($values['wo_attachment_one']) && !empty($values['wo_attachment_one'])) {
      foreach ($form_state['values']['wo_attachment_one'] as $imgkey => $file) {
      if(!isset($node->field_wo_attachement['und'])){
      $node->field_wo_attachement['und'] = array();     
      }
      $new_file = file_load($file->fid);
      $file_arr = (array)$new_file;
        $file_arr['display'] = 1;   
      $node->field_wo_attachement['und'][] = $file_arr;
      }  
    }*/
    if(isset($values['wo_upload_fid']) && !empty($values['wo_upload_fid'])) {
      $fids = json_decode($values['wo_upload_fid'],TRUE);
      foreach ($fids as $fkey => $fvalue) {
        $new_file = file_load($fvalue);
        $file_arr = (array)$new_file;
        $file_arr['display'] = 1;   
        $file_arr['status'] = 1;   
        $node->field_wo_attachement['und'][] = $file_arr;
      }
    }
    if(isset($values['wo_outside_vendors']) && !empty($values['wo_outside_vendors'])){
      $node->field_wo_outside_vendors = '';   
      $FareaType = 0;
      foreach($values['wo_outside_vendors'] as $FatValue){
      $node->field_wo_outside_vendors['und'][$FareaType]['value'] = $FatValue;    
      $FareaType++;   
      } 
    }
    //pre($node,1);
    node_save($node);
  }
}

// hcfm work order end



function custom_file_save_upload($form_field_name, $file_name = 'files', $validators = array(), $destination = FALSE, $replace = FILE_EXISTS_RENAME) {
  global $user;
  static $upload_cache;
  // Return cached objects without processing since the file will have
  // already been processed and the paths in _FILES will be invalid.
  if (isset($upload_cache[$form_field_name])) {
    return $upload_cache[$form_field_name];
  }
  // Make sure there's an upload to process.
  if (empty($_FILES[$file_name]['name'][$form_field_name])) {
    return NULL;
  }
  // Check for file upload errors and return FALSE if a lower level system
  // error occurred. For a complete list of errors:
  // See http://php.net/manual/features.file-upload.errors.php.
  switch ($_FILES[$file_name]['error'][$form_field_name]) {
    case UPLOAD_ERR_INI_SIZE:
    case UPLOAD_ERR_FORM_SIZE:
      drupal_set_message(t('The file %file could not be saved, because it exceeds %maxsize, the maximum allowed size for uploads.', array('%file' => $_FILES[$file_name]['name'][$form_field_name], '%maxsize' => format_size(file_upload_max_size()))), 'error');
      return FALSE;

    case UPLOAD_ERR_PARTIAL:
    case UPLOAD_ERR_NO_FILE:
      drupal_set_message(t('The file %file could not be saved, because the upload did not complete.', array('%file' => $_FILES[$file_name]['name'][$form_field_name])), 'error');
      return FALSE;

    case UPLOAD_ERR_OK:
      // Final check that this is a valid upload, if it isn't, use the
      // default error handler.
      if (is_uploaded_file($_FILES[$file_name]['tmp_name'][$form_field_name])) {
        break;
      }
      // Unknown error
    default:
      drupal_set_message(t('The file %file could not be saved. An unknown error has occurred.', array('%file' => $_FILES[$file_name]['name'][$form_field_name])), 'error');
      return FALSE;
  }

  // Begin building file object.
  $file = new stdClass();
  $file->uid = $user->uid;
  $file->status = 0;
  $file->filename = trim(drupal_basename($_FILES[$file_name]['name'][$form_field_name]), '.');
  $file->uri = $_FILES[$file_name]['tmp_name'][$form_field_name];
  $file->filemime = file_get_mimetype($file->filename);
  $file->filesize = $_FILES[$file_name]['size'][$form_field_name];

  $extensions = '';
  if (isset($validators['file_validate_extensions'])) {
    if (isset($validators['file_validate_extensions'][0])) {
      // Build the list of non-munged extensions if the caller provided them.
      $extensions = $validators['file_validate_extensions'][0];
    }
    else {
      // If 'file_validate_extensions' is set and the list is empty then the
      // caller wants to allow any extension. In this case we have to remove the
      // validator or else it will reject all extensions.
      unset($validators['file_validate_extensions']);
    }
  }
  else {
    // No validator was provided, so add one using the default list.
    // Build a default non-munged safe list for file_munge_filename().
    $extensions = 'jpg jpeg gif png txt doc xls pdf ppt pps odt ods odp';
    $validators['file_validate_extensions'] = array();
    $validators['file_validate_extensions'][0] = $extensions;
  }

  if (!empty($extensions)) {
    // Munge the filename to protect against possible malicious extension hiding
    // within an unknown file type (ie: filename.html.foo).
    $file->filename = file_munge_filename($file->filename, $extensions);
  }

  // Rename potentially executable files, to help prevent exploits (i.e. will
  // rename filename.php.foo and filename.php to filename.php.foo.txt and
  // filename.php.txt, respectively). Don't rename if 'allow_insecure_uploads'
  // evaluates to TRUE.
  if (!variable_get('allow_insecure_uploads', 0) && preg_match('/\.(php|pl|py|cgi|asp|js)(\.|$)/i', $file->filename) && (substr($file->filename, -4) != '.txt')) {
    $file->filemime = 'text/plain';
    $file->uri .= '.txt';
    $file->filename .= '.txt';
    // The .txt extension may not be in the allowed list of extensions. We have
    // to add it here or else the file upload will fail.
    if (!empty($extensions)) {
      $validators['file_validate_extensions'][0] .= ' txt';
      drupal_set_message(t('For security reasons, your upload has been renamed to %filename.', array('%filename' => $file->filename)));
    }
  }

  // If the destination is not provided, use the temporary directory.
  if (empty($destination)) {
    $destination = 'temporary://';
  }

  // Assert that the destination contains a valid stream.
  $destination_scheme = file_uri_scheme($destination);
  if (!$destination_scheme || !file_stream_wrapper_valid_scheme($destination_scheme)) {
    drupal_set_message(t('The file could not be uploaded, because the destination %destination is invalid.', array('%destination' => $destination)), 'error');
    return FALSE;
  }

  $file->source = $form_field_name;
  // A URI may already have a trailing slash or look like "public://".
  if (substr($destination, -1) != '/') {
    $destination .= '/';
  }
  $file->destination = file_destination($destination . $file->filename, $replace);
  // If file_destination() returns FALSE then $replace == FILE_EXISTS_ERROR and
  // there's an existing file so we need to bail.
  if ($file->destination === FALSE) {
    drupal_set_message(t('The file %source could not be uploaded because a file by that name already exists in the destination %directory.', array('%source' => $form_field_name, '%directory' => $destination)), 'error');
    return FALSE;
  }

  // Add in our check of the file name length.
  $validators['file_validate_name_length'] = array();

  // Call the validation functions specified by this function's caller.
  $errors = file_validate($file, $validators);

  // Check for errors.
  if (!empty($errors)) {
    $message = t('The specified file %name could not be uploaded.', array('%name' => $file->filename));
    if (count($errors) > 1) {
      $message .= theme('item_list', array('items' => $errors));
    }
    else {
      $message .= ' ' . array_pop($errors);
    }
    form_set_error($form_field_name, $message);
    return FALSE;
  }

  // Move uploaded files from PHP's upload_tmp_dir to Drupal's temporary
  // directory. This overcomes open_basedir restrictions for future file
  // operations.
  $file->uri = $file->destination;
  if (!drupal_move_uploaded_file($_FILES[$file_name]['tmp_name'][$form_field_name], $file->uri)) {
    form_set_error($form_field_name, t('File upload error. Could not move uploaded file.'));
    watchdog('file', 'Upload error. Could not move uploaded file %file to destination %destination.', array('%file' => $file->filename, '%destination' => $file->uri));
    return FALSE;
  }

  // Set the permissions on the new file.
  drupal_chmod($file->uri);

  // If we are replacing an existing file re-use its database record.
  if ($replace == FILE_EXISTS_REPLACE) {
    $existing_files = file_load_multiple(array(), array('uri' => $file->uri));
    if (count($existing_files)) {
      $existing = reset($existing_files);
      $file->fid = $existing->fid;
    }
  }

  // If we made it this far it's safe to record this file in the database.
  if ($file = file_save($file)) {
    // Add file to the cache.
    $upload_cache[$form_field_name] = $file;
    return $file;
  }
  return FALSE;
}

function get_facility_option_callback($RegionId,$ajax=TRUE) {
  if(isset($RegionId) && !empty($RegionId)){
  $NodeObj1 = array('NodeNid'=>$RegionId,'NodeType'=>'facility');
    $FacilityRegion = _get_hcfm_db_request_three($NodeObj1);
  drupal_json_output($FacilityRegion);
    drupal_exit(0);
  }else{
  $facility = hcfm_nodenid_nodetitle_by_node_type('facility');
  drupal_json_output($facility);
    drupal_exit(0);  
  }
}

function get_facility_list_data_by_facility_nid_callback($FacilityId,$ajax=TRUE) {
  if(isset($RegionId) && !empty($RegionId)){
  $NodeObj1 = array('NodeNid'=>$RegionId,'NodeType'=>'facility');
    $FacilityRegion = _get_hcfm_db_request_three($NodeObj1);
  drupal_json_output($FacilityRegion);
    drupal_exit(0);
  }else{
  $facility = hcfm_nodenid_nodetitle_by_node_type('facility');
  drupal_json_output($facility);
    drupal_exit(0);  
  }
}

function get_facility_list_data_callback($FacilityId,$ajax=TRUE) {
  if(isset($FacilityId) && !empty($FacilityId)){
  $JoinField = array(
      'nffb-_value'=>'field_data_field_facility_building',
      'nfff-_value'=>'field_data_field_facility_floor',
    'nffco-_value'=>'field_data_field_facility_country',
    'nffcov-_value'=>'field_data_field_facility_country_value',
    'nffaa-_value'=>'field_data_field_facility_address1',
    'nffab-_value'=>'field_data_field_facility_address2',
    'nffci-_value'=>'field_data_field_facility_city',
    'nfffst-_value'=>'field_data_field_facility_state',
    'nffstv-_value'=>'field_data_field_facility_state_value',
    'nffzi-_value'=>'field_data_field_facility_zipcode',       
  );
  $NodeObj = array('NodeNid'=>$FacilityId,'NodeType'=>'fm_facility');
  $AssetData = _get_hcfm_db_request($NodeObj,$JoinField );
  drupal_json_output($AssetData[0]);
    drupal_exit(0);
  }
}

function get_facility_region_data_callback($RegionId,$ajax=TRUE) {
  if(isset($RegionId) && !empty($RegionId)){
   $JoinField = array(    
    'nflrco-_value'=>'field_data_field_loccaton_region_country',
        'nflraa-_value'=>'field_data_field_loccaton_region_address1',
        'nflrab-_value'=>'field_data_field_loccaton_region_address2',
    'nflrci-_value'=>'field_data_field_loccaton_region_city',
        'nflrst-_value'=>'field_data_field_loccaton_region_state',
        'nflrzi-_value'=>'field_data_field_loccaton_region_zipcode'   
    );
      $NodeObj = array('NodeNid'=>$RegionId,'NodeType'=>'fm_location_region');
    $AssetData = _get_hcfm_db_request($NodeObj,$JoinField );
    drupal_json_output($AssetData[0]);
    drupal_exit(0);
  }
}


function get_asset_list_by_facilityid_callback($FacilityId,$ajax=TRUE) {
  if(isset($FacilityId) && !empty($FacilityId)){
  
    $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_asset_facility','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('entity_id'),'OtherId'=>array('equal'=>array('field_asset_facility_target_id'=>$FacilityId))); 
  $TableData11 =  _get_hcfm_db_request($NodeObj11);
   

    if(isset($TableData11) && !empty($TableData11)){
      $NodeObj111 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'node','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('nid','title'),'OtherId'=>array('IN'=>array('nid'=>$TableData11))); 
    $TableData111 =  _get_hcfm_db_request($NodeObj111);
    
    drupal_json_output($TableData111);
  }else{
      drupal_exit(0);
  }
  }
}

function get_state_by_countrycode_callback($CountryCode,$ajax=TRUE) {
  module_load_include('inc', 'addressfield', 'addressfield.administrative_areas');
  if(isset($CountryCode) && !empty($CountryCode)){
    $administrativeNamesList = addressfield_get_administrative_areas($CountryCode);   
  drupal_json_output($administrativeNamesList);
    drupal_exit(0); 
  }
}

function get_location_data_callback($action,$id,$ajax=TRUE) {
  if(isset($action) && $action == 'region' && !empty($id)){
    $query= db_select('field_data_field_location_region', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_location_region_target_id', $id , '=');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }
  if(isset($action) && $action == 'multiregion' && !empty($id)){
    if(isset($_GET['dashregionids']) && !empty($_GET['dashregionids'])){
      $regionNidsValus = check_plain($_GET['dashregionids']);
      $regionNids = explode(',', $regionNidsValus);
      $query= db_select('field_data_field_location_region', 'flr');      
      $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
      $query->fields('n',array('nid','title'));
      $query->condition('flr.field_location_region_target_id', $regionNids , 'IN');
      $CData = $query->execute()->fetchAllKeyed();
      drupal_json_output($CData); 
    }    
  }
  if(isset($action) && $action == 'site' && !empty($id)){
    $query= db_select('field_data_field_facility_location_site', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_facility_location_site_target_id', $id , '=');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }
  if(isset($action) && $action == 'facility' && !empty($id)){
    $query= db_select('field_data_field_location_facility', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_location_facility_target_id', $id , '=');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }  
}

function get_location_compare_data_callback($action,$id,$ajax=TRUE) {
  if(isset($action) && $action == 'region' && !empty($id)){
    $ids = explode(',', $id);
    $query= db_select('field_data_field_location_region', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_location_region_target_id', $ids , 'IN');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      $selectAll = array('1'=>'All');
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }
  if(isset($action) && $action == 'multiregion' && !empty($id)){
    if(isset($_GET['dashregionids']) && !empty($_GET['dashregionids'])){
      $regionNidsValus = check_plain($_GET['dashregionids']);
      $regionNids = explode(',', $regionNidsValus);
      $query= db_select('field_data_field_location_region', 'flr');      
      $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
      $query->fields('n',array('nid','title'));
      $query->condition('flr.field_location_region_target_id', $regionNids , 'IN');
      $CData = $query->execute()->fetchAllKeyed();
      drupal_json_output($CData); 
    }    
  }
  if(isset($action) && $action == 'site' && !empty($id)){
    $ids = explode(',', $id);
    $query= db_select('field_data_field_facility_location_site', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_facility_location_site_target_id', $ids , 'IN');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      $selectAll = array('all'=>'All');
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }
  if(isset($action) && $action == 'facility' && !empty($id)){
    $ids = explode(',', $id);
    $query= db_select('field_data_field_location_facility', 'flr');      
    $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
    $query->fields('n',array('nid','title'));
    $query->condition('flr.field_location_facility_target_id', $ids , 'IN');
    $CData = $query->execute()->fetchAllKeyed();
    if(isset($ajax) && !empty($ajax) && $ajax == TRUE){
      $selectAll = array('all'=>'All');
      drupal_json_output($CData);
    }else{
      return $CData;
    }
  }  
}

function get_location_data_country_callback($action,$id,$ajax=TRUE) {  
  if(isset($action) && $action == 'region' && !empty($id)){
    $query= db_select('field_data_field_locationregion_address', 'flr');  
    $query->fields('flr',array('field_locationregion_address_country'));
    $query->condition('flr.entity_id', $id , '=');
    $query->condition('flr.bundle', 'fm_location_region' , '=');
    $CData = $query->execute()->fetchColumn(0);
    drupal_json_output($CData);     
  }
  if(isset($action) && $action == 'site' && !empty($id)){
    $query= db_select('field_data_field_locationsite_address', 'flr');  
    $query->fields('flr',array('field_locationsite_address_country'));
    $query->condition('flr.entity_id', $id , '=');
    $query->condition('flr.bundle', 'fm_location_site' , '=');
    $CData = $query->execute()->fetchColumn(0);
    drupal_json_output($CData);
  }
  if(isset($action) && $action == 'facility' && !empty($id)){
    $query= db_select('field_data_field_facility_address', 'flr');  
    $query->fields('flr',array('field_facility_address_country'));
    $query->condition('flr.entity_id', $id , '=');
    $query->condition('flr.bundle', 'fm_facility' , '=');
    $CData = $query->execute()->fetchColumn(0);
    drupal_json_output($CData);     
  }  
}

function get_workorder_data_callback($action,$id,$ajax=TRUE) {  
  if(isset($action) && $action == 'asset' && !empty($id)){
    $JoinField = array(   
    'nfan-_value'=>'field_data_field_asset_number',
    'nfama-_value'=>'field_data_field_asset_manuafacturer',
    'nfamnu-_value'=>'field_data_field_asset_model_number',
    'nfasn-_value'=>'field_data_field_asset_serial_number',   
    'nfaanu-_target_id'=>'field_data_field_asset_account_number',
    'nfarra-_target_id'=>'field_data_field_asset_priority_rr',
    'nfare-_target_id'=>'field_data_field_asset_region',
    'nfasit-_target_id'=>'field_data_field_asset_site',
    'nfafac-_target_id'=>'field_data_field_asset_facility',
    'nfaloc-_target_id'=>'field_data_field_asset_location',   
  );
  $NodeObj = array('NodeNid'=>$id,'NodeType'=>'fm_asset');
  $NData = _get_hcfm_db_request($NodeObj,$JoinField );
    if($NData){
      drupal_json_output($NData[0]);
      drupal_exit(0);
    }
  }  
}

function get_facility_floor_data_callback($nid ,$ajax=TRUE) {  
  if(isset($nid) && !empty($nid)){
  $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('delta','field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$nid ))); 
  $TableData111 =  _get_hcfm_db_request($NodeObj11);
  
  $NodeObj12 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_square_feet','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('delta','field_facility_floor_square_feet_value'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$nid ))); 
  $TableData112 =  _get_hcfm_db_request($NodeObj12);
  
  $floorData = array('facilityfloor'=>$TableData111,'facilitysf'=>$TableData112);
    if($floorData){
    drupal_json_output($floorData);
    drupal_exit(0);
  }
  }  
}

function get_zone_floor_list_callback($fnid ,$ajax=TRUE) {  
  if(isset($fnid) && !empty($fnid)){
  $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'equal'=>array('entity_id'=>$fnid)));
  $TableData11 =  _get_hcfm_db_request($NodeObj11);
    if($TableData11){
    drupal_json_output(array_flip($TableData11));
    drupal_exit(0);
  }
  }  
}
//function use in node type "fm_location_location" field is "field_location_floors"
function _get_location_zone_facility_floor(){
  $output = '';
   $FacilityListObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'node','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('nid'),'OtherId'=>array('equal'=>array('type'=>'fm_facility'))); 
  $FacilityList =  _get_hcfm_db_request($FacilityListObj);
  if(isset($FacilityList) && !empty($FacilityList)){
  $FloorListsObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAll','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'IN'=>array('entity_id'=>$FacilityList)));
  $FloorLists =  _get_hcfm_db_request($FloorListsObj);
  //$output = array_flip($FloorLists);
  $FloorNidTitle = array();
  foreach($FloorLists as $key=>$value){
      $FloorNidTitle[$value['nid_delta']] =$value['field_facility_floor_name_value'];
    }
  $output = $FloorNidTitle;
  }
  return $output; 
}

function _get_asset_system_subsystem($Snid ,$ajax=TRUE) {  
  if(isset($Snid) && !empty($Snid)){
  $query= db_select('field_data_field_asset_system_list', 'flr');      
  $query->leftjoin('node' ,'n', 'n.nid=flr.entity_id');
  $query->fields('n',array('nid','title'));
  $query->condition('flr.field_asset_system_list_target_id', $Snid , '=');
  $CData = $query->execute()->fetchAllKeyed();
    if($CData){
    drupal_json_output($CData);
    drupal_exit(0);
  }
  }   
}


// ==========================
// Work by BHuv
// For dashboard and chart calcualtion

function hcfm_dashboard_data_form($form,$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['main-container0'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboard-data-container0-section')),
    '#prefix' => '<div id="hcfm-dashboard-data-container0-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboardcompare_data_container1_process'),
  );
  $form['main-container1'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboard-data-container1-section')),
    '#prefix' => '<div id="hcfm-dashboard-data-container1-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboard_data_container1_process'),
  );
  $form['main-container2'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboard-data-container2-section')),
    '#prefix' => '<div id="hcfm-dashboard-data-container2-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboard_data_container2_process'),
  );
  $form['main-container3'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboard-data-container3-section')),
    '#prefix' => '<div id="hcfm-dashboard-data-container3-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboardcompare_data_container2_process'),
  );  
  return $form;
}

function hcfm_dashboard_data_container1_process($element, &$form_state){
  global $user,$company;  
  $element['dashboard_go_compare'] = array(   
  '#markup' => '<div class="clserfix"><div class="dash-error"></div><div class="text-right"><a href="javascript:void(0);" class="dashboard_gocompare_btn"><input type="button" class="btn btn primary form-submit" value="Comparison"></a></div></div>',  
  ); 
  $element['dashboard_type'] = array(
  '#type' => 'select',
  '#title' => '<label for="edit-dashboard-type">Select Type <span class="form-required" title="This field is required.">*</span></label>',
  '#options' => array('fm_assets'=>'Assets','fm_work_orders'=>'Work Orders'), 
  '#attributes' => array(
    'class'=> array(
    'dashboard_type',
    'clear-data',
    )
  ),
  //'#default_value' => 0,
  '#empty_option' => t('- Select -'),
  '#validate' => TRUE,
  //'#required' => TRUE,
  '#prefix' => '<div class="margin-5 row"><div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  ); 
  $element['dashboard_type_filter'] = array(
  '#type' => 'select',
  '#title' => '<label for="edit-dashboard-type-filter">Select Type Filter <span class="form-required" title="This field is required.">*</span></label>',
  '#empty_option' => t('- Select -'),
  /*'#states' => array(
    'visible' => array(
      ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
    ),
  ),*/
  '#attributes' => array(
    'class'=> array(
    'dashboard_type_filter',
    'clear-data',
    )
  ),
  '#validate' => TRUE,
  //'#required' => TRUE,
  '#options' => array('assets_by_riskrank'=>'Assets by Risk Rank','assets_by_rr_1000_square_foot'=>'Assets by Risk Rank / 1,000 Square Foot','pm_completion_rate'=>'PM Completion Rate','pm_to_cm_wo_ratio'=>'PM to CM Work Order Ratio','pm_and_cm_work_orders' =>'PM and CM Work Orders','pm_and_cm_work_orders_open'=>'PM and CM Work Orders Open','pm_and_cm_work_orders_closed'=>'PM and CM Work Orders Closed'),
  //'#default_value' => 0,
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  );  
  
  
  
  
  
  $queryR = db_select('node' ,'n');
  $queryR->fields('n', array('nid','title'));
  $queryR->condition('n.type','fm_location_region');
  $dashboardRegion = $queryR->execute()->fetchAllKeyed(0,1);
  $fm_risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  $element['dashboard_riskrank'] = array(
  '#title' => t('Select Risk Rank'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',     
    'dashboard-riskrank'
    )
  ),
  '#type' => 'select',
  '#options' => $fm_risk_rank,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  ); 
  $asset_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
  $element['dashboard_region'] = array(
  '#title' => t('Select Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-region',
    'dashboard-region'
    )
  ),

  '#type' => 'select',
  '#options' => $asset_region,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div></div>',
  );
  $location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$company->nid,$user->uid);
  $element['dashboard_site'] = array(
  '#title' => t('Select Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-site',
    'dashboard-site'
    )
  ),

  '#type' => 'select',
  '#options' => $location_site,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="margin-5 row"><div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  
  );
  $asset_facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  $element['dashboard_facility'] = array(
  '#title' => t('Select Facility '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-facility',
    'dashboard-facility'
    )
  ),

  '#type' => 'select',
  '#options' => $asset_facility,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  );
  $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$company->nid,$user->uid);
  $element['dashboard_zone'] = array(
  '#title' => t('Select Zone '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-location',
    'dashboard-location'
    )
  ),

  '#type' => 'select',
  '#options' => $location_location,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  );
  $DashboardFilter = array('today'=>'Today','tomorrow'=>'Tomorrow','yesterday'=>'Yesterday','last_year'=>'Last Year','last_month'=>'Last Month','last_week'=>'Last Week','this_year'=>'This Year','this_month'=>'This Month','this_week'=>'This Week','next_year'=>'Next Year','next_month'=>'Next Month','next_week'=>'Next Week');
  $element['dashboard_filter'] = array(
  '#title' => t('Select Filter'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',    
    'dashboard-filter'
    )
  ),

  '#type' => 'select',
  '#options' => $DashboardFilter, 
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div></div>',
  ); 
  
  $element['submit_dashboard_filter'] = array(
    '#type' => 'button',
  '#ajax' => array(
    'callback' => 'dashboard_filter_submit_callback',
    'event' => 'click',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
  ),
  '#validate' => TRUE,
  '#value' => t('Submit'),
  '#prefix' => '<div class="clearfix"><div class="form-item"><div class="clearfix"><label>&nbsp;</label></div><div class="display-inline-block">'.l('<input type="button" class="btn btn primary form-submit" value="Reset" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('dashboard_filter_reset')))).'</div><div class="display-inline-block">',
  '#suffix' => '</div></div></div>',
  );
  return $element;
}

function dashboard_filter_submit_callback($form,&$form_state){ // drup_msg($form_state['values']);
  global $user, $company;
  $commands = array();
  $values = $form_state['values']; 
  if(isset($form_state['triggering_element']['#value']) && !empty($form_state['triggering_element']['#value']) && $form_state['triggering_element']['#value'] == 'Submit'){
   $DashboardType = $values['dashboard_type'];
   $TypeFilter = $values['dashboard_type_filter'];
   $WoRisNid = $values['dashboard_riskrank'];
   $WoRegNid = $values['dashboard_region'];
   $WoSitNid = $values['dashboard_site'];
   $WoFacNid = $values['dashboard_facility']; 
   $WoZonNid = $values['dashboard_zone'];
   $Filter = $values['dashboard_filter'];
  if(isset($TypeFilter,$DashboardType) && !empty($TypeFilter) && !empty($DashboardType)){
    $dbOr = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_date_requested','fdfwdr','fdfwdr.entity_id=n.nid');
    $query->fields('fdfwdr',array('field_wo_date_requested_value'));    
    if(isset($TypeFilter) && !empty($TypeFilter) && $TypeFilter == 'pm_and_cm_work_orders'){
    $query->leftjoin('field_data_field_wo_type','fdfwtyp','fdfwtyp.entity_id=n.nid');
    $query->fields('fdfwtyp',array('field_wo_type_target_id'));
    $query->condition($dbOr);
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52921,'=');
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52926,'=');    
    } 
    if(isset($TypeFilter) && !empty($TypeFilter) && $TypeFilter == 'pm_and_cm_work_orders_open'){
    $query->leftjoin('field_data_field_wo_type','fdfwtyp','fdfwtyp.entity_id=n.nid');
    $query->fields('fdfwtyp',array('field_wo_type_target_id'));
    $query->condition($dbOr);
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52921,'=');
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52926,'=');
    $query->leftjoin('field_data_field_wo_status','fdfwsta','fdfwsta.entity_id=n.nid');
    $query->fields('fdfwsta',array('field_wo_status_target_id'));   
    $query->condition('fdfwsta.field_wo_status_target_id',52941,'=');   
    }
    if(isset($TypeFilter) && !empty($TypeFilter) && $TypeFilter == 'pm_and_cm_work_orders_closed'){
    $query->leftjoin('field_data_field_wo_type','fdfwtyp','fdfwtyp.entity_id=n.nid');
    $query->fields('fdfwtyp',array('field_wo_type_target_id'));
    $query->condition($dbOr);
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52921,'=');
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52926,'=');  
    $query->leftjoin('field_data_field_wo_status','fdfwsta','fdfwsta.entity_id=n.nid');
    $query->fields('fdfwsta',array('field_wo_status_target_id'));   
    $query->condition('fdfwsta.field_wo_status_target_id',52946,'=');   
    }
    if(isset($TypeFilter) && !empty($TypeFilter) && $TypeFilter == 'pm_and_cm_work_orders_issued_waiting_for_parts'){
    $query->leftjoin('field_data_field_wo_type','fdfwtyp','fdfwtyp.entity_id=n.nid');
    $query->fields('fdfwtyp',array('field_wo_type_target_id'));
    $query->condition($dbOr);
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52921,'=');
    $dbOr->condition('fdfwtyp.field_wo_type_target_id',52926,'=');
    $query->leftjoin('field_data_field_wo_status','fdfwsta','fdfwsta.entity_id=n.nid');
    $query->fields('fdfwsta',array('field_wo_status_target_id'));   
    $query->condition('fdfwsta.field_wo_status_target_id',52956,'=');   
    }
    if(isset($WoRisNid) && is_numeric($WoRisNid) && !empty($WoRisNid)){
    $query->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query->fields('fdfwprr',array('field_wo_priority_rr_target_id')); 
    $query->condition('fdfwprr.field_wo_priority_rr_target_id',$WoRisNid,'=');
    }
    if(isset($WoRegNid) && is_numeric($WoRegNid) && !empty($WoRegNid)){
    $query->leftjoin('field_data_field_wo_region','fdfwr','fdfwr.entity_id=n.nid');
    $query->fields('fdfwr',array('field_wo_region_target_id')); 
    $query->condition('fdfwr.field_wo_region_target_id',$WoRegNid,'=');
    }
    if(isset($WoSitNid) && is_numeric($WoSitNid) && !empty($WoSitNid)){
    $query->leftjoin('field_data_field_wo_site','fdfws','fdfws.entity_id=n.nid');
    $query->fields('fdfws',array('field_wo_site_target_id')); 
    $query->condition('fdfws.field_wo_site_target_id',$WoSitNid,'=');
    }
    if(isset($WoFacNid) && is_numeric($WoFacNid) && !empty($WoFacNid)){
    $query->leftjoin('field_data_field_wo_facility','fdfwf','fdfwf.entity_id=n.nid');
    $query->fields('fdfwf',array('field_wo_facility_target_id')); 
    $query->condition('fdfwf.field_wo_facility_target_id',$WoFacNid,'=');
    }
    if(isset($WoZonNid) && is_numeric($WoZonNid) && !empty($WoZonNid)){
    $query->leftjoin('field_data_field_wo_location','fdfwlo','fdfwlo.entity_id=n.nid');
    $query->fields('fdfwlo',array('field_wo_location_target_id')); 
    $query->condition('fdfwlo.field_wo_location_target_id',$WoZonNid,'=');
    }   
    $query->leftjoin('field_data_field_wo_number','fdfwn','fdfwn.entity_id=n.nid');
    $query->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query->fields('n',array('nid','type','title','uid','status'));   
    $query->fields('fdfwn',array('field_wo_number_value'));
    $query->fields('fdfwprr',array('field_wo_priority_rr_target_id'));
    if($Filter == 'today'){
    $day_start = date('Y-m-d 00:00:00', time());
        $day_end = date('Y-m-d 23:59:59', time());
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'tomorrow'){
    $Filter_tomorrow = strtotime("+1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_tomorrow);
        $day_end = date('Y-m-d 23:59:59', $Filter_tomorrow);
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'yesterday'){
    $Filter_yesterday = strtotime("-1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_yesterday);
        $day_end = date('Y-m-d 23:59:59', $Filter_yesterday);
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'last_year'){
    $Filter_last_year = strtotime("-1 year");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_year);
        $day_end = date('Y-m-d 23:59:59', time());
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'last_month'){
    $Filter_last_month = strtotime("-1 month");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_month);
        $day_end = date('Y-m-d 23:59:59', time());
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'last_week'){
    $Filter_last_week = strtotime("-1 week");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_week);
        $day_end = date('Y-m-d 23:59:59', time());
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }   
    if($Filter == 'this_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y')));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'this_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of this month'));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'this_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('this week'));
        $day_end = date('Y-m-d 23:59:59', strtotime('this week +6 days'));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }   
    if($Filter == 'next_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y', strtotime('+1 year'))));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'next_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of next month'));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }
    if($Filter == 'next_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('next monday'));
        $day_end = date('Y-m-d 23:59:59', strtotime('next monday +6 days'));
    $query->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');   
    }   
    $query->condition('n.type','fm_work_order','=');
    $ReturnObj = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC); 
    if(isset($ReturnObj) && !empty($ReturnObj)){
      if($DashboardType == 'fm_assets' && $TypeFilter == 'assets_by_riskrank'){
        $header = array('Risk','Work Order Number','Asset');
        $DasTableData = hcfm_work_order_dashboard_table_content1($user->uid,$company->nid,'fm_work_order',$header,0,0,$ReturnObj);        
        $getGraphData = array_count_values(array_column($ReturnObj, 'field_wo_priority_rr_target_id'));
        $totalRisk = 0;
        foreach($getGraphData as $getCount) {
          $getFinal += $getCount;
        }
        $DasPieData = _hcfm_work_order_chart_intigration_pie($getGraphData,$getFinal);
        $DasColumnData = _hcfm_work_order_chart_intigration_column($getGraphData,$getFinal);
      }else if($DashboardType == 'fm_work_orders'){
        $header = array('PM/CM','Work Order Number','Work Order Name');
        $DasTableData = hcfm_work_order_dashboard_table_content1($user->uid,$company->nid,'fm_work_order',$header,0,'field_wo_type_target_id',$ReturnObj);        
        $getGraphData = array_count_values(array_column($ReturnObj, 'field_wo_type_target_id'));
        $totalRisk = 0;
        foreach($getGraphData as $getCount) {
          $getFinal += $getCount;
        } 
        $pgetPer = array();
        $pgetLab = array();
        foreach($getGraphData as $riskKey => $risk) { 
        $pgetPer[] = ($risk/$getFinal)*100;
        if(is_numeric($riskKey)){
          if($riskKey == 52926){
            $pgetLab[] = 'CM';
          }else if($riskKey == 52921){
            $pgetLab[] = 'PM';
          }
        }
      }      
      $DasPieData = _hcfm_chart_intigration_pie($pgetPer,$pgetLab);  
      $cgetPer = array();
      $cgetLab = array();
      foreach($getGraphData as $riskKey => $risk) { 
        $cgetPer[] = round((($risk/$getFinal )*100) , 2);
        if(is_numeric($riskKey)){
          if($riskKey == 52926){
            $cgetLab[] = 'CM';
          }else if($riskKey == 52921){
            $cgetLab[] = 'PM';
          } 
        }
      }       
      $DasColumnData = _hcfm_chart_intigration_column($cgetPer,$cgetLab);    
    }
    $commands[] = ajax_command_replace("#dashboard_table1_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table1_datiles_outer" class="clear-data">'.$DasTableData.'</div>'));
    $commands[] = ajax_command_replace("#dashboard_table2_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table2_datiles_outer" class="clear-data">'.$DasPieData.'</div>'));
    $commands[] = ajax_command_replace("#dashboard_table3_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table3_datiles_outer" class="clear-data">'.$DasColumnData.'</div>'));
    }
    else {
      $commands[] = ajax_command_replace("#dashboard_table1_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table1_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_table2_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table2_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_table3_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table3_datiles_outer" class="clear-data"></div>'));   
    }
  }
  else {
    $commands[] = ajax_command_replace("#dashboard_table1_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table1_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_table2_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table2_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_table3_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table3_datiles_outer" class="clear-data"></div>'));     
  }
  if(empty($DashboardType) && empty($TypeFilter)){
    $commands[] = ajax_command_replace(".dash-error", '<div class="dash-error"><div style="color: red;">* Select Type</div><div style="color: red;">* Select Type Filter</div></div>');   
    $commands[] = ajax_command_invoke('select.dashboard_type', 'addClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter','addClass',array('error'));
  }else if(!empty($DashboardType) && empty($TypeFilter)){ 
    $commands[] = ajax_command_replace(".dash-error", '<div class="dash-error"><div style="color: red;">* Select Type</div></div>');
    $commands[] = ajax_command_invoke('select.dashboard_type', 'removeClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter','addClass',array('error'));
  }else if(empty($DashboardType) && !empty($TypeFilter)){ 
    $commands[] = ajax_command_replace(".dash-error", '<div class="dash-error"><div style="color: red;">* Select Type Filter</div></div>');
    $commands[] = ajax_command_invoke('select.dashboard_type', 'addClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter','removeClass',array('error'));
  }
  }
  else {
    $commands[] = ajax_command_replace("#dashboard_table1_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table1_datiles_outer" class="clear-data"></div>'));
  $commands[] = ajax_command_replace("#dashboard_table2_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table2_datiles_outer" class="clear-data"></div>'));
  $commands[] = ajax_command_replace("#dashboard_table3_datiles_outer", render($form['main-container2']['table_datiles1']['#markup']='<div id="dashboard_table3_datiles_outer" class="clear-data"></div>'));   
  }  
  return array('#type' => 'ajax','#commands' => $commands); 
}

function hcfm_dashboard_data_container2_process($element, &$form_state){ 
  $element['table_datiles1'] = array(
    '#markup' => '<div id="dashboard_table1_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  );
  
  $element['table_datiles2'] = array(
    '#markup' => '<div id="dashboard_table2_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  );
  $element['table_datiles3'] = array(
    '#markup' => '<div id="dashboard_table3_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div>',
  );  
  return $element;
}

function _hcfm_work_order_chart_intigration_pie($graphData,$totalRisk) {
  $getPer = array();
  $getLab = array();
  foreach($graphData as $riskKey => $risk) {  
    $getPer[] = ($risk/$totalRisk)*100;
  if(is_numeric($riskKey)){
    $getLab[] = _get_title_of_node($riskKey); 
  }
  }  
  $chart = array(
    '#title' => t('Risk Rank'),
    '#type' => 'chart',
    '#chart_type' => 'pie',
  '#chart_library' => 'highcharts',
    '#legend_position' => 'bottom',
    '#data_labels' => TRUE,
  '#tooltips' => TRUE,
  );
  $chart['dashboard_pie_chart'] = array(
    '#type' => 'chart_data',
    '#title' => t('Risk Rank'),
  '#labels' => $getLab,
    '#data' => $getPer,
  //'#suffix' => 'per',
  );
  $output = drupal_render($chart);
  return $output;
}

function _hcfm_work_order_chart_intigration_column($graphData,$totalRisk) {
   $getPer = array();
  $getLab = array();
  foreach($graphData as $riskKey => $risk) {  
    $getPer[] = round((($risk/$totalRisk )*100) , 2);
  if(is_numeric($riskKey)){
    $getLab[] = _get_title_of_node($riskKey); 
  }
  }  
  $chart = array(
    '#title' => t('Risk Rank'),
    '#type' => 'chart',
    '#chart_type' => 'column',  
  '#legend' => FALSE,
    '#data_labels' => TRUE,
  '#tooltips' => TRUE,
  );
  
  $chart['dashboard_column_chart'] = array(
    '#type' => 'chart_data',
    '#title' => t('Risk'),
    '#data' => $getPer,
  //'#suffix' => 'lbs', 
  );  
  $chart['dashboard_column_chart_xaxis'] = array(
    '#type' => 'chart_xaxis',
    '#labels' =>$getLab,
  );
  $output = drupal_render($chart);
  return $output;
}

function _hcfm_chart_intigration_pie($getData,$getLab = '',$chart=array()) {   
  $chart = array(
    //'#title' => t('Risk Rank'),
    '#type' => 'chart',
    '#chart_type' => 'pie',
  '#chart_library' => 'highcharts',
    '#legend_position' => 'bottom',
    '#data_labels' => TRUE,
  '#tooltips' => TRUE,
  );
  $chart['dashboard_pie_chart'] = array(
    '#type' => 'chart_data',
    //'#title' => t('Risk Rank'),
  '#data' => $getData,
  '#labels' => $getLab,
  );
  
  $output = drupal_render($chart);
  return $output;
}

function _hcfm_chart_intigration_column($getData,$getLab = '',$char=array()) { 
 //drup_msg($getData);
 //drup_msg($getLab);
  $chart = array(
    //'#title' => t('Risk Rank'),
    '#type' => 'chart',
    '#chart_type' => 'column',  
  '#legend' => FALSE,
    '#data_labels' => TRUE,
  '#tooltips' => TRUE,
  );
  
  $chart['dashboard_column_chart'] = array(
    '#type' => 'chart_data',
    '#data' => $getData,  
  );  
  if(isset($getLab) && !empty($getLab)){
  $chart['dashboard_column_chart_xaxis'] = array(
    '#type' => 'chart_xaxis',
    '#labels' =>$getLab,
  );
  }
  $output = drupal_render($chart);
  return $output;
}

function _hcfm_dashboard_compare_chart_intigration_column($graphData1,$totalRisk1,$graphData2,$totalRisk2) {
  $getPer1 = array();
  $getLab1 = array();
  foreach($graphData1 as $riskKey1 => $risk1) { 
    $getPer1[] = round((($risk1/$totalRisk1 )*100) , 2);
  if(is_numeric($riskKey1)){
    $getLab1[] = _get_title_of_node($riskKey1); 
  }
  }
  $getPer2 = array();
  $getLab2 = array();
  foreach($graphData2 as $riskKey2 => $risk2) { 
    $getPer2[] = round((($risk2/$totalRisk2 )*100) , 2);
  if(is_numeric($riskKey2)){
    $getLab2[] = _get_title_of_node($riskKey2); 
  }
  }  
  $chart = array(
    '#title' => t('Risk Rank'),
    '#type' => 'chart',
    '#chart_type' => 'column',  
  //'#legend' => FALSE,
    '#data_labels' => TRUE,
  '#tooltips' => TRUE,
  );
  
  $chart['dashboard_column_chart_a'] = array(
    '#type' => 'chart_data',
    '#title' => t('Compare A'),
    '#data' => $getPer1,
  //'#suffix' => 'lbs', 
  );
  $chart['dashboard_column_chart_b'] = array(
    '#type' => 'chart_data',
    '#title' => t('Compare B'),
    '#data' => $getPer2,
  //'#suffix' => 'lbs', 
  );  
  $chart['dashboard_column_chart_xaxisa'] = array(
    '#type' => 'chart_xaxis',
    '#labels' =>$getLab1,
  );
  $chart['dashboard_column_chart_xaxisb'] = array(
    '#type' => 'chart_xaxis',
    '#labels' =>$getLab2,
  );
  $output = drupal_render($chart);
  return $output;
}
// For dashboard compare and chart calcualtion
function hcfm_dashboardcompare_data_form($form,$form_state){
  global $user,$company;  
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['main-container1'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboardcompare-data-container1-section')),
    '#prefix' => '<div id="hcfm-dashboardcompare-data-container1-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboardcompare_data_container1_process'),
  );
  $form['main-container3'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfm-dashboard-data-container3-section')),
    '#prefix' => '<div id="hcfm-dashboard-data-container3-section">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_dashboardcompare_data_container2_process'),
  );  
  return $form;
}
function hcfm_dashboardcompare_data_container0_process($element, &$form_state){
  global $user,$company;   
  
  $element['dashboard_comparison_what'] = array(
  '#type' => 'select',
  '#title' => 'Comparison What',
  '#empty_value' => '-Select-',
  '#attributes' => array(
    'class'=> array(    
    'clear-data',
    )
  ),
  '#options' => array('fm_work_order1'=>'Work Order','fm_region1'=>'Region','fm_site1'=>'Site','fm_facility1'=>'Facility','fm_zone1'=>'Zone'),
  '#weight' => 0,

  );  
  $fm_work_order = hcfm_nodenid_nodetitle_by_node_type('fm_work_order',$company->nid,$user->uid);
  $fm_location_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
  $fm_location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$company->nid,$user->uid);
  $fm_facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  $fm_location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$company->nid,$user->uid);
  $DashboardFilter = array('today'=>'Today','tomorrow'=>'Tomorrow','yesterday'=>'Yesterday','last_year'=>'Last Year','last_month'=>'Last Month','last_week'=>'Last Week','this_year'=>'This Year','this_month'=>'This Month','this_week'=>'This Week','next_year'=>'Next Year','next_month'=>'Next Month','next_week'=>'Next Week');
  $element['dashboard_comparison_work_order'] = array(
  '#title' => t('Work Order'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_comparison_what"]' => array('value' => 'fm_work_order1'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_work_order,
  '#empty_option' => t('- Select -'),
  '#weight' => 4,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_comparison_region'] = array(
  '#title' => t('Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_comparison_what"]' => array('value' => 'fm_region1'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_region,
  '#empty_option' => t('- Select -'),
  '#weight' => 4,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_comparison_site'] = array(
  '#title' => t('Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_comparison_what"]' => array('value' => 'fm_site1'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_site,
  '#empty_option' => t('- Select -'),
  '#weight' => 4,

  );
  $element['dashboard_comparison_facility'] = array(
  '#title' => t('Facility'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_comparison_what"]' => array('value' => 'fm_facility1'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_facility,
  '#empty_option' => t('- Select -'),
  '#weight' => 4,

  );
  $element['dashboard_comparison_zone'] = array(
  '#title' => t('Zone'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_comparison_what"]' => array('value' => 'fm_zone1'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_location,
  '#empty_option' => t('- Select -'),
  '#weight' => 4,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  
  /************************************************************************************************/
  $element['dashboard_compare_by'] = array(
  '#type' => 'select',
  '#title' => 'Compare By',
  '#empty_value' => '-Select-',
  '#attributes' => array(
    'class'=> array(
    'clear-data',
    )
  ),
  '#options' => array('fm_work_order2'=>'Work Order','fm_region2'=>'Region','fm_site2'=>'Site','fm_facility2'=>'Facility','fm_zone2'=>'Zone'),
  //'#default_value' => 0,
  '#weight' => 8,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  ); 
  $element['dashboard_compare_by_work_order'] = array(
  '#title' => t('Work Order'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'fm_work_order2'),        
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_work_order,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_compare_by_region'] = array(
  '#title' => t('Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'fm_region2'),        
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_region,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_compare_by_site'] = array(
  '#title' => t('Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'fm_site2'),        
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_site,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_compare_by_facility'] = array(
  '#title' => t('Facility'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'fm_facility2'),        
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_facility,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $element['dashboard_compare_by_zone'] = array(
  '#title' => t('Zone'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'fm_zone2'),        
          ),
      ),
  '#type' => 'select',
  '#options' => $fm_location_location,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div>',
  );
  $element['dashboard_compare_by_filter'] = array(
  '#title' => t('Filter'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    )
  ),
  '#states' => array(
          'visible' => array(
              ':input[name="dashboard_compare_by"]' => array('value' => 'dash_filter'),       
          ),
      ),
  '#type' => 'select',
  '#options' => $DashboardFilter,
  '#empty_option' => t('- Select -'),
  '#weight' => 12,  
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  
  
  return $element;
}

function hcfm_dashboardcompare_data_container1_process($element, &$form_state){
  global $user,$company;
    
  $element['container'] = array(
  '#type' => 'container',
  '#prefix' => '<div class="dashboardcompare-container">',
  '#suffix' => '</div>',    
  );
 
  $element['container']['full-container0']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('clearfix','dashboardcompare-full0')),
  '#weight' => 0, 
  ); 
  $element['container']['full-container1']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row','dashboardcompare-full1')),
  '#weight' => 1, 
  );
  $element['container']['full-container2']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('clearfix text-center','dashboardcompare-full2')),
  '#weight' => 2, 
  );
  $element['container']['full-container1']['left-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-left')),
  '#weight' => 1,
  
  );
  $element['container']['full-container1']['left-container']['left-main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#prefix' => '<div><label> Compare A </label></div><div class="padding-10" style="border:1px solid;">',
  '#suffix' => '</div>'
  );
  /*$form['container']['left-container']['left-main-container']['inner-full-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-12','col-sm-12','col-xs-12','project-details-full')),
  );*/
  $element['container']['full-container1']['left-container']['left-main-container']['inner-left-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-left-left')),
  ); 
  /*$element['container']['left-container']['left-main-container']['inner-middle-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-4','col-sm-4','col-xs-12','dashboardcompare-left-middle')),
  );*/
  $element['container']['full-container1']['left-container']['left-main-container']['inner-right-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-left-right')),
  );
  
  $element['container']['full-container1']['right-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-right')),
  '#weight' => 2, 
  );  
  $element['container']['full-container1']['right-container']['right-main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#prefix' => '<div><label> Compare B </label></div><div class="padding-10" style="border:1px solid;">',
  '#suffix' => '</div>'
  );
  $element['container']['full-container1']['right-container']['right-main-container']['inner-left-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-left-left')),
  );
  $element['container']['full-container1']['right-container']['right-main-container']['inner-right-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-6','col-sm-6','col-xs-12','dashboardcompare-left-right')),
  );
  $element['container']['full-container0']['go_dashboard'] = array(
  '#markup' => '<div class="display-inline-block pull-left"><div class="dash-compare-error"></div></div><div class="display-inline-block pull-right"><a href="javascript:void(0);" class="dashboard_go_btn"><input type="button" class="btn btn primary form-submit" value="Back to Dashboard"></a></div>',     
  ); 
   
  $queryR = db_select('node' ,'n');
  $queryR->fields('n', array('nid','title'));
  $queryR->condition('n.type','fm_location_region');
  $dashboardRegion = $queryR->execute()->fetchAllKeyed(0,1);
  $asset_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
  $element['container']['full-container1']['left-container']['left-main-container']['inner-left-container']['dashboard_type_filter1'] = array(
  '#type' => 'select',
  '#title' => '<label for="edit-dashboard-comparea-dashboard-type-filter1">Select Type Filter <span class="form-required" title="This field is required.">*</span></label>',
  /*'#states' => array(
    'visible' => array(
      ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
    ),
  ),*/
  '#parents' => array('dashboard_comparea','dashboard_type_filter1'),
  '#attributes' => array(
    'class'=> array(
    'dashboard_type_filter1',
    'clear-data',
    )
  ),
  //'#required' => TRUE,
  '#options' => array('assets_by_riskrank'=>'Assets by Risk Rank'),
  '#empty_option' => t('- Select -'),
  //'#default_value' => 0,
  );
  $fm_risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  $element['container']['full-container1']['left-container']['left-main-container']['inner-right-container']['dashboard_risk_rank1'] = array(
  '#type' => 'select',
  '#title' => 'Select Risk Rank',
  /*'#states' => array(
    'visible' => array(
      ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
    ),
  ),*/  
  '#parents' => array('dashboard_comparea','dashboard_risk_rank1'),
  '#attributes' => array(
    'class'=> array(
    //'dashboard_type_filter',
    'clear-data',
    )
  ),
  '#options' => $fm_risk_rank,
  '#empty_option' => t('- Select -'),
  //'#default_value' => 0,
  );
  $asset_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);
  $element['container']['full-container1']['left-container']['left-main-container']['inner-left-container']['dashboard_region1'] = array(
  '#title' => t('Select Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-region',
    'dashboard-region1'
    )
  ),
  '#parents' => array('dashboard_comparea','dashboard_region1'),
  /*'#states' => array(
          'visible' => array(
              ':input[name="dashboard_type_filter"]' => array('value' => 'assets_by_riskrank'),
        ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
          ),
      ),*/
  '#type' => 'select',
  '#options' => $asset_region,
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div class="row"><div class="col-md-3">',
  //'#suffix' => '</div>',
  );
  $location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$company->nid,$user->uid);
  $element['container']['full-container1']['left-container']['left-main-container']['inner-right-container']['dashboard_site1'] = array(
  '#title' => t('Select Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-site',
    'dashboard-site1'
    )
  ),
  '#parents' => array('dashboard_comparea','dashboard_site1'),
  /*'#states' => array(
          'visible' => array(
              ':input[name="dashboard_type_filter"]' => array('value' => 'assets_by_riskrank'),
        ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
          ),
      ),*/
  '#type' => 'select',
  '#options' => $location_site,
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div>',
  
  );
  $asset_facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  $element['container']['full-container1']['left-container']['left-main-container']['inner-left-container']['dashboard_facility1'] = array(
  '#title' => t('Select Facility '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-facility',
    'dashboard-facility1'
    )
  ),
  '#parents' => array('dashboard_comparea','dashboard_facility1'),
  /*'#states' => array(
          'visible' => array(
              ':input[name="dashboard_type_filter"]' => array('value' => 'assets_by_riskrank'),
        ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
          ),
      ),*/
  '#type' => 'select',
  '#options' => $asset_facility,
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div>',
  );
  $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$company->nid,$user->uid);
  $element['container']['full-container1']['left-container']['left-main-container']['inner-right-container']['dashboard_zone1'] = array(
  '#title' => t('Select Zone '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-location',
    'dashboard-location1'
    )
  ),
  '#parents' => array('dashboard_comparea','dashboard_zone1'),
  /*'#states' => array(
          'visible' => array(
              ':input[name="dashboard_type_filter"]' => array('value' => 'assets_by_riskrank'),
        ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
          ),
      ),*/
  '#type' => 'select',
  '#options' => $location_location,
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div class="col-md-3">',
  //'#suffix' => '</div></div>',
  );
  $DashboardFilter = array('today'=>'Today','tomorrow'=>'Tomorrow','yesterday'=>'Yesterday','last_year'=>'Last Year','last_month'=>'Last Month','last_week'=>'Last Week','this_year'=>'This Year','this_month'=>'This Month','this_week'=>'This Week','next_year'=>'Next Year','next_month'=>'Next Month','next_week'=>'Next Week');
  $element['container']['full-container1']['left-container']['left-main-container']['inner-left-container']['dashboard_filter1'] = array(
  '#title' => t('Select Filter'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',    
    'dashboard-filter1'
    )
  ),
  '#parents' => array('dashboard_comparea','dashboard_filter1'),
  /*'#states' => array(
          'visible' => array(
              ':input[name="dashboard_type_filter"]' => array('value' => 'assets_by_riskrank'),
        ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
          ),
      ),*/
  '#type' => 'select',
  '#options' => $DashboardFilter, 
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div class="row"><div class="col-md-3">',
  //'#suffix' => '</div>',
  ); 
  
  
  
  
  
  /*************************************************************************************/
  $element['container']['full-container1']['right-container']['right-main-container']['inner-left-container']['dashboard_type_filter2'] = array(
  '#type' => 'select',
  '#title' => '<label for="edit-dashboard-comparea-dashboard-type-filter1">Select Type Filter <span class="form-required" title="This field is required.">*</span></label>',
  /*'#states' => array(
    'visible' => array(
      ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
    ),
  ),*/
  '#parents' => array('dashboard_compareb','dashboard_type_filter2'),
  '#attributes' => array(
    'class'=> array(
    'dashboard_type_filter2',
    'clear-data',
    )
  ),
  //'#required' => TRUE,
  '#empty_option' => t('- Select -'),
  '#options' => array('assets_by_riskrank'=>'Assets by Risk Rank'),
  //'#default_value' => 0,
  );
  $fm_risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  $element['container']['full-container1']['right-container']['right-main-container']['inner-right-container']['dashboard_risk_rank2'] = array(
  '#type' => 'select',
  '#title' => 'Select Risk Rank',
  /*'#states' => array(
    'visible' => array(
      ':input[name="dashboard_type"]' => array('value' => 'fm_assets'),
    ),
  ),*/
  '#parents' => array('dashboard_compareb','dashboard_risk_rank2'),
  '#empty_option' => t('- Select -'),
  '#attributes' => array(
    'class'=> array(
    'dashboard_risk_rank2',
    'clear-data',
    )
  ),
  '#options' => $fm_risk_rank,
  //'#default_value' => 0,
  );
  $element['container']['full-container1']['right-container']['right-main-container']['inner-left-container']['dashboard_region2'] = array(
  '#title' => t('Select Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-region',
    'dashboard-region2'
    )
  ),  
  '#parents' => array('dashboard_compareb','dashboard_region2'),
  '#type' => 'select',
  '#options' => $asset_region,
  '#empty_option' => t('- Select -'),
  );
  $element['container']['full-container1']['right-container']['right-main-container']['inner-right-container']['dashboard_site2'] = array(
  '#title' => t('Select Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-site',
    'dashboard-site2'
    )
  ),  
  '#parents' => array('dashboard_compareb','dashboard_site2'),
  '#type' => 'select',
  '#options' => $location_site,
  '#empty_option' => t('- Select -'),
  );
  $element['container']['full-container1']['right-container']['right-main-container']['inner-left-container']['dashboard_facility2'] = array(
  '#title' => t('Select Facility'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-facility',
    'dashboard-facility2'
    )
  ),
  '#parents' => array('dashboard_compareb','dashboard_facility2'),
  '#type' => 'select',
  '#options' => $asset_facility,
  '#empty_option' => t('- Select -'),
  );

  $element['container']['full-container1']['right-container']['right-main-container']['inner-right-container']['dashboard_zone2'] = array(
  '#title' => t('Select Zone'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      //'as-asset-location',
    'dashboard-location2'
    )
  ),
  '#parents' => array('dashboard_compareb','dashboard_zone2'),
  '#type' => 'select',
  '#options' => $location_location,
  '#empty_option' => t('- Select -'),
  );  
  $element['container']['full-container1']['right-container']['right-main-container']['inner-left-container']['dashboard_filter2'] = array(
  '#title' => t('Select Filter'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',    
    'dashboard-filter2'
    )
  ),
  '#parents' => array('dashboard_compareb','dashboard_filter2'),
  '#type' => 'select',
  '#options' => $DashboardFilter, 
  '#empty_option' => t('- Select -'),
  ); 
  
  
  
  $element['container']['full-container2']['dashboard_compare_filter'] = array(
    '#type' => 'button',
  '#ajax' => array(
    'callback' => 'dashboard_compare_callback',
    'event' => 'click',
    'wrapper' => 'workflow-container-compare-section',
    'method' => 'replace',
    'effect' => 'fade',
  ),
  '#validate' => TRUE,
  '#parents' => array('dashboard_compare','dashboard_compare_filter'),
  '#value' => t('Compare'),
  '#prefix' => '<div class="form-item text-center"><div class="display-inline-block">'.l('
      <input type="button" class="btn btn primary form-submit" value="Reset" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('dashboard_compare_reset')))).'</div><div class="display-inline-block">', 
    '#suffix' => '</div></div>',
  );
  return $element;
}

function dashboard_compare_callback($form,&$form_state){  
  global $user, $company;
  $commands = array();
  $values = $form_state['values'];
  //drup_msg($values); 
  if(isset($form_state['triggering_element']['#value']) && !empty($form_state['triggering_element']['#value']) && $form_state['triggering_element']['#value'] =='Compare'){
    //$DashboardType = $values['dashboard_type'];
  //compare a query
  $TypeFilter1 = $values['dashboard_comparea']['dashboard_type_filter1'];
  $WoRisNid1 = $values['dashboard_comparea']['dashboard_risk_rank1'];
  $WoRegNid1 = $values['dashboard_comparea']['dashboard_region1'];
  $WoSitNid1 = $values['dashboard_comparea']['dashboard_site1'];
  $WoFacNid1 = $values['dashboard_comparea']['dashboard_facility1']; 
  $WoZonNid1 = $values['dashboard_comparea']['dashboard_zone1'];
  $Filter1 = $values['dashboard_comparea']['dashboard_filter1'];
  if(isset($TypeFilter1) && !empty($TypeFilter1)&&  $TypeFilter1 == 'assets_by_riskrank'){
    $query1 = db_select('node','n');
    $query1->leftjoin('field_data_field_wo_date_requested','fdfwdr','fdfwdr.entity_id=n.nid');
    $query1->fields('fdfwdr',array('field_wo_date_requested_value'));
    if(isset($WoRisNid1) && is_numeric($WoRisNid1) && !empty($WoRisNid1)){
    $query1->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query1->fields('fdfwprr',array('field_wo_priority_rr_target_id')); 
    $query1->condition('fdfwprr.field_wo_priority_rr_target_id',$WoRisNid1,'=');
    }
    if(isset($WoRegNid1) && is_numeric($WoRegNid1) && !empty($WoRegNid1)){
    $query1->leftjoin('field_data_field_wo_region','fdfwr','fdfwr.entity_id=n.nid');
    $query1->fields('fdfwr',array('field_wo_region_target_id')); 
    $query1->condition('fdfwr.field_wo_region_target_id',$WoRegNid1,'=');
    }
    if(isset($WoSitNid1) && is_numeric($WoSitNid1) && !empty($WoSitNid1)){
    $query1->leftjoin('field_data_field_wo_site','fdfws','fdfws.entity_id=n.nid');
    $query1->fields('fdfws',array('field_wo_site_target_id')); 
    $query1->condition('fdfws.field_wo_site_target_id',$WoSitNid1,'=');
    }
    if(isset($WoFacNid1) && is_numeric($WoFacNid1) && !empty($WoFacNid1)){
    $query1->leftjoin('field_data_field_wo_facility','fdfwf','fdfwf.entity_id=n.nid');
    $query1->fields('fdfwf',array('field_wo_facility_target_id')); 
    $query1->condition('fdfwf.field_wo_facility_target_id',$WoFacNid1,'=');
    }
    if(isset($WoZonNid1) && is_numeric($WoZonNid1) && !empty($WoZonNid1)){
    $query1->leftjoin('field_data_field_wo_location','fdfwlo','fdfwlo.entity_id=n.nid');
    $query1->fields('fdfwlo',array('field_wo_location_target_id')); 
    $query1->condition('fdfwlo.field_wo_location_target_id',$WoZonNid1,'=');
    }   
    $query1->leftjoin('field_data_field_wo_number','fdfwn','fdfwn.entity_id=n.nid');
    $query1->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query1->fields('n',array('nid','type','title','uid','status'));    
    $query1->fields('fdfwn',array('field_wo_number_value'));
    $query1->fields('fdfwprr',array('field_wo_priority_rr_target_id'));
    if($Filter1 == 'today'){
    $day_start = date('Y-m-d 00:00:00', time());
        $day_end = date('Y-m-d 23:59:59', time());
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'tomorrow'){
    $Filter_tomorrow = strtotime("+1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_tomorrow);
        $day_end = date('Y-m-d 23:59:59', $Filter_tomorrow);
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    if($Filter1 == 'yesterday'){
    $Filter_yesterday = strtotime("-1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_yesterday);
        $day_end = date('Y-m-d 23:59:59', $Filter_yesterday);
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'last_year'){
    $Filter_last_year = strtotime("-1 year");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_year);
        $day_end = date('Y-m-d 23:59:59', time());
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'last_month'){
    $Filter_last_month = strtotime("-1 month");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_month);
        $day_end = date('Y-m-d 23:59:59', time());
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'last_week'){
    $Filter_last_week = strtotime("-1 week");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_week);
        $day_end = date('Y-m-d 23:59:59', time());
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    if($Filter1 == 'this_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y')));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'this_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of this month'));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'this_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('this week'));
        $day_end = date('Y-m-d 23:59:59', strtotime('this week +6 days'));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    if($Filter1 == 'next_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y', strtotime('+1 year'))));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'next_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of next month'));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter1 == 'next_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('next monday'));
        $day_end = date('Y-m-d 23:59:59', strtotime('next monday +6 days'));
    $query1->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    $query1->condition('n.type','fm_work_order','=');
    $ReturnObj1 = $query1->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);     
    if(isset($ReturnObj1) && !empty($ReturnObj1)){
    //drup_msg($ReturnObj1);    
      $header1 = array('Risk','Work Order Number','Asset');
      $table_data1 = hcfm_work_order_dashboard_table_content1($user->uid,$company->nid,'fm_work_order',$header1,0,0,$ReturnObj1);   
    $getGraphData1 = array_count_values(array_column($ReturnObj1, 'field_wo_priority_rr_target_id'));
    $totalRisk1 = 0;
    foreach($getGraphData1 as $getCount1) {
      $getFinal1 += $getCount1;
    }       
      /*$commands[] = ajax_command_replace("#dashboard_comparea_table_datiles_outer", render($form['main-container3']['table_datiles1']['#markup']='<div id="dashboard_comparea_table_datiles_outer" class="clear-data">'.$table_data1.'</div>'));*/    
    $compareAPie = _hcfm_work_order_chart_intigration_pie($getGraphData1,$getFinal1);
    /*$commands[] = ajax_command_replace("#dashboard_comparea_pie_datiles_outer", render($form['main-container3']['table_datiles2']['#markup']='<div id="dashboard_comparea_pie_datiles_outer" class="clear-data">'.$compareAPie.'</div>'));
    */
    $compareAColumn = _hcfm_work_order_chart_intigration_column($getGraphData1,$getFinal1);
    /*$commands[] = ajax_command_replace("#dashboard_comparea_column_datiles_outer", render($form['main-container3']['table_datiles3']['#markup']='<div id="dashboard_comparea_column_datiles_outer" class="clear-data">'.$compareAColumn.'</div>'));*/
    
    
    
    $commands[] = ajax_command_replace("#dashboard_comparea_table_datiles_outer", render($form['main-container3']['table_datiles1']['#markup']='<div id="dashboard_comparea_table_datiles_outer" class="clear-data"><div class="row"><div class="text-center"><label>Compare A</label></div><div class="col-md-4"><div id="dashboard_comparea_table_datiles_inner" class="clear-data">'.$table_data1.'</div></div><div class="col-md-4"><div id="dashboard_comparea_pie_datiles_inner" class="clear-data">'.$compareAPie.'</div></div><div class="col-md-4"><div id="dashboard_comparea_column_datiles_outer" class="clear-data">'.$compareAColumn.'</div></div></div></div>'));  
    if(!empty($TypeFilter1)){ 
        $commands[] = ajax_command_replace(".dash-compare-error", '<div class="dash-compare-error"></div>');    
        $commands[] = ajax_command_invoke('select.dashboard_type_filter1','removeClass',array('error'));
      } 
    }
    else {
      $commands[] = ajax_command_replace("#dashboard_comparea_table_datiles_outer", render($form['main-container3']['table_datiles1']['#markup']='<div id="dashboard_comparea_table_datiles_outer" class="clear-data"></div>'));
    /*$commands[] = ajax_command_replace("#dashboard_comparea_pie_datiles_outer", render($form['main-container3']['table_datiles2']['#markup']='<div id="dashboard_comparea_pie_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_comparea_column_datiles_outer", render($form['main-container3']['table_datiles3']['#markup']='<div id="dashboard_comparea_column_datiles_outer" class="clear-data"></div>'));*/     
    }
   
  }
  else {
    $commands[] = ajax_command_replace("#dashboard_comparea_table_datiles_outer", render($form['main-container3']['table_datiles1']['#markup']='<div id="dashboard_comparea_table_datiles_outer" class="clear-data"></div>'));
   /* $commands[] = ajax_command_replace("#dashboard_comparea_pie_datiles_outer", render($form['main-container3']['table_datiles2']['#markup']='<div id="dashboard_comparea_pie_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_comparea_column_datiles_outer", render($form['main-container3']['table_datiles3']['#markup']='<div id="dashboard_comparea_column_datiles_outer" class="clear-data"></div>'));*/       
  }
  
  //Compare B Query
  
  $TypeFilter2 = $values['dashboard_compareb']['dashboard_type_filter2'];
  $WoRisNid2 = $values['dashboard_compareb']['dashboard_risk_rank2'];
  $WoRegNid2 = $values['dashboard_compareb']['dashboard_region2'];
  $WoSitNid2 = $values['dashboard_compareb']['dashboard_site2'];
  $WoFacNid2 = $values['dashboard_compareb']['dashboard_facility2']; 
  $WoZonNid2 = $values['dashboard_compareb']['dashboard_zone2'];
  $Filter2 = $values['dashboard_compareb']['dashboard_filter2'];
  if(isset($TypeFilter2) && !empty($TypeFilter2)&&  $TypeFilter2 == 'assets_by_riskrank'){
    $query2 = db_select('node','n');
    $query2->leftjoin('field_data_field_wo_date_requested','fdfwdr','fdfwdr.entity_id=n.nid');
    $query2->fields('fdfwdr',array('field_wo_date_requested_value'));
     if(isset($WoRisNid2) && is_numeric($WoRisNid2) && !empty($WoRisNid2)){
    $query2->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query2->fields('fdfwprr',array('field_wo_priority_rr_target_id')); 
    $query2->condition('fdfwprr.field_wo_priority_rr_target_id',$WoRisNid2,'=');
    }
    if(isset($WoRegNid2) && is_numeric($WoRegNid2) && !empty($WoRegNid2)){
    $query2->leftjoin('field_data_field_wo_region','fdfwr','fdfwr.entity_id=n.nid');
    $query2->fields('fdfwr',array('field_wo_region_target_id')); 
    $query2->condition('fdfwr.field_wo_region_target_id',$WoRegNid2,'=');
    }
    if(isset($WoSitNid2) && is_numeric($WoSitNid2) && !empty($WoSitNid2)){
    $query2->leftjoin('field_data_field_wo_site','fdfws','fdfws.entity_id=n.nid');
    $query2->fields('fdfws',array('field_wo_site_target_id')); 
    $query2->condition('fdfws.field_wo_site_target_id',$WoSitNid2,'=');
    }
    if(isset($WoFacNid2) && is_numeric($WoFacNid2) && !empty($WoFacNid2)){
    $query2->leftjoin('field_data_field_wo_facility','fdfwf','fdfwf.entity_id=n.nid');
    $query2->fields('fdfwf',array('field_wo_facility_target_id')); 
    $query2->condition('fdfwf.field_wo_facility_target_id',$WoFacNid2,'=');
    }
    if(isset($WoZonNid2) && is_numeric($WoZonNid2) && !empty($WoZonNid2)){
    $query2->leftjoin('field_data_field_wo_location','fdfwlo','fdfwlo.entity_id=n.nid');
    $query2->fields('fdfwlo',array('field_wo_location_target_id')); 
    $query2->condition('fdfwlo.field_wo_location_target_id',$WoZonNid2,'=');
    }   
    $query2->leftjoin('field_data_field_wo_number','fdfwn','fdfwn.entity_id=n.nid');
    $query2->leftjoin('field_data_field_wo_priority_rr','fdfwprr','fdfwprr.entity_id=n.nid');
    $query2->fields('n',array('nid','type','title','uid','status'));    
    $query2->fields('fdfwn',array('field_wo_number_value'));
    $query2->fields('fdfwprr',array('field_wo_priority_rr_target_id'));
    if($Filter2 == 'today'){

    $day_start = date('Y-m-d 00:00:00', time());
        $day_end = date('Y-m-d 23:59:59', time());
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'tomorrow'){
    $Filter_tomorrow = strtotime("+1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_tomorrow);
        $day_end = date('Y-m-d 23:59:59', $Filter_tomorrow);
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'yesterday'){
    $Filter_yesterday = strtotime("-1 day");
    $day_start = date('Y-m-d 00:00:00', $Filter_yesterday);
        $day_end = date('Y-m-d 23:59:59', $Filter_yesterday);
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'last_year'){
    $Filter_last_year = strtotime("-1 year");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_year);
        $day_end = date('Y-m-d 23:59:59', time());
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'last_month'){
    $Filter_last_month = strtotime("-1 month");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_month);
        $day_end = date('Y-m-d 23:59:59', time());
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'last_week'){
    $Filter_last_week = strtotime("-1 week");
    $day_start = date('Y-m-d 00:00:00', $Filter_last_week);
        $day_end = date('Y-m-d 23:59:59', time());
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    if($Filter2 == 'this_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y')));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'this_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of this month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of this month'));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'this_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('this week'));
        $day_end = date('Y-m-d 23:59:59', strtotime('this week +6 days'));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    if($Filter2 == 'next_year'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next year'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of dec'.date('Y', strtotime('+1 year'))));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'next_month'){
    $day_start = date('Y-m-d 00:00:00', strtotime('first day of next month'));
        $day_end = date('Y-m-d 23:59:59', strtotime('last day of next month'));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }
    if($Filter2 == 'next_week'){
    $day_start = date('Y-m-d 00:00:00', strtotime('next monday'));
        $day_end = date('Y-m-d 23:59:59', strtotime('next monday +6 days'));
    $query2->condition('fdfwdr.field_wo_date_requested_value',array($day_start, $day_end), 'BETWEEN');    
    }   
    $query2->condition('n.type','fm_work_order','=');
    $ReturnObj2 = $query2->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);   
    if(isset($ReturnObj2) && !empty($ReturnObj2)){    
    //drup_msg($ReturnObj2);      
    $header2 = array('Risk','Work Order Number','Asset');
      $table_data2 = hcfm_work_order_dashboard_table_content1($user->uid,$company->nid,'fm_work_order',$header2,0,0,$ReturnObj2);   
    $getGraphData2 = array_count_values(array_column($ReturnObj2, 'field_wo_priority_rr_target_id'));
    $totalRisk2 = 0;
    foreach($getGraphData2 as $getCount2) {
      $getFinal2 += $getCount2;
    }
    
    
    /*$commands[] = ajax_command_replace("#dashboard_compareb_table_datiles_outer", render($form['main-container3']['table_datiles4']['#markup']='<div id="dashboard_compareb_table_datiles_outer" class="clear-data">'.$table_data2.'</div>'));*/    
    $compareBPie = _hcfm_work_order_chart_intigration_pie($getGraphData2,$getFinal2);
    
    /*$commands[] = ajax_command_replace("#dashboard_compareb_pie_datiles_outer", render($form['main-container3']['table_datiles5']['#markup']='<div id="dashboard_compareb_pie_datiles_outer" class="clear-data">'.$compareBPie.'</div>'));*/
    
    $compareBColumn = _hcfm_work_order_chart_intigration_column($getGraphData2,$getFinal2);
    
    /*$commands[] = ajax_command_replace("#dashboard_compareb_column_datiles_outer", render($form['main-container3']['table_datiles6']['#markup']='<div id="dashboard_compareb_column_datiles_outer" class="clear-data">'.$compareBColumn.'</div>'));*/
    
    $commands[] = ajax_command_replace("#dashboard_compareb_table_datiles_outer", render($form['main-container3']['table_datiles4']['#markup']='<div id="dashboard_compareb_table_datiles_outer" class="clear-data"><div class="row"><div class="text-center"><label>Compare B</label></div><div class="col-md-4"><div id="dashboard_compareb_table_datiles_inner" class="clear-data">'.$table_data2.'</div></div><div class="col-md-4"><div id="dashboard_compareb_pie_datiles_inner" class="clear-data">'.$compareBPie.'</div></div><div class="col-md-4"><div id="dashboard_compareb_column_datiles_inner" class="clear-data">'.$compareBColumn.'</div></div></div>'));
    //$commands[] = ajax_command_replace("#dashboard_compareb_pie_datiles_outer", render($camparePB));
    //$commands[] = ajax_command_replace("#dashboard_compareb_column_datiles_outer", render($campareCB));
    
      if(!empty($TypeFilter2)){ 
        $commands[] = ajax_command_replace(".dash-compare-error", '<div class="dash-compare-error"></div>');    
        $commands[] = ajax_command_invoke('select.dashboard_type_filter2','removeClass',array('error'));
      }
    }
    else {      
    $commands[] = ajax_command_replace("#dashboard_compareb_table_datiles_outer", render($form['main-container3']['table_datiles4']['#markup']='<div id="dashboard_compareb_table_datiles_outer" class="clear-data"></div>'));
    /*$commands[] = ajax_command_replace("#dashboard_compareb_pie_datiles_outer", render($form['main-container3']['table_datiles5']['#markup']='<div id="dashboard_compareb_pie_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_compareb_column_datiles_outer", render($form['main-container3']['table_datiles6']['#markup']='<div id="dashboard_compareb_column_datiles_outer" class="clear-data"></div>'));*/   
    }
    
  }
  else {    
    $commands[] = ajax_command_replace("#dashboard_compareb_table_datiles_outer", render($form['main-container3']['table_datiles4']['#markup']='<div id="dashboard_compareb_table_datiles_outer" class="clear-data"></div>'));
    /*$commands[] = ajax_command_replace("#dashboard_compareb_pie_datiles_outer", render($form['main-container3']['table_datiles5']['#markup']='<div id="dashboard_compareb_pie_datiles_outer" class="clear-data"></div>'));
    $commands[] = ajax_command_replace("#dashboard_compareb_column_datiles_outer", render($form['main-container3']['table_datiles6']['#markup']='<div id="dashboard_compareb_column_datiles_outer" class="clear-data"></div>'));*/
       
  }
  if(empty($TypeFilter1) && empty($TypeFilter2)){
    $commands[] = ajax_command_replace(".dash-compare-error", '<div class="dash-compare-error"><div style="color: red;">* Select Type Filter Compare A</div><div style="color: red;">* Select Type Filter Compare B</div></div>');    
    $commands[] = ajax_command_invoke('select.dashboard_type_filter1', 'addClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter2','addClass',array('error'));
  }else if(!empty($TypeFilter1) && empty($TypeFilter2)){  
    $commands[] = ajax_command_replace(".dash-compare-error", '<div class="dash-compare-error"><div style="color: red;">* Select Type Filter Compare B</div></div>');
    $commands[] = ajax_command_invoke('select.dashboard_type_filter1', 'removeClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter2','addClass',array('error'));
  }else if(empty($TypeFilter1) && !empty($TypeFilter2)){  
    $commands[] = ajax_command_replace(".dash-compare-error", '<div class="dash-compare-error"><div style="color: red;">* Select Type Filter Compare A</div></div>');
    $commands[] = ajax_command_invoke('select.dashboard_type_filter1', 'addClass',array('error'));
    $commands[] = ajax_command_invoke('select.dashboard_type_filter2','removeClass',array('error'));
  }
  
  
  
    
  }
  else {
    $commands[] = ajax_command_replace("#dashboard_comparea_table_datiles_outer", render($form['main-container3']['table_datiles1']['#markup']='<div id="dashboard_comparea_table_datiles_outer" class="clear-data"></div>'));
  /*$commands[] = ajax_command_replace("#dashboard_comparea_pie_datiles_outer", render($form['main-container3']['table_datiles2']['#markup']='<div id="dashboard_comparea_pie_datiles_outer" class="clear-data"></div>'));
  $commands[] = ajax_command_replace("#dashboard_comparea_column_datiles_outer", render($form['main-container3']['table_datiles3']['#markup']='<div id="dashboard_comparea_column_datiles_outer" class="clear-data"></div>'));*/
  $commands[] = ajax_command_replace("#dashboard_compareb_table_datiles_outer", render($form['main-container3']['table_datiles4']['#markup']='<div id="dashboard_compareb_table_datiles_outer" class="clear-data"></div>'));
  /*$commands[] = ajax_command_replace("#dashboard_compareb_pie_datiles_outer", render($form['main-container3']['table_datiles5']['#markup']='<div id="dashboard_compareb_pie_datiles_outer" class="clear-data"></div>'));
  $commands[] = ajax_command_replace("#dashboard_compareb_column_datiles_outer", render($form['main-container3']['table_datiles6']['#markup']='<div id="dashboard_compareb_column_datiles_outer" class="clear-data"></div>'));   */
  }
  //pre($form_state['values']);pre($form_state['triggering_element'],1);
  //$commands[] = ajax_command_alert($form_state['values']);
  //$commands[] = ajax_command_alert($form_state['triggering_element']);
  return array('#type' => 'ajax','#commands' => $commands); 
}

function hcfm_dashboardcompare_data_container2_process($element, &$form_state){
 /* $element['table_datiles1'] = array(
    '#markup' => '<div id="dashboard_comparea_table_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="row"><div class="col-md-8"><div class="row"><div class="col-md-6"><div class="clearfix margin-bottom-15">',
  '#suffix' => '</div>',
  );
  $element['table_datiles4'] = array(
    '#markup' => '<div id="dashboard_comparea_pie_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="clearfix margin-bottom-15">',
  '#suffix' => '</div></div>',
  );

  $element['table_datiles2'] = array(
    '#markup' => '<div id="dashboard_compareb_table_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="col-md-6"><div class="clearfix margin-bottom-15">',
  '#suffix' => '</div>',
  );
  $element['table_datiles5'] = array(
    '#markup' => '<div id="dashboard_compareb_pie_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="clearfix margin-bottom-15">',
  '#suffix' => '</div></div></div></div>',
  );
  $element['table_datiles3'] = array(
    '#markup' => '<div id="dashboard_compareab_column_datiles_outer" class="clear-data"></div>',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div></div>',
  );*/
  $element['table_datiles1'] = array(
    '#markup' => '<div id="dashboard_comparea_table_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="row"><div class="col-md-4">',
  //'#suffix' => '</div>',
  );
/*  $element['table_datiles2'] = array(
    '#markup' => '<div id="dashboard_comparea_pie_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="col-md-4">',
  //'#suffix' => '</div>',
  );
  $element['table_datiles3'] = array(
    '#markup' => '<div id="dashboard_comparea_column_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="col-md-4">',
  //'#suffix' => '</div></div>',
  );*/
  $element['table_datiles4'] = array(
    '#markup' => '<div id="dashboard_compareb_table_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="row"><div class="col-md-4">',
  //'#suffix' => '</div>',
  );
  /*$element['table_datiles5'] = array(
    '#markup' => '<div id="dashboard_compareb_pie_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="col-md-4">',
  //'#suffix' => '</div>',
  );
  $element['table_datiles6'] = array(
    '#markup' => '<div id="dashboard_compareb_column_datiles_outer" class="clear-data"></div>',
  //'#prefix' => '<div class="col-md-4">',
  //'#suffix' => '</div></div>',
  );*/
  
  return $element;
}

function _get_default_state(){
  $administrative_areas = array(
    'AZ' => t('Abu Dhabi'),
    'FU' => t('Fujairah'),
    'UQ' => t('Umm al-Quwain'),
    'SH' => t('Sharjah'),
    'DU' => t('Dubai'),
    'RK' => t('Ras al-Khaimah'),
    'AJ' => t('Ajmān'),
    'B' => 'Buenos Aires',
    'K' => 'Catamarca',
    'H' => 'Chaco',
    'U' => 'Chubut',
    'C' => 'Ciudad de Buenos Aires',
    'X' => 'Córdoba',
    'W' => 'Corrientes',
    'E' => 'Entre Ríos',
    'P' => 'Formosa',
    'Y' => 'Jujuy',
    'L' => 'La Pampa',
    'F' => 'La Rioja',
    'M' => 'Mendoza',
    'N' => 'Misiones',
    'Q' => 'Neuquén',
    'R' => 'Río Negro',
    'A' => 'Salta',
    'J' => 'San Juan',
    'D' => 'San Luis',
    'Z' => 'Santa Cruz',
    'S' => 'Santa Fe',
    'G' => 'Santiago del Estero',
    'V' => 'Tierra del Fuego',
    'T' => 'Tucumán',
    'ACT' => 'Australian Capital Territory',
    'NSW' => 'New South Wales',
    'NT' => 'Northern Territory',
    'QLD' => 'Queensland',
    'SA' => 'South Australia',
    'TAS' => 'Tasmania',
    'VIC' => 'Victoria',
    'WA' => 'Western Australia',
    'AC' => 'Acre',
    'AL' => 'Alagoas',
    'AM' => 'Amazonas',
    'AP' => 'Amapá',
    'BA' => 'Bahia',
    'CE' => 'Ceará',
    'DF' => 'Distrito Federal',
    'ES' => 'Espírito Santo',
    'GO' => 'Goiás',
    'MA' => 'Maranhão',
    'MG' => 'Minas Gerais',
    'MS' => 'Mato Grosso do Sul',
    'MT' => 'Mato Grosso',
    'PA' => 'Pará',
    'PB' => 'Paraíba',
    'PE' => 'Pernambuco',
    'PI' => 'Piauí',
    'PR' => 'Paraná',
    'RJ' => 'Rio de Janeiro',
    'RN' => 'Rio Grande do Norte',
    'RO' => 'Rondônia',
    'RR' => 'Roraima',
    'RS' => 'Rio Grande do Sul',
    'SC' => 'Santa Catarina',
    'SE' => 'Sergipe',
    'SP' => 'São Paulo',
    'TO' => 'Tocantins',
    'AB' => t('Alberta'),
    'BC' => t('British Columbia'),
    'MB' => t('Manitoba'),
    'NB' => t('New Brunswick'),
    'NL' => t('Newfoundland and Labrador'),
    'NT' => t('Northwest Territories'),
    'NS' => t('Nova Scotia'),
    'NU' => t('Nunavut'),
    'ON' => t('Ontario'),
    'PE' => t('Prince Edward Island'),
    'QC' => t('Quebec'),
    'SK' => t('Saskatchewan'),
    'YT' => t('Yukon Territory'),
    'AI' => 'Aysén del General Carlos Ibáñez del Campo',
    'AN' => 'Antofagasta',
    'AR' => 'Araucanía',
    'AP' => 'Arica y Parinacota',
    'AT' => 'Atacama',
    'BI' => 'Biobío',
    'CO' => 'Coquimbo',
    'LI' => 'Libertador General Bernardo O\'Higgins',
    'LL' => 'Los Lagos',
    'LR' => 'Los Ríos',
    'MA' => 'Magallanes y de la Antártica Chilena',
    'ML' => 'Maule',
    'RM' => 'Metropolitana de Santiago',
    'TA' => 'Tarapacá',
    'VS' => 'Valparaíso',
    '34' => t('Anhui Sheng'),
    '92' => t('Macau'),
    '11' => t('Beijing Shi'),
    '50' => t('Chongqing Shi'),
    '35' => t('Fujian Sheng'),
    '62' => t('Gansu Sheng'),
    '44' => t('Guangdong Sheng'),
    '45' => t('Guangxi Zhuangzuzizhiqu'),
    '52' => t('Guizhou Sheng'),
    '46' => t('Hainan Sheng'),
    '13' => t('Hebei Sheng'),
    '41' => t('Henan Sheng'),
    '23' => t('Heilongjiang Sheng'),
    '42' => t('Hubei Sheng'),
    '43' => t('Hunan Sheng'),
    '22' => t('Jilin Sheng'),
    '32' => t('Jiangsu Sheng'),
    '36' => t('Jiangxi Sheng'),
    '21' => t('Liaoning Sheng'),
    '15' => t('Neimenggu Zizhiqu'),
    '64' => t('Ningxia Huizuzizhiqu'),
    '63' => t('Qinghai Sheng'),
    '37' => t('Shandong Sheng'),
    '14' => t('Shanxi Sheng'),
    '61' => t('Shaanxi Sheng'),
    '31' => t('Shanghai Shi'),
    '51' => t('Sichuan Sheng'),
    '71' => t('Taiwan'),
    '12' => t('Tianjin Shi'),
    '54' => t('Xizang Zizhiqu'),
    '91' => t('Hong Kong'),
    '65' => t('Xinjiang Weiwuerzizhiqu'),
    '53' => t('Yunnan Sheng'),
    '33' => t('Zhejiang Sheng'),
    'AMA' => 'Amazonas',
    'ANT' => 'Antioquia',
    'ARA' => 'Arauca',
    'ATL' => 'Atlántico',
    'BOL' => 'Bolívar',
    'BOY' => 'Boyacá',
    'CAL' => 'Caldas',
    'CAQ' => 'Caquetá',
    'CAS' => 'Casanare',
    'CAU' => 'Cauca',
    'CES' => 'Cesar',
    'COR' => 'Córdoba',
    'CUN' => 'Cundinamarca',
    'CHO' => 'Chocó',
    'GUA' => 'Guainía',
    'GUV' => 'Guaviare',
    'HUI' => 'Huila',
    'LAG' => 'La Guajira',
    'MAG' => 'Magdalena',
    'MET' => 'Meta',
    'NAR' => 'Nariño',
    'NSA' => 'Norte de Santander',
    'PUT' => 'Putumayo',
    'QUI' => 'Quindío',
    'RIS' => 'Risaralda',
    'SAP' => 'San Andrés, Providencia y Santa Catalina',
    'SAN' => 'Santander',
    'SUC' => 'Sucre',
    'TOL' => 'Tolima',
    'VAC' => 'Valle del Cauca',
    'VAU' => 'Vaupés',
    'VID' => 'Vichada',
    '37' => 'Harjumaa',
    '39' => 'Hiiumaa',
    '44' => 'Ida-Virumaa',
    '49' => 'Jõgevamaa',
    '51' => 'Järvamaa',
    '57' => 'Läänemaa',
    '59' => 'Lääne-Virumaa',
    '65' => 'Põlvamaa',
    '67' => 'Pärnumaa',
    '70' => 'Raplamaa',
    '74' => 'Saaremaa',
    '78' => 'Tartumaa',
    '82' => 'Valgamaa',
    '84' => 'Viljandimaa',
    '86' => 'Võrumaa',
    'ALX' => t('Alexandria'),
    'ASN' => t('Aswan'),
    'AST' => t('Asyut'),
    'BH' => t('Beheira'),
    'BNS' => t('Beni Suef'),
    'C' => t('Cairo'),
    'DK' => t('Dakahlia'),
    'DT' => t('Damietta'),
    'FYM' => t('Faiyum'),
    'GH' => t('Gharbia'),
    'GZ' => t('Giza'),
    'IS' => t('Ismailia'),
    'KFS' => t('Kafr el-Sheikh'),
    'MT' => t('Matruh'),
    'MN' => t('Minya'),
    'MNF' => t('Monufia'),
    'WAD' => t('New Valley'),
    'SIN' => t('North Sinai'),
    'PTS' => t('Port Said'),
    'KB' => t('Qalyubia'),
    'KN' => t('Qena'),
    'BA' => t('Red Sea'),
    'SHR' => t('Sharqia'),
    'SHG' => t('Sohag'),
    'JS' => t('South Sinai'),
    'SUZ' => t('Suez'),
    'LX' => t('Luxor'),
    'C' => "A Coruña",
    'VI' => 'Alava',
    'AB' => 'Albacete',
    'A' => 'Alicante',
    'AL' => "Almería",
    'O' => 'Asturias',
    'AV' => "Ávila",
    'BA' => 'Badajoz',
    'PM' => 'Baleares',
    'B' => 'Barcelona',
    'BU' => 'Burgos',
    'CC' => "Cáceres",
    'CA' => "Cádiz",
    'S' => 'Cantabria',
    'CS' => "Castellón",
    'CE' => 'Ceuta',
    'CR' => 'Ciudad Real',
    'CO' => "Córdoba",
    'CU' => 'Cuenca',
    'GI' => 'Girona',
    'GR' => 'Granada',
    'GU' => 'Guadalajara',
    'SS' => "Guipúzcoa",
    'H' => 'Huelva',
    'HU' => 'Huesca',
    'J' => "Jaén",
    'LO' => 'La Rioja',
    'GC' => 'Las Palmas',
    'LE' => "León",
    'L' => "Lleida",
    'LU' => 'Lugo',
    'M' => 'Madrid',
    'MA' => "Málaga",
    'ML' => 'Melilla',
    'MU' => 'Murcia',
    'NA' => 'Navarra',
    'OR' => 'Ourense',
    'P' => 'Palencia',
    'PO' => 'Pontevedra',
    'SA' => 'Salamanca',
    'TF' => 'Santa Cruz de Tenerife',
    'SG' => 'Segovia',
    'SE' => 'Sevilla',
    'SO' => 'Soria',
    'T' => 'Tarragona',
    'TE' => 'Teruel',
    'TO' => 'Toledo',
    'V' => 'Valencia',
    'VA' => 'Valladolid',
    'BI' => 'Vizcaya',
    'ZA' => 'Zamora',
    'Z' => 'Zaragoza',
    'Kowloon' => t('Kowloon'),
    'Hong Kong Island' => t('Hong Kong Island'),
    'New Territories' => t('New Territories'),
    'AC' => t('Aceh'),
    'BA' => t('Bali'),
    'BB' => t('Bangka Belitung'),
    'BT' => t('Banten'),
    'BE' => t('Bengkulu'),
    'JK' => t('DKI Jakarta'),
    'YO' => t('D.I. Yogyakarta'),
    'GO' => t('Gorontalo'),
    'JA' => t('Jambi'),
    'JB' => t('Jawa Barat'),
    'JT' => t('Jawa Tengah'),
    'JI' => t('Jawa Timur'),
    'KB' => t('Kalimantan Barat'),
    'KS' => t('Kalimantan Selatan'),
    'KT' => t('Kalimantan Tengah'),
    'KI' => t('Kalimantan Timur'),
    'KR' => t('Kepulauan Riau'),
    'LA' => t('Lampung'),
    'MA' => t('Maluku'),
    'MU' => t('Maluku Utara'),
    'NB' => t('Nusa Tenggara Barat'),
    'NT' => t('Nusa Tenggara Timur'),
    'PA' => t('Papua'),
    'PB' => t('Papua Barat'),
    'RI' => t('Riau'),
    'SR' => t('Sulawesi Barat'),
    'SN' => t('Sulawesi Selatan'),
    'ST' => t('Sulawesi Tengah'),
    'SG' => t('Sulawesi Tenggara'),
    'SA' => t('Sulawesi Utara'),
    'SB' => t('Sumatera Barat'),
    'SS' => t('Sumatera Selatan'),
    'SU' => t('Sumatera Utara'),
    'CW' => 'Co Carlow',
    'CN' => 'Co Cavan',
    'CE' => 'Co Clare',
    'CO' => 'Co Cork',
    'DL' => 'Co Donegal',
    'D' => 'Co Dublin',
    'D1' => 'Dublin 1',
    'D2' => 'Dublin 2',
    'D3' => 'Dublin 3',
    'D4' => 'Dublin 4',
    'D5' => 'Dublin 5',
    'D6' => 'Dublin 6',
    'D6W' => 'Dublin 6w',
    'D7' => 'Dublin 7',
    'D8' => 'Dublin 8',
    'D9' => 'Dublin 9',
    'D10' => 'Dublin 10',
    'D11' => 'Dublin 11',
    'D12' => 'Dublin 12',
    'D13' => 'Dublin 13',
    'D14' => 'Dublin 14',
    'D15' => 'Dublin 15',
    'D16' => 'Dublin 16',
    'D17' => 'Dublin 17',
    'D18' => 'Dublin 18',
    'D19' => 'Dublin 19',
    'D20' => 'Dublin 20',
    'D21' => 'Dublin 21',
    'D22' => 'Dublin 22',
    'D23' => 'Dublin 23',
    'D24' => 'Dublin 24',
    'G' => 'Co Galway',
    'KY' => 'Co Kerry',
    'KE' => 'Co Kildare',
    'KK' => 'Co Kilkenny',
    'LS' => 'Co Laois',
    'LM' => 'Co Leitrim',
    'LK' => 'Co Limerick',
    'LD' => 'Co Longford',
    'LH' => 'Co Louth',
    'MO' => 'Co Mayo',
    'MH' => 'Co Meath',
    'MN' => 'Co Monaghan',
    'OY' => 'Co Offaly',
    'RN' => 'Co Roscommon',
    'SO' => 'Co Sligo',
    'TA' => 'Co Tipperary',
    'WD' => 'Co Waterford',
    'WH' => 'Co Westmeath',
    'WX' => 'Co Wexford',
    'WW' => 'Co Wicklow',
    'AP' => t('Andhra Pradesh'),
    'AR' => t('Arunachal Pradesh'),
    'AS' => t('Assam'),
    'BR' => t('Bihar'),
    'CT' => t('Chhattisgarh'),
    'GA' => t('Goa'),
    'GJ' => t('Gujarat'),
    'HP' => t('Himachal Pradesh'),
    'HR' => t('Haryana'),
    'JH' => t('Jharkhand'),
    'JK' => t('Jammu & Kashmir'),
    'KA' => t('Karnataka'),
    'KL' => t('Kerala'),
    'MH' => t('Maharashtra'),
    'MN' => t('Manipur'),
    'ML' => t('Meghalaya'),
    'MP' => t('Madhya Pradesh'),
    'MZ' => t('Mizoram'),
    'NL' => t('Nagaland'),
    'OR' => t('Odisha'),
    'PB' => t('Punjab'),
    'RJ' => t('Rajasthan'),
    'SK' => t('Sikkim'),
    'TN' => t('Tamil Nadu'),
    'TG' => t('Telangana'),
    'TR' => t('Tripura'),
    'UP' => t('Uttar Pradesh'),
    'UT' => t('Uttarakhand'),
    'WB' => t('West Bengal'),   
    'AN' => t('Andaman & Nicobar'),
    'CH' => t('Chandigarh'),
    'DN' => t('Dadra & Nagar Haveli'),
    'DD' => t('Daman & Diu'),
    'DL' => t('Delhi'),
    'LD' => t('Lakshadweep'),
    'PY' => t('Puducherry'),
    'AG' => 'Agrigento',
    'AL' => 'Alessandria',
    'AN' => 'Ancona',
    'AO' => 'Aosta',
    'AP' => 'Ascoli Piceno',
    'AQ' => "L'Aquila",
    'AR' => 'Arezzo',
    'AT' => 'Asti',
    'AV' => 'Avellino',
    'BA' => 'Bari',
    'BG' => 'Bergamo',
    'BI' => 'Biella',
    'BL' => 'Belluno',
    'BN' => 'Benevento',
    'BO' => 'Bologna',
    'BR' => 'Brindisi',
    'BS' => 'Brescia',
    'BT' => 'Barletta-Andria-Trani',
    'BZ' => 'Bolzano/Bozen',
    'CA' => 'Cagliari',
    'CB' => 'Campobasso',
    'CE' => 'Caserta',
    'CH' => 'Chieti',
    'CI' => 'Carbonia-Iglesias',
    'CL' => 'Caltanissetta',
    'CN' => 'Cuneo',
    'CO' => 'Como',
    'CR' => 'Cremona',
    'CS' => 'Cosenza',
    'CT' => 'Catania',
    'CZ' => 'Catanzaro',
    'EN' => 'Enna',
    'FC' => 'Forlì-Cesena',
    'FE' => 'Ferrara',
    'FG' => 'Foggia',
    'FI' => 'Firenze',
    'FM' => 'Fermo',
    'FR' => 'Frosinone',
    'GE' => 'Genova',
    'GO' => 'Gorizia',
    'GR' => 'Grosseto',
    'IM' => 'Imperia',
    'IS' => 'Isernia',
    'KR' => 'Crotone',
    'LC' => 'Lecco',
    'LE' => 'Lecce',
    'LI' => 'Livorno',
    'LO' => 'Lodi',
    'LT' => 'Latina',
    'LU' => 'Lucca',
    'MB' => 'Monza e Brianza',
    'MC' => 'Macerata',
    'ME' => 'Messina',
    'MI' => 'Milano',
    'MN' => 'Mantova',
    'MO' => 'Modena',
    'MS' => 'Massa-Carrara',
    'MT' => 'Matera',
    'NA' => 'Napoli',
    'NO' => 'Novara',
    'NU' => 'Nuoro',
    'OG' => 'Ogliastra',
    'OR' => 'Oristano',
    'OT' => 'Olbia-Tempio',
    'PA' => 'Palermo',
    'PC' => 'Piacenza',
    'PD' => 'Padova',
    'PE' => 'Pescara',
    'PG' => 'Perugia',
    'PI' => 'Pisa',
    'PN' => 'Pordenone',
    'PO' => 'Prato',
    'PR' => 'Parma',
    'PT' => 'Pistoia',
    'PU' => 'Pesaro e Urbino',
    'PV' => 'Pavia',
    'PZ' => 'Potenza',
    'RA' => 'Ravenna',
    'RC' => 'Reggio Calabria',
    'RE' => 'Reggio Emilia',
    'RG' => 'Ragusa',
    'RI' => 'Rieti',
    'RM' => 'Roma',
    'RN' => 'Rimini',
    'RO' => 'Rovigo',
    'SA' => 'Salerno',
    'SI' => 'Siena',
    'SO' => 'Sondrio',
    'SP' => 'La Spezia',
    'SR' => 'Siracusa',
    'SS' => 'Sassari',
    'SV' => 'Savona',
    'TA' => 'Taranto',
    'TE' => 'Teramo',
    'TN' => 'Trento',
    'TO' => 'Torino',
    'TP' => 'Trapani',
    'TR' => 'Terni',
    'TS' => 'Trieste',
    'TV' => 'Treviso',
    'UD' => 'Udine',
    'VA' => 'Varese',
    'VB' => 'Verbano-Cusio-Ossola',
    'VC' => 'Vercelli',
    'VE' => 'Venezia',
    'VI' => 'Vicenza',
    'VR' => 'Verona',
    'VS' => 'Medio Campidano',
    'VT' => 'Viterbo',
    'VV' => 'Vibo Valentia',
    '13' => 'Clarendon',
    '09' => 'Hanover',
    '01' => 'Kingston',
    '12' => 'Manchester',
    '04' => 'Portland',
    '02' => 'St. Andrew',
    '06' => 'St. Ann',
    '14' => 'St. Catherine',
    '11' => 'St. Elizabeth',
    '08' => 'St. James',
    '05' => 'St. Mary',
    '03' => 'St. Thomas',
    '07' => 'Trelawny',
    '10' => 'Westmoreland',
    '01' => t('Hokkaido'),
    '02' => t('Aomori'),
    '03' => t('Iwate'),
    '04' => t('Miyagi'),
    '05' => t('Akita'),
    '06' => t('Yamagata'),
    '07' => t('Fukushima'),
    '08' => t('Ibaraki'),
    '09' => t('Tochigi'),
    '10' => t('Gunma'),
    '11' => t('Saitama'),
    '12' => t('Chiba'),
    '13' => t('Tokyo'),
    '14' => t('Kanagawa'),
    '15' => t('Niigata'),
    '16' => t('Toyama'),
    '17' => t('Ishikawa'),
    '18' => t('Fukui'),
    '19' => t('Yamanashi'),
    '20' => t('Nagano'),
    '21' => t('Gifu'),
    '22' => t('Shizuoka'),
    '23' => t('Aichi'),
    '24' => t('Mie'),
    '25' => t('Shiga'),
    '26' => t('Kyoto'),
    '27' => t('Osaka'),
    '28' => t('Hyogo'),
    '29' => t('Nara'),
    '30' => t('Wakayama'),
    '31' => t('Tottori'),
    '32' => t('Shimane'),
    '33' => t('Okayama'),
    '34' => t('Hiroshima'),
    '35' => t('Yamaguchi'),
    '36' => t('Tokushima'),
    '37' => t('Kagawa'),
    '38' => t('Ehime'),
    '39' => t('Kochi'),
    '40' => t('Fukuoka'),
    '41' => t('Saga'),
    '42' => t('Nagasaki'),
    '43' => t('Kumamoto'),
    '44' => t('Oita'),
    '45' => t('Miyazaki'),
    '46' => t('Kagoshima'),
    '47' => t('Okinawa'),
    '11' => t('Seoul'),
    '26' => t('Busan'),
    '27' => t('Daegu'),
    '30' => t('Daejeon'),
    '29' => t('Gwangju'),
    '28' => t('Incheon'),
    '31' => t('Ulsan'),
    '43' => t('Chungcheongbuk-do'),
    '44' => t('Chungcheongnam-do'),
    '42' => t('Gangwon-do'),
    '41' => t('Gyeonggi-do'),
    '47' => t('Gyeongsangbuk-do'),
    '48' => t('Gyeongsangnam-do'),
    '49' => t('Jeju-do'),
    '45' => t('Jeollabuk-do'),
    '46' => t('Jeollanam-do'),
    '50' => t('Sejong'),
    'AST' => t('Astana'),
    'ALA' => t('Almaty'),
    'ALM' => t('Almaty region'),
    'AKM' => t('Aqmola region'),
    'AKT' => t('Aqtöbe region'),
    'ATY' => t('Atyraū region'),
    'ZAP' => t('Batys Qazaqstan region'),
    'MAN' => t('Mangghystaū region'),
    'YUZ' => t('Ongtüstik Qazaqstan region'),
    'PAV' => t('Pavlodar region'),
    'KAR' => t('Qaraghandy region'),
    'KUS' => t('Qostanay region'),
    'KZY' => t('Qyzylorda region'),
    'VOS' => t('Shyghys Qazaqstan region'),
    'SEV' => t('Soltüstik Qazaqstan region'),
    'ZHA' => t('Zhambyl region'),
    'AGU' => 'Aguascalientes',
    'BCN' => 'Baja California',
    'BCS' => 'Baja California Sur',
    'CAM' => 'Campeche',
    'COA' => 'Coahuila',
    'COL' => 'Colima',
    'CHP' => 'Chiapas',
    'CHH' => 'Chihuahua',
    'DIF' => 'Distrito Federal',
    'DUG' => 'Durango',
    'MEX' => 'Estado de México',
    'GUA' => 'Guanajuato',
    'GRO' => 'Guerrero',
    'HID' => 'Hidalgo',
    'JAL' => 'Jalisco',
    'MIC' => 'Michoacán',
    'MOR' => 'Morelos',
    'NAY' => 'Nayarit',
    'NLE' => 'Nuevo León',
    'OAX' => 'Oaxaca',
    'PUE' => 'Puebla',
    'QUE' => 'Queretaro',
    'ROO' => 'Quintana Roo',
    'SLP' => 'San Luis Potosí',
    'SIN' => 'Sinaloa',
    'SON' => 'Sonora',
    'TAB' => 'Tabasco',
    'TAM' => 'Tamaulipas',
    'TLA' => 'Tlaxcala',
    'VER' => 'Veracruz',
    'YUC' => 'Yucatán',
    'ZAC' => 'Zacatecas',
    '01' => t('Johor'),
    '02' => t('Kedah'),
    '03' => t('Kelantan'),
    '14' => t('Kuala Lumpur'),
    '15' => t('Labuan'),
    '04' => t('Melaka'),
    '05' => t('Negeri Sembilan'),
    '06' => t('Pahang'),
    '08' => t('Perak'),
    '09' => t('Perlis'),
    '07' => t('Pulau Pinang'),
    '16' => t('Putrajaya'),
    '12' => t('Sabah'),
    '13' => t('Sarawak'),
    '10' => t('Selangor'),
    '11' => t('Terengganu'),
    'AMA' => 'Amazonas',
    'ANC' => 'Ancash',
    'APU' => 'Apurimac',
    'ARE' => 'Arequipa',
    'AYA' => 'Ayacucho',
    'CAJ' => 'Cajamarca',
    'CAL' => 'Callao',
    'CUS' => 'Cusco',
    'HUV' => 'Huancavelica',
    'HUC' => 'Huanuco',
    'ICA' => 'Ica',
    'JUN' => 'Junin',
    'LAL' => 'La Libertad',
    'LAM' => 'Lambayeque',
    'LIM' => 'Lima',
    'LOR' => 'Loreto',
    'MDD' => 'Madre de Dios',
    'MOQ' => 'Moquegua',
    'PAS' => 'Pasco',
    'PIU' => 'Piura',
    'PUN' => 'Puno',
    'SAM' => 'San Martin',
    'TAC' => 'Tacna',
    'TUM' => 'Tumbes',
    'UCA' => 'Ucayali',
    'MOW' => t('Moskva'),
    'SPE' => t('Sankt-Peterburg'),
    'AD' => t('Adygeya, Respublika'),
    'AL' => t('Altay, Respublika'),
    'BA' => t('Bashkortostan, Respublika'),
    'BU' => t('Buryatiya, Respublika'),
    'CE' => t('Chechenskaya Respublika'),
    'CU' => t('Chuvashskaya Respublika'),
    'DA' => t('Dagestan, Respublika'),
    'IN' => t('Ingushetiya, Respublika'),
    'KB' => t('Kabardino-Balkarskaya Respublika'),
    'KL' => t('Kalmykiya, Respublika'),
    'KC' => t('Karachayevo-Cherkesskaya Respublika'),
    'KR' => t('Kareliya, Respublika'),
    'KK' => t('Khakasiya, Respublika'),
    'KO' => t('Komi, Respublika'),
    'ME' => t('Mariy El, Respublika'),
    'MO' => t('Mordoviya, Respublika'),
    'SA' => t('Sakha, Respublika [Yakutiya]'),
    'SE' => t('Severnaya Osetiya-Alaniya, Respublika'),
    'TA' => t('Tatarstan, Respublika'),
    'TY' => t('Tyva, Respublika [Tuva]'),
    'UD' => t('Udmurtskaya Respublika'),
    'ALT' => t('Altayskiy kray'),
    'KAM' => t('Kamchatskiy kray'),
    'KHA' => t('Khabarovskiy kray'),
    'KDA' => t('Krasnodarskiy kray'),
    'KYA' => t('Krasnoyarskiy kray'),
    'PER' => t('Permskiy kray'),
    'PRI' => t('Primorskiy kray'),
    'STA' => t('Stavropolskiy kray'),
    'ZAB' => t('Zabaykalskiy kray'),
    'AMU' => t('Amurskaya oblast'),
    'ARK' => t('Arkhangelskaya oblast'),
    'AST' => t('Astrakhanskaya oblast'),
    'BEL' => t('Belgorodskaya oblast'),
    'BRY' => t('Bryanskaya oblast'),
    'CHE' => t('Chelyabinskaya oblast'),
    'IRK' => t('Irkutskaya oblast'),
    'IVA' => t('Ivanovskaya oblast'),
    'KGD' => t('Kaliningradskaya oblast'),
    'KLU' => t('Kaluzhskaya oblast'),
    'KEM' => t('Kemerovskaya oblast'),
    'KIR' => t('Kirovskaya oblast'),
    'KOS' => t('Kostromskaya oblast'),
    'KGN' => t('Kurganskaya oblast'),
    'KRS' => t('Kurskaya oblast'),
    'LEN' => t('Leningradskaya oblast'),
    'LIP' => t('Lipetskaya oblast'),
    'MAG' => t('Magadanskaya oblast'),
    'MOS' => t('Moskovskaya oblast'),
    'MUR' => t('Murmanskaya oblast'),
    'NIZ' => t('Nizhegorodskaya oblast'),
    'NGR' => t('Novgorodskaya oblast'),
    'NVS' => t('Novosibirskaya oblast'),
    'OMS' => t('Omskaya oblast'),
    'ORE' => t('Orenburgskaya oblast'),
    'ORL' => t('Orlovskaya oblast'),
    'PNZ' => t('Penzenskaya oblast'),
    'PSK' => t('Pskovskaya oblast'),
    'ROS' => t('Rostovskaya oblast'),
    'RYA' => t('Ryazanskaya oblast'),
    'SAK' => t('Sakhalinskaya oblast'),
    'SAM' => t('Samarskaya oblast'),
    'SAR' => t('Saratovskaya oblast'),
    'SMO' => t('Smolenskaya oblast'),
    'SVE' => t('Sverdlovskaya oblast'),
    'TAM' => t('Tambovskaya oblast'),
    'TOM' => t('Tomskaya oblast'),
    'TUL' => t('Tulskaya oblast'),
    'TVE' => t('Tverskaya oblast'),
    'TYU' => t('Tyumenskaya oblast'),
    'ULY' => t('Ulyanovskaya oblast'),
    'VLA' => t('Vladimirskaya oblast'),
    'VGG' => t('Volgogradskaya oblast'),
    'VLG' => t('Vologodskaya oblast'),
    'VOR' => t('Voronezhskaya oblast'),
    'YAR' => t('Yaroslavskaya oblast'),
    'YEV' => t('Yevreyskaya avtonomnaya oblast'),
    'CHU' => t('Chukotskiy avtonomnyy okrug'),
    'KHM' => t('Khanty-Mansiyskiy avtonomnyy okrug-Yugra'),
    'NEN' => t('Nenetskiy avtonomnyy okrug'),
    'YAN' => t('Yamalo-Nenetskiy avtonomnyy okrug'),
    '01' => t('Adana'),
    '02' => t('Adıyaman'),
    '03' => t('Afyon'),
    '04' => t('Ağrı'),
    '68' => t('Aksaray'),
    '05' => t('Amasya'),
    '06' => t('Ankara'),
    '07' => t('Antalya'),
    '75' => t('Ardahan'),
    '08' => t('Artvin'),
    '09' => t('Aydın'),
    '10' => t('Balıkesir'),
    '74' => t('Bartın'),
    '72' => t('Batman'),
    '69' => t('Bayburt'),
    '11' => t('Bilecik'),
    '12' => t('Bingöl'),
    '13' => t('Bitlis'),
    '14' => t('Bolu'),
    '15' => t('Burdur'),
    '16' => t('Bursa'),
    '17' => t('Çanakkale'),
    '18' => t('Çankırı'),
    '19' => t('Çorum'),
    '20' => t('Denizli'),
    '21' => t('Diyarbakır'),
    '81' => t('Düzce'),
    '22' => t('Edirne'),
    '23' => t('Elazığ'),
    '24' => t('Erzincan'),
    '25' => t('Erzurum'),
    '26' => t('Eskişehir'),
    '27' => t('Gaziantep'),
    '28' => t('Giresun'),
    '29' => t('Gümüşhane'),
    '30' => t('Hakkari'),
    '31' => t('Hatay'),
    '76' => t('Iğdır'),
    '32' => t('Isparta'),
    '34' => t('İstanbul'),
    '35' => t('İzmir'),
    '46' => t('Kahramanmaraş'),
    '78' => t('Karabük'),
    '70' => t('Karaman'),
    '36' => t('Kars'),
    '37' => t('Kastamonu'),
    '38' => t('Kayseri'),
    '71' => t('Kırıkkale'),
    '39' => t('Kırklareli'),
    '40' => t('Kırşehir'),
    '79' => t('Kilis'),
    '41' => t('Kocaeli'),
    '42' => t('Konya'),
    '43' => t('Kütahya'),
    '44' => t('Malatya'),
    '45' => t('Manisa'),
    '47' => t('Mardin'),
    '33' => t('Mersin'),
    '48' => t('Muğla'),
    '49' => t('Muş'),
    '50' => t('Nevşehir'),
    '51' => t('Niğde'),
    '52' => t('Ordu'),
    '80' => t('Osmaniye'),
    '53' => t('Rize'),
    '54' => t('Sakarya'),
    '55' => t('Samsun'),
    '56' => t('Siirt'),
    '57' => t('Sinop'),
    '58' => t('Sivas'),
    '63' => t('Şanlıurfa'),
    '73' => t('Şırnak'),
    '59' => t('Tekirdağ'),
    '60' => t('Tokat'),
    '61' => t('Trabzon'),
    '62' => t('Tunceli'),
    '64' => t('Uşak'),
    '65' => t('Van'),
    '77' => t('Yalova'),
    '66' => t('Yozgat'),
    '67' => t('Zonguldak'),
    'TXG' => t('Taichung City'),
    'TPE' => t('Taipei City'),
    'TTT' => t('Taitung County'),
    'TNN' => t('Tainan City'),
    'ILA' => t('Yilan County'),
    'HUA' => t('Hualien County'),
    'Kinmen County' => t('Kinmen County'),
    'NAN' => t('Nantou County'),
    'PIF' => t('Pingtung County'),
    'MIA' => t('Miaoli County'),
    'TAO' => t('Taoyuan County'),
    'KHH' => t('Kaohsiung City'),
    'KEE' => t('Keelung City'),
    'Lienchiang County' => t('Lienchiang County'),
    'YUN' => t('Yunlin County'),
    'TPQ' => t('New Taipei City'),
    'HSZ' => t('Hsinchu City'),
    'HSQ' => t('Hsinchu County'),
    'CYI' => t('Chiayi City'),
    'CYQ' => t('Chiayi County'),
    'CHA' => t('Changhua County'),
    'PEN' => t('Penghu County'),
    '43' => t('Crimea'),
    '05' => t('Vinnyts\'ka oblast'),
    '07' => t('Volyns\'ka oblast'),
    '12' => t('Dnipropetrovsk Oblast'),
    '14' => t('Donetsk Oblast'),
    '18' => t('Zhytomyrs\'ka oblast'),
    '21' => t('Zakarpats\'ka oblast'),
    '23' => t('Zaporiz\'ka oblast'),
    '26' => t('Ivano-Frankivs\'ka oblast'),
    '30' => t('Kiev Oblast'),
    '35' => t('Kirovohrads\'ka oblast'),
    '09' => t('Luhans\'ka oblast'),
    '46' => t('Lviv Oblast'),
    '48' => t('Mykolaivs\'ka oblast'),
    '51' => t('Odessa Oblast'),
    '53' => t('Poltavs\'ka oblast'),
    '56' => t('Rivnens\'ka oblast'),
    '40' => t('Sevastopol\' city'),
    '59' => t('Sums\'ka oblast'),
    '61' => t('Ternopil\'s\'ka oblast'),
    '63' => t('Kharkiv Oblast'),
    '65' => t('Khersons\'ka oblast'),
    '68' => t('Khmel\'nyts\'ka oblast'),
    '71' => t('Cherkas\'ka oblast'),
    '77' => t('Chernivets\'ka oblast'),
    '74' => t('Chernihivs\'ka oblast'),
    'AL' => t('Alabama'),
    'AK' => t('Alaska'),
    'AZ' => t('Arizona'),
    'AR' => t('Arkansas'),
    'CA' => t('California'),
    'CO' => t('Colorado'),
    'CT' => t('Connecticut'),
    'DE' => t('Delaware'),
    'DC' => t('District of Columbia'),
    'FL' => t('Florida'),
    'GA' => t('Georgia'),
    'HI' => t('Hawaii'),
    'ID' => t('Idaho'),
    'IL' => t('Illinois'),
    'IN' => t('Indiana'),
    'IA' => t('Iowa'),
    'KS' => t('Kansas'),
    'KY' => t('Kentucky'),
    'LA' => t('Louisiana'),
    'ME' => t('Maine'),
    'MD' => t('Maryland'),
    'MA' => t('Massachusetts'),
    'MI' => t('Michigan'),
    'MN' => t('Minnesota'),
    'MS' => t('Mississippi'),
    'MO' => t('Missouri'),
    'MT' => t('Montana'),
    'NE' => t('Nebraska'),
    'NV' => t('Nevada'),
    'NH' => t('New Hampshire'),
    'NJ' => t('New Jersey'),
    'NM' => t('New Mexico'),
    'NY' => t('New York'),
    'NC' => t('North Carolina'),
    'ND' => t('North Dakota'),
    'OH' => t('Ohio'),
    'OK' => t('Oklahoma'),
    'OR' => t('Oregon'),
    'PA' => t('Pennsylvania'),
    'RI' => t('Rhode Island'),
    'SC' => t('South Carolina'),
    'SD' => t('South Dakota'),
    'TN' => t('Tennessee'),
    'TX' => t('Texas'),
    'UT' => t('Utah'),
    'VT' => t('Vermont'),
    'VA' => t('Virginia'),
    'WA' => t('Washington'),
    'WV' => t('West Virginia'),
    'WI' => t('Wisconsin'),
    'WY' => t('Wyoming'),    
    'AA' => t('Armed Forces (Americas)'),
    'AE' => t('Armed Forces (Europe, Canada, Middle East, Africa)'),
    'AP' => t('Armed Forces (Pacific)'),
    'AS' => t('American Samoa'),
    'FM' => t('Federated States of Micronesia'),
    'GU' => t('Guam'),
    'MH' => t('Marshall Islands'),
    'MP' => t('Northern Mariana Islands'),
    'PW' => t('Palau'),
    'PR' => t('Puerto Rico'),
    'VI' => t('Virgin Islands'),  
    'Z' => 'Amazonas',
    'B' => 'Anzoátegui',
    'C' => 'Apure',
    'D' => 'Aragua',
    'E' => 'Barinas',
    'F' => 'Bolívar',
    'G' => 'Carabobo',
    'H' => 'Cojedes',
    'Y' => 'Delta Amacuro',
    'W' => 'Dependencias Federales',
    'A' => 'Distrito Federal',
    'I' => 'Falcón',
    'J' => 'Guárico',
    'K' => 'Lara',
    'L' => 'Mérida',
    'M' => 'Miranda',
    'N' => 'Monagas',
    'O' => 'Nueva Esparta',
    'P' => 'Portuguesa',
    'R' => 'Sucre',
    'S' => 'Táchira',
    'T' => 'Trujillo',
    'X' => 'Vargas',
    'U' => 'Yaracuy',
    'V' => 'Zulia',
  );

  return $administrative_areas;
}

function hcfm_config_asset_tab(){
  $assetsystem = drupal_get_form('hcfm_add_assetsystem_form');
  $assetsubsystem = drupal_get_form('hcfm_add_assetsubsystem_form');
  $assetdevicetype = drupal_get_form('hcfm_add_assetdevicetype_form');
  $assetstatus = drupal_get_form('hcfm_add_config_asset_status_form');
  $assetaccountnumber = drupal_get_form('hcfm_add_config_account_number_form');
  $assetriskrank = drupal_get_form('hcfm_asset_add_assetriskrank_form');
  $elements['container_tab'] = array(
    '#markup' => 
    '<div class="hcfm-asset-container-tab company-prequal-fields">      
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">        
      <li role="presentation" class="active config_asset_system"><a href="#assetsystem" aria-controls="assetsystem" role="tab" data-toggle="tab">System</a></li>
      <li role="presentation" class="config_asset_subsystem"><a href="#assetsubsystem" aria-controls="assetsubsystem" role="tab" data-toggle="tab">Subsystem</a></li>
      <li role="presentation" class="config_asset_device_type"><a href="#assetdevicetype" aria-controls="assetdevicetype" role="tab" data-toggle="tab">Device Type</a></li>       
      <li role="presentation" class="config_asset_status"><a href="#assetstatus" aria-controls="assetstatus" role="tab" data-toggle="tab">Status</a></li>   
      <li role="presentation" class="config_fm_account_number"><a href="#assetaccountnumber" aria-controls="assetaccountnumber" role="tab" data-toggle="tab">Department</a></li>
      <li role="presentation" class="config_fm_risk_rank"><a href="#assetriskrank" aria-controls="assetriskrank" role="tab" data-toggle="tab">Risk Rank</a></li>    
    </ul>
    
    <!-- Tab panes -->
    <div class="tab-content">      
      <div role="tabpanel" class="tab-pane active config_asset_system" id="assetsystem">'.drupal_render($assetsystem).'</div>
      <div role="tabpanel" class="tab-pane config_asset_subsystem" id="assetsubsystem">'.drupal_render($assetsubsystem).'</div>
      <div role="tabpanel" class="tab-pane config_asset_device_type" id="assetdevicetype">'.drupal_render($assetdevicetype).'</div>     
      <div role="tabpanel" class="tab-pane config_asset_status" id="assetstatus">'.drupal_render($assetstatus).'</div>
      <div role="tabpanel" class="tab-pane config_fm_account_number" id="assetaccountnumber">'.drupal_render($assetaccountnumber).'</div>
      <div role="tabpanel" class="tab-pane config_fm_risk_rank" id="assetriskrank">'.drupal_render($assetriskrank).'</div>        
    </div>      
    </div>' 
  );
  return $elements;
}


function hcfm_config_location_tab(){
  $location_region = drupal_get_form('hcfm_config_location_region_form');
  $location_site = drupal_get_form('hcfm_config_location_site_form');
  $location_facility = drupal_get_form('hcfm_config_location_facility_form');
  $location_location = drupal_get_form('hcfm_config_location_location_form');
  $location_facilitytype = config_facility_type_container();//drupal_get_form('hcfm_add_config_facilitytype_form');
  $elements['container_tab'] = array(
    '#markup' => 
    '
      <div class="hcfm-location-container-tab company-prequal-fields">
      
      <!-- Nav tabs -->
      <ul class="nav nav-tabs" role="tablist">
        
        <li role="presentation" class="active config_location_region"><a href="#locationregion" aria-controls="locationregion" role="tab" data-toggle="tab">Region</a></li>
        <li role="presentation" class="config_location_site"><a href="#locationsite" aria-controls="locationsite" role="tab" data-toggle="tab">Site</a></li>
        <li role="presentation" class="config_location_facilitytype"><a href="#locationfacilitytype" aria-controls="locationfacilitytype" role="tab" data-toggle="tab">Facility Type</a></li>
        <li role="presentation" class="config_location_facility"><a href="#locationfacility" aria-controls="locationfacility" role="tab" data-toggle="tab">Facility</a></li>        
        <li role="presentation" class="config_location_location"><a href="#locationlocation" aria-controls="locationlocation" role="tab" data-toggle="tab">Zone</a></li>
                
      </ul>
      
      <!-- Tab panes -->
      <div class="tab-content">      
        <div role="tabpanel" class="tab-pane active config_location_region" id="locationregion">'.drupal_render($location_region).'</div>
        <div role="tabpanel" class="tab-pane config_location_site" id="locationsite">'.drupal_render($location_site).'</div>
        <div role="tabpanel" class="tab-pane config_location_facilitytype" id="locationfacilitytype">'.drupal_render($location_facilitytype).'</div>
        <div role="tabpanel" class="tab-pane config_location_facility" id="locationfacility">'.drupal_render($location_facility).'</div>
        <div role="tabpanel" class="tab-pane config_location_location" id="locationlocation">'.drupal_render($location_location).'</div>
                
      </div>      
      </div>' 
  );
  return $elements;
}


function hcfm_config_location_region_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-locationregion hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-locationregion-link green-round-btn" title="Create New Region">
      <i class="glyphicon glyphicon-plus"></i> New Region
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 

  $form['main-container-main']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="locationregion-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['config_location_region_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Region Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_region_title'
    )
  ),
  '#weight' => 0,
  '#required' => TRUE,
  '#prefix' => '<div class="row"><div class="col-md-6">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['config_location_region_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Region Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_region_description'
    )
  ),
  '#weight' => 1,
  //'#required' => TRUE,
  '#prefix' => '<div class="col-md-6">',
  '#suffix' => '</div></div>',
  );
  
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  asort($countryNamesList);
  unset($countryNamesList['US']);
  $countryNamesList1 = array('US'=>'United States')+$countryNamesList;
  $form['main-container-main']['main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('row')),
  '#weight' => 5,
  '#prefix' => '<label>Address</label><div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['main-container']['config_location_region_country'] = array(
  '#type' => 'select',  
  '#title' => t('Country'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_country'
    )
  ),
  '#options' => $countryNamesList1,
  '#empty_option' => t('- Select -'),
  //'#default_value' => 'US',
  '#prefix' => '<div class="col-md-6">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['main-container']['config_location_region_country_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_country_value'
    )
  ),  
  );
  $form['main-container-main']['main-container']['config_location_region_address1'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address1'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_address1'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',  
  );   
  $form['main-container-main']['main-container']['config_location_region_address2'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address2'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_address2'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['main-container']['config_location_region_city'] = array(
  '#type' => 'textfield', 
  '#title' => t('City'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_city'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  );
//  $administrativeNamesList = addressfield_get_administrative_areas('US');
  $form['main-container-main']['main-container']['config_location_region_state'] = array(
  '#type' => 'select',  
  '#title' => t('State'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_state'
    )
  ),
  '#options' => _get_default_state(),
  '#validate' => TRUE,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>'
  );
  $form['main-container-main']['main-container']['config_location_region_state_key'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_state_key'
    )
  )
  );
  $form['main-container-main']['main-container']['config_location_region_state_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_state_value'
    )
  )
  );    
  $form['main-container-main']['main-container']['config_location_region_zipcode'] = array(
  '#type' => 'textfield', 
  '#title' => t('Zip Code'),
  //'#parents' => array('facility_data',$uniqId,'fa_zipcode'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_region_zipcode'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>'
  );
  
  $form['main-container-main']['config_location_region_address'] = array(
  '#type' => 'hidden',
  '#title' => t('Region Address'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_region_address'
    )
  ),
  //'#weight' => 2,
  //'#required' => TRUE,  
  );
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_location_region');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container-main']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );
  $form['main-container-main']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),
  '#weight' => 6, 
  );
  $form['main-container-main']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-location-region">', 
  '#weight' => 7,   
  );
  $header = array('Region Name','Description','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'fm_location_region',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  '#weight' => 8,
  ); 
  return $form;
}

function hcfm_config_location_region_form_validate($form,&$form_state){
  $values = $form_state ['values']; 
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_location_region');
  if(in_array($values['config_location_region_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_location_region_title','already exists " '.$values['config_location_region_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_location_region_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_location_region'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_region')));
    }
  }
}

function hcfm_config_location_site_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-locationsite hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-locationsite-link green-round-btn" title="Create New Site">
      <i class="glyphicon glyphicon-plus"></i> New Site
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container-main']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="locationsite-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $locationRegion = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$company->nid,$user->uid);

  $form['main-container-main']['config_location_site_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Site Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_site_title'
    )
  ),
  '#required' => TRUE,
  '#weight' => 1,
  '#prefix' => '<div class="row margin-5"><div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['config_location_pick_region'] = array(
  '#type' => 'select',
  '#options' => $locationRegion,
  '#empty_option' => t('- Select -'),
  '#title' => t('Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_pick_region'
    )
  ),
  '#required' => TRUE,
  '#weight' => 2,
  '#prefix' => '<div class="col-md-3 padding-5">',
  '#suffix' => '</div>',
  );
  
  $form['main-container-main']['config_location_site_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Site Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_site_description'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 3,
  '#prefix' => '<div class="col-md-6 padding-5">',
  '#suffix' => '</div></div>',
  );  
  
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  asort($countryNamesList);
  unset($countryNamesList['US']);
  $countryNamesList1 = array('US'=>'United States')+$countryNamesList;
  $form['main-container-main']['config_location_site_addresscopy'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use the same address as for region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_addresscopy',
    'address_copy'
    )
  ),
  
  '#weight' => 4,
  '#default_value' => 1,
  //'#required' => TRUE,
  '#prefix' => '<div class="siteaddress-outer" style="display:none"><label>Address</label>',
  //'#suffix' => '',
  );
  $form['main-container-main']['main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('clearfix')),
  '#weight' => 5,
  '#states' => array(
    'visible' => array(
      ':input[name="config_location_site_addresscopy"]' => array('checked' => FALSE),
    ),
  ),
  //'#prefix' => '<div class="project-details-border siteaddresscon margin-bottom-10" style="border:1px solid;padding:5px;">',
  //'#suffix' => '</div>',
  );
  
  
  $form['main-container-main']['main-container']['config_location_site_country'] = array(
  '#type' => 'select',  
  '#title' => t('Country'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_country'
    )
  ),
  '#options' => $countryNamesList1,
  '#empty_option' => t('- Select -'),
  //'#default_value' => 'US',
  '#prefix' => '<div class="clearfix padding-10 panel panel-default"><div class="row margin-5"><div class="col-md-6 padding-5" style="display:none">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['main-container']['config_location_site_country_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_country_value'
    )
  ),  
  );
  $form['main-container-main']['main-container']['config_location_site_address1'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address1'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_address1'
    )
  ),
  '#prefix' => '<div class="col-md-12 padding-5">',
  '#suffix' => '</div>',  
  );   
  $form['main-container-main']['main-container']['config_location_site_address2'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address2'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_address2'
    )
  ),
  '#prefix' => '<div class="col-md-12 padding-5">',
  '#suffix' => '</div>',
  );
  $form['main-container-main']['main-container']['config_location_site_city'] = array(
  '#type' => 'textfield', 
  '#title' => t('City'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_city'
    )
  ),
  '#prefix' => '<div class="col-md-4 padding-5">',
  '#suffix' => '</div>',
  );
 // $administrativeNamesList = addressfield_get_administrative_areas('US');
  $form['main-container-main']['main-container']['config_location_site_state'] = array(
  '#type' => 'select',  
  '#title' => t('State'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_state'
    )
  ),
  '#options' => _get_default_state(),
  '#validate' => TRUE,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-4 padding-5">',
  '#suffix' => '</div>'
  );
  $form['main-container-main']['main-container']['config_location_site_state_key'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_state_key'
    )
  )
  );
  $form['main-container-main']['main-container']['config_location_site_state_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_state_value'
    )
  )
  );  
  $form['main-container-main']['main-container']['config_location_site_zipcode'] = array(
  '#type' => 'textfield', 
  '#title' => t('Zip Code'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_site_zipcode'
    )
  ),
  '#prefix' => '<div class="col-md-4 padding-5">',
  '#suffix' => '</div></div></div></div>'
  );
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_location_site');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container-main']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );
  $form['main-container-main']['config_location_site_address'] = array(
  '#type' => 'hidden',
  '#title' => t('Site Address'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_site_address'
    )
  ),
  //'#required' => TRUE,
  );
  $form['main-container-main']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  '#weight' => 6,
  );
  $form['main-container-main']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-location-site">',  
  '#weight' => 7,  
  );
  $header = array('Site Name','Address','Description','Region Name','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'fm_location_site',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  '#weight' => 8,
  );  
  return $form;
}

function hcfm_config_location_site_form_validate($form,&$form_state){ //drup_msg($form_state ['values']);
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_location_site');
  if(in_array($values['config_location_site_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_location_site_title','already exists " '.$values['config_location_site_title'].' "'); 
  }
  if(isset($values['config_location_site_addresscopy']) && $values['config_location_site_addresscopy'] == 0 && (empty($values['config_location_site_address1']) || empty($values['config_location_site_address2']) || empty($values['config_location_site_city']) || empty($values['config_location_site_state']) || empty($values['config_location_site_zipcode']))){  
  form_set_error ('config_location_site_addresscopy','Pleaer fill the Address');  
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && (empty($values['config_location_site_title']) || empty($values['config_location_pick_region']))) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_location_site'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_site')));
    }
  }
}
function change_facility_nid_callback($form,&$form_state){
  ctools_include('ajax');
 
  $commands = array();
  $triggeringElement = $form_state['triggering_element'];  
  if($form_state['triggering_element']['#name'] == 'get_facility') {
  $NodeType = $form_state['values']['add_ntype'];
  $NodeNid = $form_state['values']['get_facility'];
  //config location facility
  if($NodeType == 'fm_facility' && $NodeNid && !empty($NodeNid)){
    $query= db_select('node', 'n');
    $query->leftjoin('field_data_field_facility_location_site' ,'flr', 'flr.entity_id=n.nid');      
    $query->leftjoin('field_data_field_facility_number_of_floor' ,'ffnof', 'ffnof.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_ftes' ,'ffft', 'ffft.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_employees' ,'ffem', 'ffem.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_type' ,'ffty', 'ffty.entity_id=n.nid');
    $query->leftjoin('field_data_field_facility_address' ,'fla' ,'fla.entity_id=n.nid');
      $query->leftjoin('field_data_field_facility_description' ,'fde' ,'fde.entity_id=n.nid');
    $query->leftjoin('field_data_field_use_same_address_site' ,'fusasi' ,'fusasi.entity_id=n.nid');
    $query->fields('n',array('nid','title')); 
    $query->fields('ffft',array('field_facility_ftes_value'));
    $query->fields('ffem',array('field_facility_employees_value'));
    $query->fields('ffty',array('field_facility_type_target_id'));    
    $query->fields('flr',array('field_facility_location_site_target_id'));
    $query->fields('ffnof',array('field_facility_number_of_floor_value'));
    $query->fields('fusasi',array('field_use_same_address_site_value'));
      $query->fields('fde',array('field_facility_description_value'));
    $query->fields('fla',array('field_facility_address_country','field_facility_address_thoroughfare','field_facility_address_premise','field_facility_address_locality','field_facility_address_administrative_area','field_facility_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
    
    
    $NodeObj111 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_area_type','Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('delta','field_facility_area_type_target_id'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$NodeNid ))); 
  $TableData111 =  _get_hcfm_db_request($NodeObj111);
    
    
    $commands[] = ajax_command_invoke("select.config_location_pick_site", 'val',array($CData[0]->field_facility_location_site_target_id));  
    $commands[] = ajax_command_invoke("input.config_location_facility_title", 'val',array($CData[0]->title)); 
    $commands[] = ajax_command_invoke("select.config_location_facility_facilitytype", 'val',array($CData[0]->field_facility_type_target_id));
    $commands[] = ajax_command_invoke("input.config_location_facility_employees", 'val',array($CData[0]->field_facility_employees_value));
    $commands[] = ajax_command_invoke("input.config_location_facility_ftes", 'val',array($CData[0]->field_facility_ftes_value));
    $commands[] = ajax_command_invoke("input.config_location_facility_description", 'val',array($CData[0]->field_facility_description_value));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber", 'val',array($CData[0]->field_facility_number_of_floor_value));
    if(isset($CData[0]->field_facility_number_of_floor_value) && !empty($CData[0]->field_facility_number_of_floor_value)){
    $commands[] = ajax_command_invoke("select.config_location_facility_floornumber_select", 'val',array($CData[0]->field_facility_number_of_floor_value));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber_addmore", 'trigger',array('mousedown'));
    }
    else{
      $commands[] = ajax_command_invoke("select.config_location_facility_floornumber_select", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber_addmore", 'trigger',array('mousedown'));
    }
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'val',array($CData[0]->field_facility_address_country));
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'trigger',array('change'));
/*    $commands[] = ajax_command_invoke("input.config_location_facility_address1", 'val',array($CData[0]->field_facility_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_facility_address2", 'val',array($CData[0]->field_facility_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_facility_city", 'val',array($CData[0]->field_facility_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_facility_state", 'val',array($CData[0]->field_facility_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_facility_state_key", 'val',array($CData[0]->field_facility_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_facility_zipcode", 'val',array($CData[0]->field_facility_address_postal_code));  */
    
    if(isset($CData[0]->field_facility_location_site_target_id) && !empty($CData[0]->field_facility_location_site_target_id)){
    $commands[] = ajax_command_invoke(".facilityaddress-outer",'show'); 
    }else{
      $commands[] = ajax_command_invoke(".facilityaddress-outer",'hide');
    }
    
    if(isset($CData[0]->field_use_same_address_site_value) && $CData[0]->field_use_same_address_site_value == 1){
    //$commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'trigger',array('checked'));
    $commands[] = ajax_command_invoke("input.config_location_facility_addresscopy", 'attr', array('checked',TRUE));
    $commands[] = ajax_command_invoke("input.config_location_facility_addresscopy", 'trigger',array('change'));
    
    
    
    $commands[] = ajax_command_invoke("input.config_location_facility_address1", 'val',array(''));
      $commands[] = ajax_command_invoke("input.config_location_facility_address2", 'val',array(''));
      $commands[] = ajax_command_invoke("input.config_location_facility_city", 'val',array(''));
      $commands[] = ajax_command_invoke("select.config_location_facility_state", 'val',array(''));
      $commands[] = ajax_command_invoke("input.config_location_facility_state_key", 'val',array(''));
      $commands[] = ajax_command_invoke("input.config_location_facility_zipcode", 'val',array(''));
    
    
    }else if(isset($CData[0]->field_use_same_address_site_value) && $CData[0]->field_use_same_address_site_value == 0 || empty($CData[0]->field_use_same_address_site_value)){
     $commands[] = ajax_command_invoke("input.config_location_facility_addresscopy", 'removeAttr', array('checked')); 
     $commands[] = ajax_command_invoke("input.config_location_facility_addresscopy", 'trigger',array('change'));
     
     
     
      $commands[] = ajax_command_invoke("input.config_location_facility_address1", 'val',array($CData[0]->field_facility_address_thoroughfare));
      $commands[] = ajax_command_invoke("input.config_location_facility_address2", 'val',array($CData[0]->field_facility_address_premise));
      $commands[] = ajax_command_invoke("input.config_location_facility_city", 'val',array($CData[0]->field_facility_address_locality));
      $commands[] = ajax_command_invoke("select.config_location_facility_state", 'val',array($CData[0]->field_facility_address_administrative_area));
      $commands[] = ajax_command_invoke("input.config_location_facility_state_key", 'val',array($CData[0]->field_facility_address_administrative_area));
      $commands[] = ajax_command_invoke("input.config_location_facility_zipcode", 'val',array($CData[0]->field_facility_address_postal_code));
    }
    
    
    
    
      
    $commands[] = ajax_command_invoke("input.facility_area_type_values", 'val',array($TableData111)); 
    $commands[] = ajax_command_invoke("input.fm_facility_node_nid", 'val',array($CData[0]->nid));     
  }
  else{
    $commands[] = ajax_command_invoke("select.config_location_pick_site", 'val',array('')); 
    $commands[] = ajax_command_invoke("input.config_location_facility_title", 'val',array('')); 
    $commands[] = ajax_command_invoke("select.config_location_facility_facilitytype", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_employees", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_ftes", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_facility_floornumber_select", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber_addmore", 'trigger',array('mousedown'));    
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_facility_country", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.config_location_facility_address1", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_address2", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_city", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_facility_state", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_state_key", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_facility_zipcode", 'val',array(''));   
    $commands[] = ajax_command_invoke("input.facility_area_type_values", 'val',array(''));  
    $commands[] = ajax_command_invoke("input.fm_facility_node_nid", 'val',array(''));
  }
  }  
  return array('#type' => 'ajax', '#commands' => $commands);
}

function hcfm_config_location_facility_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $fmfacility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  $form['get_facility'] = array(
    '#type' => 'select',
  '#title'=> 'Select Facility',
  '#options' => $fmfacility,
  '#empty_option' => t('- Select -'),
  //'#default_value' => isset($_GET['cid'])?$_GET['cid']:0,
  '#attributes' => array('class'=> array('form-control fm-facility-sel')),
  '#ajax' => array(
    'callback'=> 'change_facility_nid_callback',
    'wrapper' => 'fm_facility_sel_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-locationfacility hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-locationfacility-link green-round-btn" title="Create New Facility">
      <i class="glyphicon glyphicon-plus"></i> New Facility
      </a>
    </div>';
  $form['#suffix'] = '</div>';
   
  
  /*if(isset($form_state['values'],$form_state['input'],$form_state['triggering_element'],$form_state['triggering_element']['#type'],$form_state['triggering_element']['#name']) && $form_state['triggering_element']['#type']=='select' && $form_state['triggering_element']['#name']=='floornumber_addmore'){
     //drup_msg($form_state['triggering_element']['#value']);
     
   $facilityNid = $form_state['values']['config_location_pick_facility'];
  $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$form_state['triggering_element']['#value'])));
  $TableData11 =  _get_hcfm_db_request($NodeObj11);
  $floorOption = array_flip($TableData11);
  if(!empty($floorOption)){
    $form_state['config_location_location_numberoffloor'] = $floorOption;
  }
  else{
    $form_state['config_location_location_numberoffloor'] = array('none'=>'none');
  }
  }
  
  if(empty($form_state['config_location_location_numberoffloor'])){
    $form_state['config_location_location_numberoffloor'] = array_flip($FloorLists);
  }

  
  
  if(empty($form_state['option_wrapper']['option'])){
    $form_state['option_wrapper']['option'] = '';
  }*/

  $form['main_container_main']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('location-facility-container-section')),
  '#prefix' => '<div class="locationfacility-create-container margin-bottom-10">', 
  '#suffix' => '</div>',
  '#process' => array('hcfm_config_location_facility_container_process'),
  );
  $form['#attributes']['class'][] = 'clearfix chosentoselectmultiple';
 
  
  
  $header = array('Facility Name','Description','Site Name','Region Name','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'fm_facility',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  '#weight' => 22,
  ); 
  return $form;
}

function hcfm_config_location_facility_container_process($element, &$form_state){ //drup_msg($form_state['location_option']);
  global $user,$company;
  $element['config_location_facility_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Facitlity Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_title'
    )
  ),
  '#required' => TRUE,  
  '#weight' => 0,
  '#prefix' => '<div class="row"><div class="col-md-6">',
  '#suffix' => '</div>',
  );
  $locationSite = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$company->nid,$user->uid);
 $element['config_location_pick_site'] = array(
  '#type' => 'select',
  '#options' => $locationSite,
  '#empty_option' => t('- Select -'),
  '#title' => t('Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_pick_site'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 1,
  '#prefix' => '<div class="col-md-6">',
  '#suffix' => '</div></div>',
  );

  $facility_type = hcfm_nodenid_nodetitle_by_node_type('fm_facility_type');
 $element['config_location_facility_facilitytype'] = array(
  '#type' => 'select',
  '#options' => $facility_type,
  '#empty_option' => t('- Select -'),
  '#title' => t('Facility Type'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_facilitytype'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 2,
  '#prefix' => '<div class="row"><div class="col-md-6">',
  '#suffix' => '</div>',
  );
 
 $element['config_location_facility_employees'] = array(
  '#type' => 'textfield',
  '#title' => t('Occupation'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_employees'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 4,
  '#prefix' => '<div class="col-md-6">',
  '#suffix' => '</div></div>',
  );
  
  $fm_facility_area_type = hcfm_nodenid_nodetitle_by_node_type('fm_facility_area_type');
 $element['config_location_facility_areatype'] = array(
  '#title' => t('Area Type'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_areatype'
    )
  ),
  '#type' => 'select',
  '#options' => $fm_facility_area_type,
  '#multiple' => TRUE, 
  '#empty_option' => t('- Select -'),
  //'#required' => TRUE,
  '#weight' => 5, 
  '#prefix' => '<div class="row"><div class="col-md-6">',
  '#suffix' => '</div>',
  ); 
  
 $element['config_location_facility_ftes'] = array(
  '#type' => 'textfield',
  '#title' => t('Maintenance FTEs'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_ftes'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 6,
  '#prefix' => '<div class="col-md-6">',
  '#suffix' => '</div></div>',
  );
  
 $element['config_location_facility_description'] = array(
  '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_description'
    )
  ),
  '#weight' => 7,
  '#title' => t('Description'),
  '#prefix' => '<div class="row"><div class="col-md-6">',
  '#suffix' => '</div>',
  );
  

  /************************************************************* floor process start *************************************************************/

  //$form_state['cache'] = TRUE;
  if (isset($form_state['option_count'])){      
  $choice_count = $form_state['option_count'];
  }
  else{
  $choice_count =  empty($form_state['option']) ? 0 : count($form_state['option']);
  }
 $element['option_wrapper'] = array(
  '#tree' => FALSE,
  '#weight' => 11,
  //'#prefix' => '<div class="clearfix" id="option-wrapper">',
  //'#suffix' => '</div>',
  );
 /*$element['option_wrapper']['client_options'] = array(
  '#type' => 'select',
  '#title' => 'select option',
  '#attributes' => array(
    'class'=> array(
      'config_location_facility_floornumber_select'
    )
  ),
  '#options' => array('1' => 'floor1' , '2' => 'floor2','3' => 'floor3','4' => 'floor4','5' => 'floor5','6' => 'floor6','7' => 'floor7','8' => 'floor8','9' => 'floor9','10' => 'floor10','11' => 'floor11','12' => 'floor12','13' => 'floor13','14' => 'floor14','15' => 'floor15' ),
  '#weight' => 12,
  '#empty_option' => t('- Select -'),
  //'#prefix' => '<div style="display:none">',
  //'#suffix' => '</div>',
  );*/

 $element['option_wrapper']['option'] = array(
  '#prefix' => '<div id="client-options">',
  '#suffix' => '</div>',
  '#weight' => 13,
  );

  if (isset($form_state['option'])){
  $FLOOR = 0;
  $SF = 0;
  foreach ($form_state['option'] as $chid => $option){
    if ($chid % 2 == 0){
    ++$FLOOR;
    $key = 'floor_' . $FLOOR;
    $element['option_wrapper']['option'][$key] = $option;
    }
    else{
    ++$SF;
    $key = 'sf_' . $SF;
    $element['option_wrapper']['option'][$key] = $option;
    }       
  } 
  }
  $element['config_location_facility_floornumber'] = array(
  '#type' => 'textfield',
  '#title' => t('Number of Floor(s)'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_floornumber'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 8,
  /*'#ajax' => array(
    'callback' => 'facility_floor_process_callback',
    'event' => 'blur',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
  ),*/
  '#prefix' => '<div class="col-md-6 config-location-location-numberoffloor"><div class="relative"><div class="config_location_facility_floornumber_input">',
  '#suffix' => '</div>',
  );
  $element['option_wrapper']['client_more'] = array(
  '#type' => 'submit',
  '#value' => t('Go'),
  '#attributes' => array(
    'title' => t("click here to add more options."),
    'class'=> array(
      'config_location_facility_floornumber_addmore'
    ),
  ),
  '#name' => 'floornumber_addmore',
  '#weight' => 13,
  '#limit_validation_errors' => array(array('option')),
  '#submit' => array('facility_floor_more_option_submit'),
  '#ajax' => array(
    'callback' => 'client_option_js',
    'wrapper' => 'client-options',
    'effect' => 'fade',
    ),
  
  '#suffix' => '</div></div></div>',
  );
 $element['config_location_facility_floor_data'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_floor_data'
    )
  ),  
  //'#value' => array('tt'=>41,'pp'=>44), 
  );
 $element['config_location_facility_sf_data'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_sf_data'
    )
  ),  
  //'#value' => array('tt'=>41,'pp'=>44), 
  );
  /************************************************************* floor process end *************************************************************/
  
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  asort($countryNamesList);
  unset($countryNamesList['US']);
  $countryNamesList1 = array('US'=>'United States')+$countryNamesList;
  $element['config_location_facility_addresscopy'] = array(
  '#type' => 'checkbox',
  '#title' => t('Use the same address as for site'),
  '#attributes' => array(
    'class'=> array(
    'clear-data',
    'config_location_facility_addresscopy',
    'address_copy'
    )
  ),
  '#weight' => 14,
  '#default_value' => 1,
  '#prefix' => '<div class="facilityaddress-outer" style="display:none"><label>Address</label>',
  ); 
 $element['main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('clearfix')),
  '#weight' => 15,
  '#states' => array(
    'visible' => array(
      ':input[name="config_location_facility_addresscopy"]' => array('checked' => FALSE),
    ),
  ),
  //'#prefix' => '<label>Address</label><div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;">',
  //'#suffix' => '</div>',
  );
 $element['main-container']['config_location_facility_country'] = array(
  '#type' => 'select',  
  '#title' => t('Country'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_country'
    )
  ),
  '#options' => $countryNamesList1,
  '#empty_option' => t('- Select -'),
  //'#default_value' => 'US',
  '#prefix' => '<div class="clearfix padding-10 panel panel-default"><div class="row margin-5"><div class="col-md-6 padding-5" style="display:none">',
  '#suffix' => '</div>',
  );
 $element['main-container']['config_location_facility_country_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_country_value'
    )
  ),  
  );
 $element['main-container']['config_location_facility_address1'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address1'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_address1'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',  
  );   
 $element['main-container']['config_location_facility_address2'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address2'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_address2'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',
  );
 $element['main-container']['config_location_facility_city'] = array(
  '#type' => 'textfield', 
  '#title' => t('City'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_city'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  );
  //$administrativeNamesList = addressfield_get_administrative_areas('US');
 $element['main-container']['config_location_facility_state'] = array(
  '#type' => 'select',  
  '#title' => t('State'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_state'
    )
  ),
  '#options' => _get_default_state(),
  '#validate' => TRUE,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>'
  );
 $element['main-container']['config_location_facility_state_key'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_state_key'
    )
  )
  );
 $element['main-container']['config_location_facility_state_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_state_value'
    )
  )
  );    
 $element['main-container']['config_location_facility_zipcode'] = array(
  '#type' => 'textfield', 
  '#title' => t('Zip Code'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_facility_zipcode'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div></div></div>'
  );
 $element['facility_area_type_values'] = array(
    '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'facility_area_type_values'
    )
  ),
  '#prefix' => '<div style="display:none">',
  '#suffix' => '</div>'
  );
  $element['add_ntype'] = array('#type' => 'value', '#value' => 'fm_facility');
  $element['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $element['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
 $element['fm_facility_node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'fm_facility_node_nid'
    )
  ),    
  );
  
 $element['config_location_facility_address'] = array(
  '#type' => 'hidden',
  '#title' => t('Address'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_facility_address'
    )
  ),
  //'#required' => TRUE,
  );
  $element['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),
  '#weight' => 20,  
  );
  $element['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-location-facility">', 
  '#weight' => 21,   
  );
  return $element;
}


function hcfm_config_location_facility_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  //drup_msg($form);
  //drup_msg($form_state);
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_facility');
  if(in_array($values['config_location_facility_title'],$NodeData) && empty($values['fm_facility_node_nid'])){  
  form_set_error ('config_location_facility_title','already exists " '.$values['config_location_facility_title'].' "');
    
  }
  
  if(isset($values['config_location_facility_addresscopy']) && $values['config_location_facility_addresscopy'] == 0 && (empty($values['config_location_facility_address1']) || empty($values['config_location_facility_address2']) || empty($values['config_location_facility_city']) || empty($values['config_location_facility_state']) || empty($values['config_location_facility_zipcode']))){  
  //form_set_error ('config_location_facility_addresscopy','Pleaer fill the Address');  
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_location_facility_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_facility'){
      drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_facility')));
    }
  }
  //
}



function hcfm_config_location_location_form($form,&$form_state){
  global $user, $company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $fm_location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$company->nid,$user->uid);
  $form['get_location_zone'] = array(
    '#type' => 'select',
  '#title'=> 'Select locaton zone',
  '#options' => $fm_location_location,
  //'#default_value' => isset($_GET['cid'])?$_GET['cid']:0,
  '#attributes' => array('class'=> array('form-control locaton-zone-sel')),
  '#empty_option' => t('- Select -'),
  '#ajax' => array(
    'callback'=> 'change_zone_nid_callback',
    'wrapper' => 'location_zone_main_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );  
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-locationlocation hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-locationlocation-link green-round-btn" title="Create New Zone">
      <i class="glyphicon glyphicon-plus"></i> New Zone
      </a>
    </div>';
  $form['#suffix'] = '</div>';  

  $form['#attributes']['class'][] = 'chosentoselectmultiple clearfix';
  //drup_msg($form_state['values']['config_location_pick_facility']);
  $FacilityListObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'node','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('nid'),'OtherId'=>array('equal'=>array('type'=>'fm_facility'))); 
  $FacilityList =  _get_hcfm_db_request($FacilityListObj);


  if(isset($FacilityList) && !empty($FacilityList)){
  $FloorListsObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'IN'=>array('entity_id'=>$FacilityList)));
  $FloorLists =  _get_hcfm_db_request($FloorListsObj);
  }

  
  if(isset($form_state['values'],$form_state['input'],$form_state['triggering_element'],$form_state['triggering_element']['#type'],$form_state['triggering_element']['#name']) && $form_state['triggering_element']['#type']=='select' && $form_state['triggering_element']['#name']=='config_location_pick_facility'){
     //drup_msg($form_state['triggering_element']['#value']);
     
   $facilityNid = $form_state['values']['config_location_pick_facility'];
  $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$form_state['triggering_element']['#value'])));
  $TableData11 =  _get_hcfm_db_request($NodeObj11);
  $floorOption = array_flip($TableData11);
  if(!empty($floorOption)){
    $form_state['config_location_location_numberoffloor'] = $floorOption;
  }
  else{
    $form_state['config_location_location_numberoffloor'] = array('none'=>'none');
  }
  }
  
  if(empty($form_state['config_location_location_numberoffloor'])){
    $form_state['config_location_location_numberoffloor'] = array_flip($FloorLists);
  }

  
  
  if(empty($form_state['location_option_wrapper']['location_option'])){
    $form_state['location_option_wrapper']['location_option'] = '';
  }
  $form['main_container_main'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('location-location-container-section')),
    '#prefix' => '<div class="locationlocation-create-container margin-bottom-10">', 
    '#suffix' => '</div>',
    '#process' => array('hcfm_config_location_location_container_process'),
  );  
  $header = array('Zone Name','Description','Facility Name','Site Name','Region Name','Action'); 
  $table_data = hcfm_table_content($user->uid,$company->nid,'fm_location_location',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  '#weight' => 22,
  );
  return $form;
}
function change_zone_nid_callback($form,&$form_state){
  ctools_include('ajax');
 
  $commands = array();
  $triggeringElement = $form_state['triggering_element'];  
  if($form_state['triggering_element']['#name'] == 'get_location_zone') {
  $NodeType = $form_state['values']['add_ntype'];
  $NodeNid = $form_state['values']['get_location_zone'];
  //config location location
  
  if($NodeType == 'fm_location_location' && $NodeNid && !empty($NodeNid)){    
    $query= db_select('node', 'n');
      $query->leftjoin('field_data_field_location_facility' ,'flr', 'flr.entity_id=n.nid');      
    $query->leftjoin('field_data_field_location_description' ,'ffnof', 'ffnof.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_room_number' ,'ffft', 'ffft.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_department' ,'ffty', 'ffty.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_zone_address' ,'fla' ,'fla.entity_id=n.nid');
    $query->leftjoin('field_data_field_location_floor_count' ,'flfco' ,'flfco.entity_id=n.nid');
    
    $query->leftjoin('field_data_field_use_same_address_facility' ,'fusafa' ,'fusafa.entity_id=n.nid');
    
    $query->fields('n',array('nid','title'));
    $query->fields('ffft',array('field_location_room_number_value'));
    $query->fields('ffty',array('field_location_department_target_id'));    
    $query->fields('flr',array('field_location_facility_target_id'));
    $query->fields('ffnof',array('field_location_description_value'));
    $query->fields('flfco',array('field_location_floor_count_value'));
    $query->fields('fusafa',array('field_use_same_address_facility_value'));
    $query->fields('fla',array('field_location_zone_address_country','field_location_zone_address_thoroughfare','field_location_zone_address_premise','field_location_zone_address_locality','field_location_zone_address_administrative_area','field_location_zone_address_postal_code'));
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();
    
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'val',array($CData[0]->field_location_facility_target_id));
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("select.config_location_location_numberoffloor", 'trigger',array('change'));  
   // $commands[] = ajax_command_invoke("input.config_location_location_numberoffloor", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_location_title", 'val',array($CData[0]->title)); 
    $commands[] = ajax_command_invoke("input.config_location_zone_description", 'val',array($CData[0]->field_location_description_value));    
    $commands[] = ajax_command_invoke("input.config_location_location_roomnumber", 'val',array($CData[0]->field_location_room_number_value));
    $commands[] = ajax_command_invoke("select.config_location_department_number",  'val',array($CData[0]->field_location_department_target_id));    
    //$commands[] = ajax_command_invoke("input.config_location_location_address",  'val',array($CData[0]->title));  
    if(isset($CData[0]->field_location_floor_count_value) && !empty($CData[0]->field_location_floor_count_value)){
      //$commands[] = ajax_command_invoke("select.config_location_location_floornumber_select", 'val',array($CData[0]->field_location_floor_count_value));
     // $commands[] = ajax_command_invoke("input.config_location_location_floornumber_addmore", 'trigger',array('mousedown'));
    }
    
    $FloorListsObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_floors','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_floors_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'equal'=>array('entity_id'=>$NodeNid)));
    $FloorLists =  _get_hcfm_db_request($FloorListsObj);
  
    $commands[] = ajax_command_invoke("input.location_location_numberoffloor_values", 'val',array($FloorLists));
    
    
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'val',array($CData[0]->field_location_zone_address_country));
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'trigger',array('change'));
    //$commands[] = ajax_command_invoke("input.config_location_location_country_value", 'val',array($CData[0]->title));
   /* $commands[] = ajax_command_invoke("input.config_location_location_address1", 'val',array($CData[0]->field_location_zone_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_location_address2", 'val',array($CData[0]->field_location_zone_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_location_city", 'val',array($CData[0]->field_location_zone_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array($CData[0]->field_location_zone_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_location_state_key", 'val',array($CData[0]->field_location_zone_address_administrative_area));
    //$commands[] = ajax_command_invoke("input.config_location_location_state_value", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_location_location_zipcode", 'val',array($CData[0]->field_location_zone_address_postal_code));*/
    
    
    if(isset($CData[0]->field_location_facility_target_id) && !empty($CData[0]->field_location_facility_target_id)){
    $commands[] = ajax_command_invoke(".zoneaddress-outer",'show'); 
    }else{
      $commands[] = ajax_command_invoke(".zoneaddress-outer",'hide');
    }
    
    
    
    if(isset($CData[0]->field_use_same_address_facility_value) && $CData[0]->field_use_same_address_facility_value == 1){
    //$commands[] = ajax_command_invoke("input.config_location_site_addresscopy", 'trigger',array('checked'));
    $commands[] = ajax_command_invoke("input.config_location_location_addresscopy", 'attr', array('checked',TRUE));
    $commands[] = ajax_command_invoke("input.config_location_location_addresscopy", 'trigger',array('change'));
    
    
    
    $commands[] = ajax_command_invoke("input.config_location_location_address1", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_address2", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_city", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_state_key", 'val',array(''));  
    $commands[] = ajax_command_invoke("input.config_location_location_zipcode", 'val',array(''));
    
    
    }else if(isset($CData[0]->field_use_same_address_facility_value) && $CData[0]->field_use_same_address_facility_value == 0 || empty($CData[0]->field_use_same_address_facility_value)){
     $commands[] = ajax_command_invoke("input.config_location_location_addresscopy", 'removeAttr', array('checked')); 
     $commands[] = ajax_command_invoke("input.config_location_location_addresscopy", 'trigger',array('change'));
     
     
     
    $commands[] = ajax_command_invoke("input.config_location_location_address1", 'val',array($CData[0]->field_location_zone_address_thoroughfare));
    $commands[] = ajax_command_invoke("input.config_location_location_address2", 'val',array($CData[0]->field_location_zone_address_premise));
    $commands[] = ajax_command_invoke("input.config_location_location_city", 'val',array($CData[0]->field_location_zone_address_locality));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array($CData[0]->field_location_zone_address_administrative_area));
    $commands[] = ajax_command_invoke("input.config_location_location_state_key", 'val',array($CData[0]->field_location_zone_address_administrative_area));  
    $commands[] = ajax_command_invoke("input.config_location_location_zipcode", 'val',array($CData[0]->field_location_zone_address_postal_code));
    }
    
    
    
    
    
    
    
    $commands[] = ajax_command_invoke("input.fm_location_location_node_nid", 'val',array($CData[0]->nid));  
    
        
  }
  else{
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_pick_facility", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.config_location_location_title", 'val',array('')); 
    $commands[] = ajax_command_invoke("input.config_location_zone_description", 'val',array(''));   
    $commands[] = ajax_command_invoke("input.config_location_location_roomnumber", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_department_number",  'val',array(''));  
    $commands[] = ajax_command_invoke("input.location_location_numberoffloor_values", 'val',array(''));   
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'trigger',array('change'));
    $commands[] = ajax_command_invoke("input.config_location_location_address1", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_address2", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_city", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_state_key", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_zipcode", 'val',array(''));
    $commands[] = ajax_command_invoke("input.fm_location_location_node_nid", 'val',array(''));
  }
  
  }  
  return array('#type' => 'ajax', '#commands' => $commands);
}

function hcfm_config_location_location_container_process($element, &$form_state){ //drup_msg($form_state['location_option']);
   global $user,$company;
  $locationFacility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$company->nid,$user->uid);
  if(isset($_SESSION['location_pick_facility_nid']) && !empty($_SESSION['location_pick_facility_nid'])){
    $location_pick_facility_nid = $_SESSION['location_pick_facility_nid'];
  }    
  $element['config_location_pick_facility'] = array(
  '#type' => 'select',
  '#options' => $locationFacility,
  '#empty_option' => t('- Select -'),
  '#title' => t('Facility'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_pick_facility'
    )
  ),
  '#ajax' => array(
    'callback' => 'location_facility_process_callback',
    'event' => 'change',
    'wrapper' => 'workflow-container-section-floor',
    'method' => 'replace',
    'effect' => 'fade',
  ),
  '#required' => TRUE,
  '#weight' => 0,
  '#prefix' => '<div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  );
  
  $element['config_location_location_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Zone Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_title'
    )
  ),
  '#required' => TRUE,
  '#weight' => 1,
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div><div class="col-md-4 config-location-location-numberoffloor"><div class="relative">',
  );
  
  $NodeObj10 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'node','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('nid'),'OtherId'=>array('equal'=>array('type'=>'fm_facility'))); 
  $TableData10 =  _get_hcfm_db_request($NodeObj10);


  if(isset($TableData10) && !empty($TableData10)){
  $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'IN'=>array('entity_id'=>$TableData10)));
  $TableData11 =  _get_hcfm_db_request($NodeObj11 );
  }

  
   /*$element['config_location_location_numberoffloor_btn1'] = array(
    '#prefix' => '<div class="col-md-4 config-location-location-numberoffloor"><div class="relative">',
  '#weight' => 2,
  );*/
  
  $element['config_location_location_numberoffloor'] = array(
  '#title' => t('Floor(s)'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_numberoffloor'
    )
  ),
  //'#required' => TRUE,
  '#type' => 'select',
  '#options' => isset($form_state['config_location_location_numberoffloor'])?$form_state['config_location_location_numberoffloor']:$TableData11,
  //'#empty_option' => t('- Select -'),
  '#weight' => 2,
  '#validated' => TRUE,
  '#multiple' => TRUE,
  /*'#ajax' => array(
    'callback' => 'location_floor_process_callback',
    'event' => 'change',
    'wrapper' => 'workflow-container-section',
    'method' => 'fade',
    'effect' => 'change',
  ),*/
  //'#prefix' => '<div class="location_location_numberoffloor_outer"><div class="col-md-3" id="config-location-location-numberoffloor">',
  //'#suffix' => '</div><div class="col-md-1">'.l('<input type="button" value="Go" class="config_location_numberoffloor_btn" />', 'javascript:void(0);', array('html' => TRUE, 'external' => TRUE, 'attributes' => array('class' => array('numberoffloor_btn')))).'</div></div></div>',
  '#prefix' => '<div id="config-location-location-numberoffloor">',
  '#suffix' => '</div>',
  );
  
  
  $element['config_location_location_numberoffloor_btn2'] = array(
    '#markup' =>l('<input type="button" value="Go" class="btn btn-primary config_location_numberoffloor_btn" />', 'javascript:void(0);', array('html' => TRUE, 'external' => TRUE, 'attributes' => array('class' => array('numberoffloor_btn')))),
  //'#suffix' => '<div class="">',
  '#suffix' => '</div></div></div>',
  '#weight' => 3,
  );
  
  
  
  
  $element['location_location_numberoffloor_values'] = array(
    '#type' => 'textfield',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'location_location_numberoffloor_values'
    )
  ),
  '#prefix' => '<div style="display:none">',
  '#suffix' => '</div>'
  );
  $element['config_location_zone_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Zone Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_zone_description'
    )
  ),
  //'#default_value' => isset($form['faclitynode_nid']['#value'])?$form['faclitynode_nid']['#value']:'',
  //'#required' => TRUE,
  '#weight' => 4,
  '#prefix' => '<div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  );
  $element['config_location_location_roomnumber'] = array(
  '#type' => 'textfield',
  '#title' => t('Room Number'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_roomnumber'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 5,
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  );
  $fm_account_number = hcfm_nodenid_nodetitle_by_node_type('fm_account_number',$company->nid,$user->uid);
  $element['config_location_department_number'] = array(
  '#type' => 'select',
  '#options' => $fm_account_number,
  '#empty_option' => t('- Select -'),
  '#title' => t('Department'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_department_number'
    )
  ),
  //'#required' => TRUE,
  '#weight' => 6,
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div>',
  );
  
  
  
    /************************************************************* floor process start *************************************************************/ 

  //$form_state['cache'] = TRUE;
  if (isset($form_state['location_option_count'])){     
  $choice_count = $form_state['location_option_count'];
  }
  else{
  $choice_count =  empty($form_state['location_option']) ? 0 : count($form_state['location_option']);
  }
  $element['location_option_wrapper'] = array(
  '#tree' => FALSE,
  '#weight' => 11,
  '#prefix' => '<div class="clearfix" id="location-option-wrapper">',
  '#suffix' => '</div>',
  );
  $element['location_option_wrapper']['location_client_options'] = array(
  '#type' => 'select',
  '#title' => 'select option',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_floornumber_select'
    )
  ),
  '#options' => array('1' => 'floor1' , '2' => 'floor2','3' => 'floor3','4' => 'floor4','5' => 'floor5','6' => 'floor6','7' => 'floor7','8' => 'floor8','9' => 'floor9','10' => 'floor10','11' => 'floor11','12' => 'floor12','13' => 'floor13','14' => 'floor14','15' => 'floor15','floor'=>'floor' ),
  '#weight' => 12,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div style="display:none">',
  '#suffix' => '</div>',
  );

  $element['location_option_wrapper']['location_option'] = array(
  '#prefix' => '<div id="location-client-options">',
  '#suffix' => '</div>',
  '#weight' => 13,
  );
//drup_msg($form_state['location_option']);
  if (isset($form_state['location_option'])){
  $FLOOR = 0;
  $SF = 0;
  $FLOORRATIO = 0;
  $floorratiovalue =0;
  foreach ($form_state['location_option'] as $chid => $option){
    if ($chid % 4 == 0){
    ++$FLOOR;
    $key = 'floor_' . $FLOOR;
    $element['location_option_wrapper']['location_option'][$key] = $option;
    }
    else if ($chid % 4 == 1){
    ++$SF;
    $key = 'sf_' . $SF;
    $element['location_option_wrapper']['location_option'][$key] = $option;
    }
    else if ($chid % 4 == 2){
    ++$floorratiovalue;
    $key = 'floorratiovalue_' . $floorratiovalue;
    $element['location_option_wrapper']['location_option'][$key] = $option;
    } 
    else if ($chid % 4 == 3){
    ++$FLOORRATIO;
    $key = 'floorratio_' . $FLOORRATIO;
    $element['location_option_wrapper']['location_option'][$key] = $option;
    }       
  } 
  }
//$element['location_option_wrapper']['location_option'] = '';
  $element['location_option_wrapper']['location_client_more'] = array(
  '#type' => 'submit',
  '#value' => t('Add options'),
  '#attributes' => array(
    'title' => t("click here to add more options."),
    'class'=> array(
      'config_location_location_floornumber_addmore'
    ),
  ),
  '#name' => 'location_floornumber_addmore',
  '#weight' => 13,
  '#limit_validation_errors' => array(array('option')),
  '#submit' => array('location_floor_more_option_submit'),
  '#ajax' => array(
    'callback' => 'location_client_option_js',
    'wrapper' => 'location-client-options',
    'effect' => 'fade',
    ),
  '#prefix' => '<div style="display:none">',
  '#suffix' => '</div>',
  );
  $element['config_location_location_floor_data'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_floor_data'
    )
  ),  
  //'#value' => array('tt'=>41,'pp'=>44), 
  );
  $element['config_location_location_sf_data'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_sf_data'
    )
  ),  
  //'#value' => array('tt'=>41,'pp'=>44), 
  );
  /************************************************************* floor process end *************************************************************/
  
  
  
  
  
  
  
  
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  asort($countryNamesList);
  unset($countryNamesList['US']);
  $countryNamesList1 = array('US'=>'United States')+$countryNamesList;
  $element['config_location_location_addresscopy'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use the same address as for facility'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_addresscopy',
    'address_copy'
    )
  ),
  '#weight' => 14,
  '#default_value' => 1,
  '#prefix' => '<div class="zoneaddress-outer" style="display:none"><label>Address</label>',
  );
  $element['main-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('clearfix')),
  '#weight' => 15,
  '#states' => array(
    'visible' => array(
      ':input[name="config_location_location_addresscopy"]' => array('checked' => FALSE),
    ),
  ),
  //'#prefix' => '<label>Address</label><div class="project-details-border margin-bottom-10" style="border:1px solid;padding:5px;">',
  //'#suffix' => '</div>',
  );
  $element['main-container']['config_location_location_country'] = array(
  '#type' => 'select',  
  '#title' => t('Country'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_country'
    )
  ),
  '#options' => $countryNamesList1,
  '#empty_option' => t('- Select -'),
  //'#default_value' => 'US',
  '#prefix' => '<div class="clearfix padding-10 panel panel-default"><div class="row margin-5"><div class="col-md-6 padding-5" style="display:none">',
  '#suffix' => '</div>',
  );
  $element['main-container']['config_location_location_country_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_country_value'
    )
  ),  
  );
  $element['main-container']['config_location_location_address1'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address1'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_address1'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',  
  );   
  $element['main-container']['config_location_location_address2'] = array(
  '#type' => 'textfield', 
  '#title' => t('Address2'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_address2'
    )
  ),
  '#prefix' => '<div class="col-md-12">',
  '#suffix' => '</div>',
  );
  $element['main-container']['config_location_location_city'] = array(
  '#type' => 'textfield', 
  '#title' => t('City'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_city'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>',
  );
 // $administrativeNamesList = addressfield_get_administrative_areas('US');
  $element['main-container']['config_location_location_state'] = array(
  '#type' => 'select',  
  '#title' => t('State'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_state'
    )
  ),
  '#options' => _get_default_state(),
  '#validate' => TRUE,
  '#empty_option' => t('- Select -'),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>'
  );
  $element['main-container']['config_location_location_state_key'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_state_key'
    )
  )
  );
  $element['main-container']['config_location_location_state_value'] = array(
  '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_state_value'
    )
  )
  );  
  $element['main-container']['config_location_location_zipcode'] = array(
  '#type' => 'textfield', 
  '#title' => t('Zip Code'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_zipcode'
    )
  ),
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div></div></div>'
  );
  $element['add_ntype'] = array('#type' => 'value', '#value' => 'fm_location_location');
  $element['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $element['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $element['fm_location_location_node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'fm_location_location_node_nid'
    )
  ),    
  ); 
  
  $element['config_location_location_address'] = array(
  '#type' => 'hidden',
  '#title' => t('Address'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_location_location_address'
    )
  ),
  //'#required' => TRUE,
  ); 
  $element['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  '#weight' => 20,
  );
  $element['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-location-location">', 
  '#weight' => 21,   
  );
   
  return $element;
}

function hcfm_config_location_location_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  //drup_msg($form);
  //pre($form_state,1); 
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_location_location');
  if(in_array($values['config_location_location_title'],$NodeData) && empty($values['fm_location_location_node_nid'])){  
  form_set_error ('config_location_location_title','already exists " '.$values['config_location_location_title'].' "');
    
  }
  
  if(isset($values['config_location_location_addresscopy']) && $values['config_location_location_addresscopy'] == 0 && (empty($values['config_location_location_address1']) || empty($values['config_location_location_address2']) || empty($values['config_location_location_city']) || empty($values['config_location_location_state']) || empty($values['config_location_location_zipcode']))){  
  form_set_error ('config_location_location_addresscopy','Pleaer fill the Address');  
  }
  
  
  if ($form_state['triggering_element']['#value'] == 'Save' && (empty($values['config_location_location_title']) || empty($values['config_location_pick_facility']))) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_location_location'){
    drupal_goto($redirect, array('query'=>array('configlocationactivetab'=>'config_location_location')));
    }
  }
}

function hcfm_config_workorder_tab(){
  $woproblemcode = drupal_get_form('hcfm_config_workorder_problemcode_form');
  $wotype = drupal_get_form('hcfm_config_workorder_type_form');
  $wostatus = drupal_get_form('hcfm_config_workorder_status_form');
  $woskill = drupal_get_form('hcfm_config_workorder_skill_form');
  $wopriorty = drupal_get_form('hcfm_config_workorder_priorty_form');
  $wospecialtag = drupal_get_form('hcfm_config_workorder_special_tag_form');
  $woneededpermit = drupal_get_form('hcfm_config_workorder_needed_permit_form');
  $elements['container_tab'] = array(
    '#markup' => 
    '
      <div class="hcfm-workorder-container-tab company-prequal-fields">
      
      <!-- Nav tabs -->
      <ul class="nav nav-tabs" role="tablist">
        
        <li role="presentation" class="active config_workorder_problemcode"><a href="#woproblemcode" aria-controls="woproblemcode" role="tab" data-toggle="tab">Problem Code</a></li>
        <li role="presentation" class="config_workorder_type"><a href="#wotype" aria-controls="wotype" role="tab" data-toggle="tab">Type</a></li>
        <li role="presentation" class="config_workorder_status"><a href="#wostatus" aria-controls="wostatus" role="tab" data-toggle="tab">Status</a></li>       
        <li role="presentation" class="config_workorder_skill"><a href="#woskill" aria-controls="woskill" role="tab" data-toggle="tab">Skill</a></li>
        <li role="presentation" class="config_workorder_priorty"><a href="#wopriorty" aria-controls="wopriorty" role="tab" data-toggle="tab">Priority</a></li>  
        <li role="presentation" class="config_workorder_specialtag"><a href="#wospecialtag" aria-controls="wospecialtag" role="tab" data-toggle="tab">Special Tag</a></li>
        <li role="presentation" class="config_workorder_neededpermit"><a href="#woneededpermit" aria-controls="woneededpermit" role="tab" data-toggle="tab">Needed Permit</a></li>
        
      </ul>
      
      <!-- Tab panes -->
      <div class="tab-content">      
        <div role="tabpanel" class="tab-pane active workorder_problemcode" id="woproblemcode">'.drupal_render($woproblemcode).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_type" id="wotype">'.drupal_render($wotype).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_status" id="wostatus">'.drupal_render($wostatus).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_skill" id="woskill">'.drupal_render($woskill).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_priorty" id="wopriorty">'.drupal_render($wopriorty).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_specialtag" id="wospecialtag">'.drupal_render($wospecialtag).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_neededpermit" id="woneededpermit">'.drupal_render($woneededpermit).'</div>
      </div>      
      </div>' 
  );
  return $elements;
}

function hcfm_config_workorder_problemcode_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-woproblemcode hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-woproblemcode-link green-round-btn" title="Create New Problem Code">
      <i class="glyphicon glyphicon-plus"></i> New Problem Code
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="woproblemcode-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_problemcode_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Problem Code Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_problemcode_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_problemcode_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Problem Code Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_problemcode_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_problem_code');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-problemcode">',    
  );
  $header = array('Problem Code Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_problem_code',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_problemcode_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_problem_code');
  if(in_array($values['config_wo_problemcode_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_problemcode_title','already exists " '.$values['config_wo_problemcode_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_problemcode_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_problem_code'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_problemcode')));
    }
  }
}

function hcfm_config_workorder_type_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-wotype hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-wotype-link green-round-btn" title="Create New Work Order Type">
      <i class="glyphicon glyphicon-plus"></i> New Work Order Type
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="wotype-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_type_title'] = array(

  '#type' => 'textfield',
  '#title' => t('Work Order Type Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_type_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_type_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Type Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_type_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_work_order_type');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-type">',    
  );
  $header = array('Work Order Type Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_work_order_type',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_type_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_work_order_type');
  if(in_array($values['config_wo_type_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_type_title','already exists " '.$values['config_wo_type_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_type_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_work_order_type'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_type')));
    }
  }
}

function hcfm_config_workorder_status_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-wostatus hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-wostatus-link green-round-btn" title="Create New Work Order Status">
      <i class="glyphicon glyphicon-plus"></i> New Work Order Status
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="wostatus-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_status_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Status Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_status_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_status_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Status Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_status_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_work_order_status');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-status">',    
  );
  $header = array('Work Order Status Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_work_order_status',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_status_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_work_order_status');
  if(in_array($values['config_wo_status_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_status_title','already exists " '.$values['config_wo_status_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_status_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_work_order_status'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_status')));
    }
  }
}

function hcfm_config_workorder_skill_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-woskill hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-woskill-link green-round-btn" title="Create New Work Order Skill">
      <i class="glyphicon glyphicon-plus"></i> New Work Order Skill
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="woskill-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_skill_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Skill Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_skill_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_skill_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Skill Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_skill_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_skill');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-skill">',    
  );
  $header = array('Work Order Skill Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_skill',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_skill_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_skill');
  if(in_array($values['config_wo_skill_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_skill_title','already exists " '.$values['config_wo_skill_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_skill_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_skill'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_skill')));
    }
  }
}

function hcfm_config_workorder_priorty_form($form,&$form_state){
  global $user,$company;
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-wopriorty hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-wopriorty-link green-round-btn" title="Create New Work Order Priority">
      <i class="glyphicon glyphicon-plus"></i> New Work Order Priority
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="wopriorty-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_priorty_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Priority Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_priorty_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_priorty_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Work Order Priority Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_priorty_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_priorty');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-priorty">',    
  );
  $header = array('Work Order Priority Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_priorty',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_priorty_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_priorty');
  if(in_array($values['config_wo_priorty_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_priorty_title','already exists " '.$values['config_wo_priorty_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_priorty_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_priorty'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_priorty')));
    }
  }
}

function hcfm_config_workorder_special_tag_form($form,&$form_state){
  //drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  //drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css'); 
 /* $fm_work_order = hcfm_nodenid_nodetitle_by_node_type('fm_special_tag',$company->nid,$user->uid);
  $form['get_specialtag'] = array(
    '#type' => 'select',
  '#title'=> 'Select special tag',
  '#options' => $fm_work_order,
  //'#default_value' => isset($_GET['cid'])?$_GET['cid']:0,
  '#attributes' => array('class'=> array('form-control specialtag-sel')),
  '#empty_option' => t('- Select -'),
  '#ajax' => array(
    'callback'=> 'change_special_tag_nid_callback',
    'wrapper' => 'special_tag_main_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );*/
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-specialtag hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-specialtag-link green-round-btn" title="Create New Special Tag">
      <i class="glyphicon glyphicon-plus"></i> New Special Tag
      </a>
    </div>';
  $form['#suffix'] = '</div>';  
  $form['#attributes']['class'][] = 'chosentoselectmultiple clearfix';
  $form['main_container_main'] = array(
  '#type' => 'container',
  '#attributes' => array('class'=>array('specialtag-container-section')),
  '#prefix' => '<div class="specialtag-create-container padding-10">', 
  '#suffix' => '</div>',
  '#process' => array('hcfm_special_tag_add_container_process'),
  );  
  
  
  $header = array('Special Tag Name','Description','Action');  
  $table_data = hcfm_table_content(0,0,'fm_special_tag',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_special_tag_add_container_process($element, &$form_state){
  global $user, $company;
  $element['config_wo_special_tag_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Special Tag Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_special_tag_title'
    )
  ),
  '#required' => TRUE,
  );
  $element['config_wo_special_tag_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Special Tag Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_special_tag_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $element['add_ntype'] = array('#type' => 'value', '#value' => 'fm_special_tag');
  $element['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $element['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $element['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $element['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $element['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-special-tag">',    
  );
  return $element;
}

function hcfm_config_workorder_special_tag_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_special_tag');
  if(in_array($values['config_wo_special_tag_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_special_tag_title','already exists " '.$values['config_wo_special_tag_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_special_tag_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_special_tag'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_specialtag')));
    }
  }
}

function hcfm_config_workorder_needed_permit_form($form,&$form_state){
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
/*  $fm_work_order = hcfm_nodenid_nodetitle_by_node_type('fm_needed_permit',$company->nid,$user->uid);
  $form['get_neededpermit'] = array(
    '#type' => 'select',
  '#title'=> 'Select needed permit',
  '#options' => $fm_work_order,
  //'#default_value' => isset($_GET['cid'])?$_GET['cid']:0,
  '#attributes' => array('class'=> array('form-control neededpermit-sel')),
  '#empty_option' => t('- Select -'),
  '#ajax' => array(
    'callback'=> 'change_needed_permit_nid_callback',
    'wrapper' => 'needed_permit_main_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );*/
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-neededpermit hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-neededpermit-link green-round-btn" title="Create New Needed Permit">
      <i class="glyphicon glyphicon-plus"></i> New Needed Permit
      </a>
    </div>';
  $form['#suffix'] = '</div>';  
  $form['#attributes']['class'][] = 'chosentoselectmultiple clearfix';
  $form['main_container_main'] = array(
  '#type' => 'container',
  '#attributes' => array('class'=>array('neededpermit-container-section')),
  '#prefix' => '<div class="neededpermit-create-container padding-10">', 
  '#suffix' => '</div>',
  '#process' => array('hcfm_needed_permit_add_container_process'),
  );  
  
  
  $header = array('Needed Permit Name','Description','Action');  
  $table_data = hcfm_table_content(0,0,'fm_needed_permit',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  );
  return $form;
}

function hcfm_needed_permit_add_container_process($element, &$form_state){
  global $user, $company;
  $element['config_wo_needed_permit_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Needed Permit Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_needed_permit_title'
    )
  ),
  '#required' => TRUE,
  );
  $element['config_wo_needed_permit_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Needed Permit Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_needed_permit_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $element['add_ntype'] = array('#type' => 'value', '#value' => 'fm_needed_permit');
  $element['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $element['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $element['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $element['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $element['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-needed-permit">',    
  );
  return $element;
}

function hcfm_config_workorder_needed_permit_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_needed_permit');
  if(in_array($values['config_wo_needed_permit_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_needed_permit_title','already exists " '.$values['config_wo_needed_permit_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_needed_permit_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_special_tag'){
      drupal_goto($redirect, array('query'=>array('configwoactivetab'=>'config_workorder_neededpermit')));
    }
  }
}
function hcfm_config_resources_tab(){
  $woresource = drupal_get_form('hcfm_config_workorder_resource_form');
  $preferredvendors = drupal_get_form('hcfm_config_workorder_preferred_vendors_form');
  $elements['container_tab'] = array(
    '#markup' => 
    '
      <div class="hcfm-resources-container-tab company-prequal-fields">
      
      <!-- Nav tabs -->
      <ul class="nav nav-tabs" role="tablist">
        
        <li role="presentation" class="active config_workorder_resource"><a href="#woresource" aria-controls="woresource" role="tab" data-toggle="tab">Internal Resources</a></li>
        <li role="presentation" class="config_workorder_preferredvendors"><a href="#preferredvendors" aria-controls="preferredvendors" role="tab" data-toggle="tab">Outside Vendor</a></li>
      </ul>
      
      <!-- Tab panes -->
      <div class="tab-content">
        <div role="tabpanel" class="tab-pane active config_workorder_resource" id="woresource">'.drupal_render($woresource).'</div>
        <div role="tabpanel" class="tab-pane config_workorder_preferredvendors" id="preferredvendors">'.drupal_render($preferredvendors).'</div>
      </div>      
      </div>' 
  );
  return $elements;
}

function hcfm_config_workorder_resource_form($form,&$form_state){
  global $user,$company;
  //drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  //drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-woresource hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-woresource-link green-round-btn" title="Create New Work Order Resource">
      <i class="glyphicon glyphicon-plus"></i> New Work Order Resource
      </a>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'clearfix'; 
  $form['main-container']= array(
    '#type' => 'container', 
  '#prefix' => '<div class="woresource-create-container margin-bottom-10">',
  '#suffix' => '</div>',
  );
  $form['main-container']['config_wo_resource_title'] = array(
  '#type' => 'textfield',
  '#title' => t('Resource Name'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_resource_title'
    )
  ),
  '#required' => TRUE,
  );
  $form['main-container']['config_wo_resource_description'] = array(
  '#type' => 'textfield',
  '#title' => t('Resource Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_wo_resource_description'
    )
  ),
  //'#required' => TRUE,
  );
  
  $form['add_ntype'] = array('#type' => 'value', '#value' => 'fm_resource');
  $form['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $form['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $form['main-container']['node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'node-nid'
    )
  ),    
  );  
  $form['main-container']['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),  
  );
  $form['main-container']['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-wo-resource">',    
  );
  $header = array('Resource Name','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_resource',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function hcfm_config_workorder_resource_form_validate($form,&$form_state){
  $values = $form_state ['values'];
  $NodeData = hcfm_nodenid_nodetitle_by_node_type('fm_resource');
  if(in_array($values['config_wo_resource_title'],$NodeData) && empty($values['node_nid'])){  
  form_set_error ('config_wo_resource_title','already exists " '.$values['config_wo_resource_title'].' "'); 
  }
  if ($form_state['triggering_element']['#value'] == 'Save' && empty($values['config_wo_resource_title'])) {
    $redirect = '/hcfm/add/configure';
    if($values['add_ntype'] == 'fm_resource'){
      drupal_goto($redirect, array('query'=>array('configresourceactivetab'=>'config_workorder_resource')));
    }
  }
}

function hcfm_config_workorder_preferred_vendors_form($form,&$form_state){
  global $user,$company;
  $form['#attributes']['class'][] = 'select2style chosentoselectmultiple clearfix multipal-checkbox';  
  $fm_preferred_vendor = hcfm_nodenid_nodetitle_by_node_type('fm_preferred_vendor',$company->nid,$user->uid);
  $form['get_preferred_vendor'] = array(
    '#type' => 'select',
  '#title'=> 'Select preferred vendor',
  '#options' => $fm_preferred_vendor,
  //'#default_value' => isset($_GET['cid'])?$_GET['cid']:0,
  '#attributes' => array('class'=> array('form-control preferred-vendor-sel')),
  '#empty_option' => t('- Select -'),
  '#ajax' => array(
    'callback'=> 'change_preferred_vendor_nid_callback',
    'wrapper' => 'preferred_vendor_main_container',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix" style="display:none;"><div class="pull-left form-inline">',
  '#suffix' => '</div></div>',
  );  
  $form['#prefix'] = '
    <div class="clearfix relative">
      <div class="new-preferredvendor hcfm-add-new-btn">
      <a href="javascript:void(0);" class="new-preferredvendor-link green-round-btn" title="Create New Preferred Vendor">
      <i class="glyphicon glyphicon-plus"></i> New Preferred Vendor
      </a>
    </div>';
  $form['#suffix'] = '</div>'; 
  //$form_state['asset_cat_m6_storage'] = array();  
  
  
  /*drup_msg('form start');
  drup_msg($form_state['input']);
  drup_msg($form_state['values']);
  drup_msg($form_state['triggering_element']);
  drup_msg($form_state['asset_cat_m6_storage']);
  drup_msg('form end');*/
  //drup_msg($form_state['asset_cat_m6_storage']);
  //drup_msg($form_state['asset_cat_m6_storage_value']);
   //drup_msg($form_state);
  //if(isset($form_state['asset_cat_m6_storage']) && !empty($form_state['asset_cat_m6_storage'])){ 
     if(isset($form_state['triggering_element'],$form_state['triggering_element']['#ajax']) && $form_state['triggering_element']['#type']=='select' && $form_state['triggering_element']['#ajax']['callback']=='vendor_company_process_callback'){
     
     //drup_msg($form_state['values']);
     $form_state['config_preferred_vendors_user'] = array();
     foreach($form_state['asset_cat_m6_storage'] as $unikey=>$uniValue ){
         $ComNid = $form_state['values']['vander'][$uniValue]['config_preferred_vendors_company'];//$form_state['triggering_element']['#value'];
     //drup_msg($ComNid);
     $pvcuids = _get_user_mappping_by_group_company_nid($ComNid);
     //drup_msg($pvcuids);
     //$form_state['values']['vander'][$uniValue]['config_preferred_vendors_user']['#options'] = $pvcuids;
     $form_state['config_preferred_vendors_user'][]= array($uniValue => $pvcuids);
     }   
    }
  //}
  
  
  //drup_msg($form_state['config_preferred_vendors_user']);
  if(isset($form_state['triggering_element'],$form_state['triggering_element']['#ajax']) && $form_state['triggering_element']['#type']=='select' && $form_state['triggering_element']['#ajax']['callback']=='change_preferred_vendor_nid_callback'){
   // drup_msg($form_state['triggering_element']);
  $getNodnid = $form_state['triggering_element']['#value'];
  if(isset($getNodnid) && !empty($getNodnid) && is_numeric($getNodnid)){

    $query2= db_select('field_data_field_pref_vendor_com_users', 'ffft');
    $query2->fields('ffft',array('field_pref_vendor_com_users_value'));   
    $query2->condition('ffft.entity_id', $getNodnid , '=');
    $query2->condition('ffft.bundle','fm_preferred_vendor', '=');
    $CData2= $query2->execute()->fetchAll();
    if(isset($CData2) && !empty($CData2)){
    $form_state['asset_cat_m6_storage'] = array();  
    foreach($CData2 as $key=>$value){
      $dataDecode =  json_decode($value->field_pref_vendor_com_users_value,TRUE);
      $tempIdentifer = uniqid();
      $form_state['asset_cat_m6_storage'][]  = $tempIdentifer;
      $form_state['asset_cat_m6_storage_value'][$tempIdentifer] = array(
          'vendors_company' => $dataDecode['company'],
            'vendors_users' => $dataDecode['users'],
          );    
    }
    }
    }
  }
  if(isset($form_state['triggering_element'],$form_state['triggering_element']['#ajax']) && $form_state['triggering_element']['#type']=='select' && $form_state['triggering_element']['#ajax']['callback']=='add_new_pvander_action_callback'){
     
   if(isset($form_state['asset_cat_m6_storage_value']) && !empty($form_state['asset_cat_m6_storage_value'])){  
    foreach($form_state['asset_cat_m6_storage'] as $key=>$Unvalue){
      
    }
   }  
  }
  
  
  
  

  $form['main_container_main'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('preferred-vendor-container-section')),
    '#prefix' => '<div class="preferredvendor-create-container margin-bottom-10">', 
    //'#suffix' => '</div>',
    '#process' => array('hcfm_config_preferred_vendor_container_process'),
  );
  if (empty($form_state['asset_cat_m6_storage'])){
   $tempIdentifer = uniqid();
   $form_state['asset_cat_m6_storage'][]  = $tempIdentifer;
 }
   
  $form['main_container_main2'] = array(
    '#type' => 'container',
    '#theme' => 'preferred_vendors_theme',
    '#attributes' => array('class'=>array('preferred-vendor-list-container-section margin-bottom-10')),   
    '#prefix' => '<div id="pv-container-section" class="add-new-alert-detail">', 
      '#suffix' => '</div>',
    '#process' => array('preferred_vendor_list_container_process'),
  );
  $form['submit'] = array(
  '#type' => 'submit',
  '#submit'=> array('custom_asset_configure_submit'),
  '#value' => t('Save'),
  //'#prefix' => '<div class="preferredvendor-create-container">',  
  );
  $form['cancel'] = array(
    '#type' => 'markup',
    '#markup' => '<input type="button" value="Cancel" class="form-submit crb-config-preferred-vendor">', 
  '#suffix' => '</div>',   
  );  
  $header = array('Preferred vendor','Description','Action'); 
  $table_data = hcfm_table_content(0,0,'fm_preferred_vendor',$header);
  $form['table_datiles'] = array(
    '#markup' => $table_data,
  ); 
  return $form;
}

function change_preferred_vendor_nid_callback($form,&$form_state){
  ctools_include('ajax');
  $commands = array();
  $triggeringElement = $form_state['triggering_element'];  
  if($form_state['triggering_element']['#name'] == 'get_preferred_vendor') {
  $NodeType = $form_state['values']['add_ntype'];
  $NodeNid = $form_state['values']['get_preferred_vendor']; 
  if($NodeType == 'fm_preferred_vendor' && $NodeNid && !empty($NodeNid)){   
    $query= db_select('node', 'n');       
    $query->leftjoin('field_data_field_pref_vendor_description' ,'ffnof', 'ffnof.entity_id=n.nid');
    $query->leftjoin('field_data_field_pref_vendor_country' ,'ffty', 'ffty.entity_id=n.nid');
    $query->leftjoin('field_data_field_pref_vendor_state' ,'fla' ,'fla.entity_id=n.nid');
    $query->leftjoin('field_data_field_pref_vendor_city' ,'flfco' ,'flfco.entity_id=n.nid');
    $query->fields('n',array('nid','title'));   
    $query->fields('ffnof',array('field_pref_vendor_description_value'));
    $query->fields('ffty',array('field_pref_vendor_country_value'));  
    $query->fields('fla',array('field_pref_vendor_state_value')); 
    $query->fields('flfco',array('field_pref_vendor_city_value'));    
    $query->condition('n.nid', $NodeNid , '=');
    $query->condition('n.type', $NodeType, '=');
    $CData= $query->execute()->fetchAll();    
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_title", 'val',array($CData[0]->title));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_description", 'val',array($CData[0]->field_pref_vendor_description_value));
    if(isset($CData[0]->field_pref_vendor_country_value) && !empty($CData[0]->field_pref_vendor_country_value)){      
      $commands[] = ajax_command_invoke("select.config_preferred_vendors_country", 'val',array($CData[0]->field_pref_vendor_country_value));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_country_value", 'val',array($CData[0]->field_pref_vendor_country_value));
    $commands[] = ajax_command_invoke("select.config_preferred_vendors_country", 'trigger',array('change'));
    }
    if(isset($CData[0]->field_pref_vendor_state_value) && !empty($CData[0]->field_pref_vendor_state_value)){    
      $commands[] = ajax_command_invoke("select.config_preferred_vendors_state", 'val',array($CData[0]->field_pref_vendor_state_value));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_state_value", 'val',array($CData[0]->field_pref_vendor_state_value));
    $commands[] = ajax_command_invoke("select.config_preferred_vendors_state", 'trigger',array('change'));
    }
    if(isset($CData[0]->field_pref_vendor_city_value) && !empty($CData[0]->field_pref_vendor_city_value)){    
      $commands[] = ajax_command_invoke("select.config_preferred_vendors_city", 'val',array($CData[0]->field_pref_vendor_city_value));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_city_value", 'val',array($CData[0]->field_pref_vendor_city_value));
    $commands[] = ajax_command_invoke("select.config_preferred_vendors_city", 'trigger',array('change'));
    }   
    $commands[] = ajax_command_invoke("input.fm_preferred_vendor_node_nid", 'val',array($CData[0]->nid));
  } 
  else{
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_title", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_description", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_location_country", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_country", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_location_location_state", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_location_location_state_value", 'val',array(''));
    $commands[] = ajax_command_invoke("select.config_preferred_vendors_city", 'val',array(''));
    $commands[] = ajax_command_invoke("input.config_preferred_vendors_city_value", 'val',array(''));  
    $commands[] = ajax_command_invoke("input.fm_preferred_vendor_node_nid", 'val',array(''));  
  }
  $commands[] = ajax_command_replace("#pv-container-section", render($form['main_container_main2']));   
  }  
  return array('#type' => 'ajax', '#commands' => $commands);
}

function hcfm_config_preferred_vendor_container_process($element, &$form_state){//drup_msg($form_state['asset_cat_m6_storage']);
  global $user,$company;
  $element['config_preferred_vendors_title'] = array(
  '#title' => t('Title'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_preferred_vendors_title'
    )
  ),
  '#type' => 'textfield',
  '#required' => TRUE,
  '#prefix' => '<div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  );
  $element['config_preferred_vendors_description'] = array(
  '#title' => t('Description'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'config_preferred_vendors_description'
    )
  ),
  '#type' => 'textfield',
  '#prefix' => '<div class="col-md-8">',
  '#suffix' => '</div></div>',
  );
  $countryNamesList = json_decode(file_get_contents("http://country.io/names.json"), true);
  asort($countryNamesList);
  unset($countryNamesList['US']);
  $countryNamesList1 = array('US'=>'United States')+$countryNamesList;
  $element['config_preferred_vendors_country'] = array(
  '#type' => 'select',  
  '#title' => t('Country'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_country',
    'config_preferred_vendors_country'
    )
  ),
  '#required' => TRUE,
  '#options' => $countryNamesList1,
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="row"><div class="col-md-4">',
  '#suffix' => '</div>',
  );
  $element['config_preferred_vendors_country_value'] = array(
  '#type' => 'hidden',  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_preferred_vendors_country_value',
    )
  ),  
  );
  $element['config_preferred_vendors_state'] = array(
  '#type' => 'select',  
  '#title' => t('State'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_location_location_state',
    'config_preferred_vendors_state'
    )
  ),
  '#required' => TRUE,
  '#options' => _get_default_state(),
  '#validate' => TRUE,
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div>'
  );
  $element['config_preferred_vendors_state_value'] = array(
  '#type' => 'hidden',  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_preferred_vendors_state_value',
    )
  ),  
  );
  $element['config_preferred_vendors_city'] = array(
  '#type' => 'select',  
  '#title' => t('City'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_preferred_vendors_city'
    )
  ),
  '#options' => _get_company_city(),
  '#validate' => TRUE,
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '100%',
    'minimumResultsForSearch' => '1',
  ),
  '#field_prefix' => '',
  '#prefix' => '<div class="col-md-4">',
  '#suffix' => '</div></div>'
  );
  $element['config_preferred_vendors_city_value'] = array(
  '#type' => 'hidden',  
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'config_preferred_vendors_city_value',
    )
  ),  
  );
  
  
  
  
 

  $element['add_ntype'] = array('#type' => 'value', '#value' => 'fm_preferred_vendor');
  $element['user_uid'] = array(
    '#type' => 'value',
  '#value' => $user->uid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'user-uid'
    )
  ),  
  );
  $element['company_nid'] = array(
    '#type' => 'value',
  '#value' => $company->nid,
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'company-nid'
    )
  ),  
  );
  $element['fm_preferred_vendor_node_nid'] = array(
    '#type' => 'hidden',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'fm_preferred_vendor_node_nid'
    )
  ),    
  );  
  return $element;
}

function preferred_vendor_list_container_process($element, &$form_state){
  $query = db_select('node', 'n');
  $query->fields('n', array('nid', 'title'));
  $query->condition('type', 'organization', '=');
  $query->leftJoin('field_data_field_show_company_in_search', 'isa', 'isa.entity_id = n.nid');
  $query->condition('isa.field_show_company_in_search_value', 1, '=');
  $query->leftJoin('field_data_field_type_of_company', 'tc', 'tc.entity_id = n.nid');
  $query->condition('tc.field_type_of_company_value', 'company', '=');  
  $query->orderBy('n.title', 'ASC');//ORDER BY title
  $ComNidTitleMap = $query->execute()->fetchAllKeyed(0,1);  
 
  $storage = $form_state['asset_cat_m6_storage'];
  $element['#storage'] = $storage;
  //drup_msg($storage);
  //drup_msg($form_state['asset_cat_m6_storage_value']);
   //drup_msg($form_state);
  /*drup_msg('process start');
  drup_msg($form_state['values']);
  drup_msg('process end');*/
  $pvander = $form_state['values']['vander'];
  if (isset($_SESSION['pvander'])) {
    $pvander = $_SESSION['pvander'];
  }
  if(isset($form_state['values']['config_preferred_vendors_country']) && !empty($form_state['values']['config_preferred_vendors_country']) && $form_state['values']['config_preferred_vendors_country'] != '0'){
  $country = $form_state['values']['config_preferred_vendors_country']; 
  $state = $form_state['values']['config_preferred_vendors_state']; 
  $city = $form_state['values']['config_preferred_vendors_city'];  
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_company_locations','fcl','fcl.entity_id=n.nid');
  $query->leftjoin('field_data_field_location_address','fla','fla.entity_id=fcl.field_company_locations_value');
  $query->fields('n', array('nid', 'title'));
  $query->fields('fcl',array('field_company_locations_value'));
  $query->fields('fla',array('field_location_address_country','field_location_address_thoroughfare','field_location_address_premise','field_location_address_locality','field_location_address_administrative_area','field_location_address_postal_code'));
  if(isset($country) && !empty($country) && $country != '0'){
    $query->condition('fla.field_location_address_country',$country,'=');
  }
  if(isset($state) && !empty($state) && $state != '0'){
    $query->condition('fla.field_location_address_administrative_area',$state,'=');
  }
  if(isset($city) && !empty($city) && $city != '0'){
    $query->condition('fla.field_location_address_locality',$city,'=');
  }  
  $query->condition('fla.bundle','field_company_locations','=');
  $query->condition('n.type','organization','=');
  $NewComMap = $query->execute()->fetchAllKeyed(0,1);
  }
  
  /*$query = db_select ('node','n');  
  $query->leftJoin('field_data_field_type_of_company', 'tc', 'tc.entity_id = n.nid');
  $query->leftjoin('og_membership','om','om.gid=n.nid');
  $query->leftjoin('realname','r','om.etid=r.uid');
  $query->leftjoin('users','u','u.uid=om.etid');  
  $query->fields('u',array('uid'));
  $query->fields('r',array('realname'));
  $query->fields('n',array('nid','title'));
  $query->fields('tc',array('field_type_of_company_value'));  
  $query->condition('om.gid', $cmpNid, '=');  
  $query->condition('n.type','organization','=');
  $query->condition('om.entity_type','user','=');
  $query->condition('tc.field_type_of_company_value', 'company', '=');  
  $result = $query->execute()->fetchAllKeyed(0,1);*/
  
  $ComUserMap = _get_company_all_users();
  /*print_r($storage);
  print_r($form_state['asset_cat_m6_storage_value']);
  die;*/
  foreach ($storage as $key => $uniqId) {
  
  if (!empty($form_state['first_select_value'][$uniqId])){
    //$ComUserMap = '';
    $pvcuids = _get_user_mappping_by_group_company_nid($form_state['first_select_value'][$uniqId]);
  }
  if(isset($pvander[$uniqId]['config_preferred_vendors_company']) && !empty($pvander[$uniqId]['config_preferred_vendors_company'])){ 
      $pvcid = $pvander[$uniqId]['config_preferred_vendors_company'];
      $pvcuids = _get_user_mappping_by_group_company_nid($pvcid);
  }
  if (isset($pvander[$uniqId]['config_preferred_vendors_user']) && !empty($pvander[$uniqId]['config_preferred_vendors_user'])) {
    //
    //unset()
  }
     $element['config_preferred_vendors_company'][$uniqId] = array(
    //'#title' => t('Select Company'),
    '#attributes' => array(
      'class'=> array(
      'clear-data',
      'config_preferred_vendors_company'
      )
    ),
    '#type' => 'select',
    '#options' => (isset($NewComMap) && !empty($NewComMap)?$NewComMap:$ComNidTitleMap),
    '#validated' => TRUE,
    '#parents' => array('vander',$uniqId,'config_preferred_vendors_company'),
    '#ajax' => array(
      'callback' => 'vendor_company_process_callback',
      'event' => 'change',
      'wrapper' => 'config_preferred_vendors_user_list_'.$uniqId,
      'method' => 'replace',
      'effect' => 'fade',
    ),  
    '#required' => TRUE,
    '#empty_option' => 'None',
    '#select2' => array(
      'width' => '100%',
      'minimumResultsForSearch' => '1',
    ),
    '#field_prefix' => '',
    //'#prefix' => '<div class="row"><div class="col-md-4">',
     // '#suffix' => '</div>'
    );
  
    $element['config_preferred_vendors_user'][$uniqId] = array(
    //'#title' => t('Select user'),
    '#attributes' => array(
      'class'=> array(
      'clear-data',
      'config_preferred_vendors_user'
      )
    ),
    '#type' => 'select',  
    '#required' => TRUE,  
    '#options' => (isset($form_state['config_preferred_vendors_user'][$key][$uniqId]) && !empty($form_state['config_preferred_vendors_user'][$key][$uniqId])?$form_state['config_preferred_vendors_user'][$key][$uniqId]:$ComUserMap),//(isset($pvcuids) && !empty($pvcuids)?$pvcuids:$ComUserMap),
    '#validated' => TRUE,
      '#multiple' => TRUE,
    '#default_value' =>array(2=>'adi dwivedi',129=>'devendra Rana'),
    '#parents' => array('vander',$uniqId,'config_preferred_vendors_user'),  
    '#prefix' => '<div id="config_preferred_vendors_user_list_' . $uniqId . '">',
      '#suffix' => '</div>',
    );      
    $element['remove'][$uniqId] = array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => $uniqId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;')),
    '#parents' => array('vander', $uniqId, 'remove'),
    "#limit_validation_errors" => array(),
    '#submit'=> array('remove_pvander_handler'),
    '#ajax' => array(
      'callback' => 'pvander_row_callback',
      'wrapper' => 'pv-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
    ),
    ); 
    if (isset($form_state['asset_cat_m6_storage_value'][$uniqId])) {      
        $stdefault = $form_state['asset_cat_m6_storage_value'][$uniqId]; 
        $element['config_preferred_vendors_company'][$uniqId]['#default_value'] = $stdefault['vendors_company'];
        //$element['config_preferred_vendors_user'][$uniqId]['#default_value'] = $stdefault['vendors_users'];     
      }  
  } 
  $element['workflow_add_new_row'] = array(
    '#type' => 'submit',
    '#value' => 'Add New',
    '#name' => 'workflow_add_new_row',
    '#attributes'=> array('class'=>array('routing-workflow-action','assets-workflow-action-add-new-assets'),'title'=>'Add New Detail'),
    "#limit_validation_errors" => array(),
    '#submit'=> array('add_new_pvander_submit_handler'),
  '#validated' => TRUE,
    '#ajax' => array(
      'callback' => 'add_new_pvander_action_callback',
      'wrapper' => 'pv-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
    ),
  );
  return $element;
}

function vendor_company_process_callback($form,&$form_state){
  $commands = array();
  $values = $form_state['values'];
  
  //pre($form_state,1);
     $vander = array();
  $vander = $form_state['input']['vander']; 
  /*if(isset($vander) && !empty($vander)) { 
    foreach($vander as $uniKey=>$uniValue){
      //drup_msg($uniValue['config_preferred_vendors_company']);
      $form_state['first_select_value'][$uniKey] = $uniValue['config_preferred_vendors_company'];
     //$uniValue['config_preferred_vendors_company'];     
     //$commands[] = ajax_command_replace("#config_preferred_vendors_user_list", render($form['main_container_main2']['config_preferred_vendors_user'][$uniKey]));    
    }   
  }*/
  //$vander_flop = array_keys($vander);
  
  //$lastuniqId = end($vander_flop);
  //drup_msg($lastuniqId);
    //pre($form_state['first_select_value'],1);
  //$form_state['rebuid'] = TRUE;
  if(isset($form_state['triggering_element'],$form_state['triggering_element']['#ajax']) && !empty($form_state['triggering_element'])) { 
    $lastuniqId = $form_state['triggering_element']['#parents'][1];
    return $form['main_container_main2']['config_preferred_vendors_user'][$lastuniqId];
  }
  /*else {
    //$commands[] = ajax_command_replace("#config_preferred_vendors_user_list", render($form['main_container_main2']['config_preferred_vendors_user']['#options'] = array('none')));   
  } 
  /* drup_msg('company process start');
  drup_msg($form_state['values']);
  drup_msg('company process end');*/
  
  /*return array('#type' => 'ajax','#commands' => $commands); */
}

function theme_preferred_vendors_theme($variables) {
  $element = $variables['form'];
  $storage = $element['#storage'];
  $output = '';
  //$header = array('Unit Cost', 'Quantity', 'Unit of Measure', 'Cost Code|Description','Item Description','Total', '');
  //$header = array('Item #','Unit Cost', 'Quantity', 'Unit of Measure','Item Description','Total', '');
  $header = array('Select Company','Select User', '');
  $rowNo = 1;
  foreach ($storage as $key => $uniqId) {
    $rows[] = array(
    'data'=> array(   
    array('data'=>drupal_render($element['config_preferred_vendors_company'][$uniqId]),'class'=> array('col-md-5')),
    array('data'=>drupal_render($element['config_preferred_vendors_user'][$uniqId]),'class'=> array('col-md-5')),    
    array('data'=>drupal_render($element['remove'][$uniqId]),'class'=> array('workflow-remove-td')),
      ),
    'id' => array('alert-table-list-'.$rowNo),
    );
 /* $rows[] = array(
    'data'=> array(
      //array('data'=> '<strong>Item Description</strong>','colspan' => 2),
      array('data'=>drupal_render($element['workflow_add_new_row']),'colspan' => 4),
        ),   
    'id' => array('alert-table-list-'.$rowNo),
    );*/
  $rowNo++;
  }  
  $rows[] = array(
    'data' => array(  
    array('data'=>drupal_render($element['workflow_add_new_row']),'colspan' => 7),
  ),  
  );
 /* $rows[] = array(
    'data' => array(  
    array('data'=>drupal_render($element['workflow_add_new_row']),'style' => 'display:none;'),
    array('data'=>drupal_render($element['final_total']),'style' => 'display:none;'),   
    //array('data'=>drupal_render($element['commitment_cost_code'])),       
    array('data'=>drupal_render($element['notes_and_instructions']),'colspan' => 4),
    array('data'=>drupal_render($element['final_total_details']),'colspan' => 3),
  ),  
  );*/
  $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes'=> array('class'=> array('project-mgmt-po-item-table','table','table-hover','m6connect-custom-table','m6connect-table-border'))));
  $output .= drupal_render_children($element);
  return $output;
}

function remove_pvander_handler(&$form,&$form_state) {
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1];
  if (isset($form_state['asset_cat_m6_storage'])){
    foreach ($form_state['asset_cat_m6_storage'] as $key => $value) {
      if ($form_state['asset_cat_m6_storage'][$key] == $identifier){
        unset($form_state['asset_cat_m6_storage'][$key]);         
      } 
    }             
  } 
  $form_state['rebuild'] = TRUE;
}
function pvander_row_callback(&$form, &$form_state) {
  return $form['main_container_main2'];
}

function add_new_pvander_submit_handler(&$form, &$form_state) { 
  $triggerElement = $form_state['triggering_element'];
  if ($triggerElement['#name'] =='workflow_add_new_row'){
    $tempIdentifer = uniqid();
    $form_state['asset_cat_m6_storage'][]  = $tempIdentifer;
  }
  $_SESSION['pvander'] = $form_state['values']['vander'];
  $form_state['rebuild'] = TRUE;
  
 
}

function add_new_pvander_action_callback(&$form, &$form_state) {
  return $form['main_container_main2'];
  
  //pre($form_state['asset_cat_m6_storage'],1);
}



/*function get_floor_field_generate($floorN){
  if(isset($floorN) && !empty($floorN)){
  foreach($floorN as $key=>$fn){
    //drup_msg($fn);
    $elements['floor_title_'.$key] = array(
    '#type' => 'textfield',
    '#title' => t('Floor Name'.$key),
    '#attributes' => array(
      'class'=> array(
      'floor_title_'.$key
      )
    )   
    );
  }
  }
  
  return $elements;
}*/



/************************************  location facility floor callback start **************************************/
function facility_floor_process_callback($form,&$form_state){
  $commands = array();
  if(isset($form_state['values']['config_location_facility_floornumber']) && is_numeric($form_state['values']['config_location_facility_floornumber']) && $form_state['values']['config_location_facility_floornumber'] !=0 && $form_state['values']['config_location_facility_floornumber'] <= 15 ){
    $commands[] = ajax_command_invoke("select.config_location_facility_floornumber_select", 'val',array($form_state['values']['config_location_facility_floornumber']));
    $commands[] = ajax_command_invoke("input.config_location_facility_floornumber_addmore", 'trigger',array('mousedown'));
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function client_option_js($form,&$form_state){
  return $form['main_container_main']['option_wrapper']['option'];
}

function facility_floor_more_option_submit($form,&$form_state){ //drup_msg($form_state['input']);drup_msg($form_state['triggering_element']);
  $select = $form_state['input']['config_location_facility_floornumber']; 
  if(isset($form_state['triggering_element']['#value']) &&  !empty($form_state['triggering_element']['#value'])){
  $build = '';
  if(isset($select) && !empty($select) && is_numeric($select)){
    $form_state['option_count'] = $select;
    $selectM = $select*2;
    $FLOOR = 0;
    $SF = 0;
    $FLOOR1 = 0;
    $SF1 = 0;
    $build = '';
    for($j=0;$j<$selectM;$j++){
    if ($j % 2 == 0){
      ++$FLOOR;
      
      $build[$j] =  array(
      '#type' => 'textfield',
      '#title' => 'Floor Name',
      '#name' => 'floor_'.$FLOOR,
      //'#parents' => array('facility_floor',$FLOOR,'floor_'.$FLOOR),
      '#attributes' => array(
        'class'=> array(
        'config_location_facility_floor_'.$FLOOR1
        )
      ),
      '#required' => TRUE,
      '#prefix' => '<div class="row"><div class="col-md-6">',
      '#suffix' => '</div>',
      );
      $FLOOR1++;
    }else{
      ++$SF;    
      $build[$j] = array(
      '#type' => 'textfield',
      '#title' => 'SF',
      '#name' => 'sf_'.$SF,
      //'#parents' => array('facility_floor_sf',$SF,'sf_'.$SF),
      '#attributes' => array(
        'class'=> array(
        'config_location_facility_floorsf_'.$SF1
        )
      ),
      //'#required' => TRUE,
      '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div></div>',    
      );
      $SF1++;
    }
    }
  }
  else{
    $build = '';
  }
  }
  else{
    $build = '';
  }
  $form_state['c'] = $build;
  $form_state['option'] = $form_state['c'];
  unset($form_state['input']['option']);
  $form_state['rebuild'] = TRUE;
}
/************************************  location facility floor callback end **************************************/

/************************************  location zone floor callback start **************************************/
function location_facility_process_callback($form,&$form_state){
  $commands = array();
  $values = $form_state['values'];
  //pre($form_state,1);
  //drup_msg($values['config_location_pick_facility']);
  if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility'])){    
  /* $NodeObj11 = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAllKeyed','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'facility'),'equal'=>array('entity_id'=>$values['config_location_pick_facility'])));
  $TableData11 =  _get_hcfm_db_request($NodeObj11);
  $floorOption = array_flip($TableData11);
  $_SESSION['location_pick_facility_nid'] = $values['config_location_pick_facility']; */
  if(isset($values['config_location_pick_facility']) && !empty($values['config_location_pick_facility'])) { 
    $commands[] = ajax_command_replace("#config-location-location-numberoffloor", render($form['main_container_main']['config_location_location_numberoffloor'])); 
  }
  else {
    $commands[] = ajax_command_replace("#config-location-location-numberoffloor", render($form['main_container_main']['config_location_location_numberoffloor']['#options'] = array('none')));   
  } 
  }   
  return array('#type' => 'ajax','#commands' => $commands); 
}

function location_floor_process_callback($form,&$form_state){
  $commands = array();
  //pre($form_state,1);
  //drup_msg($form_state['triggering_element']['#value']);
  //drup_msg($form_state['values']);
  if(isset($form_state['triggering_element']['#value']) && !empty($form_state['triggering_element']['#value'])){
  if(isset($form_state['values']['config_location_location_numberoffloor']) && !empty($form_state['values']['config_location_location_numberoffloor'])){
    $locFloorCount = count($form_state['values']['config_location_location_numberoffloor']);
    
    $commands[] = ajax_command_invoke("select.config_location_location_floornumber_select", 'val',array($locFloorCount));
    $commands[] = ajax_command_invoke("input.config_location_location_floornumber_addmore", 'trigger',array('mousedown'));
  }
  }else{
  $commands[] = ajax_command_invoke("select.config_location_location_floornumber_select", 'val',array(0));
  $commands[] = ajax_command_invoke("input.config_location_location_floornumber_addmore", 'trigger',array('mousedown'));  
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function location_client_option_js($form,&$form_state){
  //return $form['main_container'];
  return $form['main_container_main']['location_option_wrapper']['location_option'];
}

function location_floor_more_option_submit($form,&$form_state){ //drup_msg($form_state['input']); drup_msg($form_state['triggering_element']);
  $select = $form_state['input']['location_client_options'];   
  if(isset($form_state['triggering_element']['#value']) &&  !empty($form_state['triggering_element']['#value'])){
  $build = '';
  if(isset($select) && !empty($select) && is_numeric($select)){
    //$FloorName = '';
    //$FloorDelta = '';
    $FloorNameDelta =array();
    if(isset($form_state['input']['config_location_pick_facility']) && isset($form_state['input']['config_location_location_numberoffloor']) ){
    $FacilityNid = $form_state['input']['config_location_pick_facility'];
    $FacilityFloorValues = $form_state['input']['config_location_location_numberoffloor'];
    $LocationZoneEditNid = $form_state['input']['fm_location_location_node_nid'];
    $FloorNameDelta =array();
    $FloorSquareFeetDelta =array();
    $FloorSquareFeetValueDelta =array();
    $FloorSquareFeetRatioDelta =array();
    if(isset($LocationZoneEditNid) && !empty($LocationZoneEditNid)){
      $FloorNameObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_floor_name','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_location_location'),'equal'=>array('entity_id'=>$LocationZoneEditNid)));
      $FloorNameDelta =  _get_hcfm_db_request($FloorNameObj );
     
      
      $FloorSquareFeetObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_total_sf','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_total_sf_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_location_location'),'equal'=>array('entity_id'=>$LocationZoneEditNid)));
      $FloorSquareFeetDelta =  _get_hcfm_db_request($FloorSquareFeetObj );
      
      
      $FloorSquareFeetValueObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_sf','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_sf_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_location_location'),'equal'=>array('entity_id'=>$LocationZoneEditNid)));
      $FloorSquareFeetValueDelta =  _get_hcfm_db_request($FloorSquareFeetValueObj );
      
      
      $FloorSquareFeetRatioObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_location_floor_percentage','Fetch'=>'fetchCol','CFields'=>'CFields','CFieldsNames'=>array('field_location_floor_percentage_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_location_location'),'equal'=>array('entity_id'=>$LocationZoneEditNid)));
      $FloorSquareFeetRatioDelta =  _get_hcfm_db_request($FloorSquareFeetRatioObj );
        
      
      
    }else{
      if(isset($FacilityNid) && !empty($FacilityNid)){
      $FloorNameObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_name','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAll','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_name_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'equal'=>array('entity_id'=>$FacilityNid)));
      $FloorNameDeta =  _get_hcfm_db_request($FloorNameObj);
        $FloorNameList1 = array();
        foreach($FloorNameDeta as $value){
                $FloorNameList1[$value['nid_delta']] =  $value['field_facility_floor_name_value'];
              }
      $FloorNameList =  $FloorNameList1;  
       
      $FloorSquareFeetObj = array('NodeType'=>'NoType','TableJoin'=>'TableJoin','TableName'=>'field_data_field_facility_floor_square_feet','addExpression'=>"CONCAT(entity_id, '_', delta)",'addExpression_value'=>"nid_delta",'Fetch'=>'fetchAll','CFields'=>'CFields','CFieldsNames'=>array('field_facility_floor_square_feet_value'),'OtherId'=>array('equal'=>array('bundle'=>'fm_facility'),'equal'=>array('entity_id'=>$FacilityNid)));
      $FloorSquareFeetDeta =  _get_hcfm_db_request($FloorSquareFeetObj);
        $FloorSquareFeetList1 = array();
        foreach($FloorSquareFeetDeta as $value){
                $FloorSquareFeetList1[$value['nid_delta']] =  $value['field_facility_floor_square_feet_value'];
              }
      
      
      $FloorSquareFeetList =  $FloorSquareFeetList1;  
          
      }   
    }
    
    
    if(isset($FloorNameList) && !empty($FloorNameList)){   
      foreach($FloorNameList as $Fnkey=>$Fnvalue){    
      if(in_array($Fnkey,$FacilityFloorValues)){
      $FloorNameDelta[] = $Fnvalue; 
      }
      }
    }
    
    if(isset($FloorSquareFeetList) && !empty($FloorSquareFeetList)){   
      foreach($FloorSquareFeetList as $Fsfkey=>$Fsfvalue){    
      if(in_array($Fsfkey,$FacilityFloorValues)){
      $FloorSquareFeetDelta[] = $Fsfvalue;  
      }
      }
    }   
    }   
    
    $form_state['location_option_count'] = $select;
    $selectM = $select*4;
    $FLOOR = 0;
    $SF = 0;
    $FLOOR1 = 0;
    $SF1 = 0;
    $FloorRatioValue = 0;
    $FloorRatioValue1 = 0;
    $FloorRatio = 0;
    $FloorRatio1 = 0;
    $build = '';
    
    for($j=0;$j<$selectM;$j++){
     
    if ($j % 4 == 0){
      ++$FLOOR;   
      
      
      $build[$j] =  array(
      '#type' => 'textfield',
      '#title' => 'Floor Name',
      '#name' => 'floor_'.$FLOOR,
      //'#parents' => array('facility_floor',$FLOOR,'floor_'.$FLOOR),
      '#value' => $FloorNameDelta[$FLOOR1],
      '#attributes' => array(
        'class'=> array(
        'config_location_location_floor_'.$FLOOR1
        )
      ),
      '#required' => TRUE,      
      '#prefix' => '<div class="row"><div class="col-md-3">',
      '#suffix' => '</div>',
      );
      $FLOOR1++;
    }else if ($j % 4 == 1){
      ++$SF;    
      $build[$j] = array(
      '#type' => 'textfield',
      '#title' => 'Zone SF',
      '#name' => 'sf_'.$SF,
      //'#parents' => array('facility_floor_sf',$SF,'sf_'.$SF),
      '#value' => $FloorSquareFeetDelta[$SF1],
      '#disabled' => TRUE,
      '#attributes' => array(
        'class'=> array(
        'location_totalsf','config_location_location_floorsf_'.$SF1
        )
      ),
      '#required' => TRUE,
      '#prefix' => '<div class="col-md-3">',
      '#suffix' => '</div>',    
      );
      $SF1++;
    }else if ($j % 4 == 2){
      ++$FloorRatioValue;
      $build[$j] = array(
      '#type' => 'textfield',
      '#title' => 'SF',
      '#name' => 'floorratiovalue_'.$FloorRatioValue,
      //'#parents' => array('facility_floor_sf',$SF,'sf_'.$SF),
      '#value' => $FloorSquareFeetValueDelta[$FloorRatioValue1],
      '#attributes' => array(
        'class'=> array(
        'location_floorratiovalue','config_location_location_floorratiovalue_'.$FloorRatioValue1
        )
      ),
      '#required' => TRUE,
      '#prefix' => '<div class="col-md-3">',
      '#suffix' => '</div>',    
      );
      $FloorRatioValue1++;
    }else if ($j % 4 == 3){
      ++$FloorRatio;
      $build[$j] = array(
      '#type' => 'textfield',
      '#title' => 'Zone %',
      '#name' => 'floorratio_'.$FloorRatio,
      '#value' => $FloorSquareFeetRatioDelta[$FloorRatio1],
      //'#parents' => array('facility_floor_sf',$SF,'sf_'.$SF),
      '#attributes' => array(
        'class'=> array(
        'location_floorratio','config_location_location_floorratio_'.$FloorRatio1
        )
      ),
      '#required' => TRUE,
      '#prefix' => '<div class="col-md-3">',
      '#suffix' => '</div></div>',    
      );
      $FloorRatio1++;
    }
    }
  }
  else{
    $build = '';  
  }
  }
  else{
    $build = '';      
  }
  $form_state['c'] = $build;
  
  $form_state['location_option'] = $form_state['c'];
  unset($form_state['input']['location_option']);
  $form_state['rebuild'] = TRUE;
}





function _hcfm_node_delete_access($nid,$type=''){
  $output = '';
  if(isset($nid) && !empty($nid) && is_numeric($nid)){
  if(isset($type) && !empty($type) && $type == 'fm_asset_system'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_system','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_asset_system_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_asset_sub_system'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_sub_system','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_asset_sub_system_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_asset_device_type'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_device_type','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_asset_device_type_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_asset_status'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_status','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_asset_status_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_account_number'){
    $db_And = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_account_number','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_account_number','fdfasysd','fdfasysd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_account_number_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_account_number_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_risk_rank'){
    $db_And = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_priority_rr','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_priority_rr','fdfasysd','fdfasysd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_priority_rr_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_priority_rr_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  } 
  if(isset($type) && !empty($type) && $type == 'fm_location_region'){
    $db_And = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_region','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_region','fdfasysd','fdfasysd.entity_id=n.nid');
      $query->leftjoin('field_data_field_location_region','fdfasysdd','fdfasysdd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_region_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_region_target_id',$nid,'=');
      $db_And->condition('fdfasysdd.field_location_region_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_location_site'){
    $db_And = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_site','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_site','fdfasysd','fdfasysd.entity_id=n.nid');
      $query->leftjoin('field_data_field_facility_location_site','fdfasysdd','fdfasysdd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_site_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_site_target_id',$nid,'=');
      $db_And->condition('fdfasysdd.field_facility_location_site_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_facility_type'){
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_facility_type','fdfasys','fdfasys.entity_id=n.nid');     
    $query->fields('n',array('nid','type','title'));          
      $query->condition('fdfasys.field_facility_type_target_id',$nid,'=');     
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_facility_area_type'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_facility_area_type','fdfasys','fdfasys.entity_id=n.nid');     
    $query->fields('n',array('nid','type','title'));          
      $query->condition('fdfasys.field_facility_area_type_target_id',$nid,'=');     
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  } 
  if(isset($type) && !empty($type) && $type == 'fm_facility'){
    $db_And = db_or();
      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_facility','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_facility','fdfasysd','fdfasysd.entity_id=n.nid');
      $query->leftjoin('field_data_field_location_facility','fdfasysdd','fdfasysdd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_facility_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_facility_target_id',$nid,'=');
      $db_And->condition('fdfasysdd.field_location_facility_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_location_location'){
    $db_And = db_or();

      $query = db_select('node','n');
    $query->leftjoin('field_data_field_asset_location','fdfasys','fdfasys.entity_id=n.nid');
      $query->leftjoin('field_data_field_wo_location','fdfasysd','fdfasysd.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
      $query->condition($db_And);   
      $db_And->condition('fdfasys.field_asset_location_target_id',$nid,'=');
      $db_And->condition('fdfasysd.field_wo_location_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  } 
  if(isset($type) && !empty($type) && $type == 'fm_problem_code'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_problem_code','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_problem_code_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_work_order_type'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_type','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_type_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_work_order_status'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_status','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_status_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_skill'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_skill','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_skill_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_priorty'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_priority','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_priority_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_resource'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_resource','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_resource_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_special_tag'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_special_tag','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_special_tag_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  if(isset($type) && !empty($type) && $type == 'fm_needed_permit'){
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_wo_needed_permit','fdfasys','fdfasys.entity_id=n.nid');
    $query->fields('n',array('nid','type','title'));
    $query->condition('fdfasys.field_wo_needed_permit_target_id',$nid,'=');
    $result = $query->execute()->rowCount();
    if(isset($result) && !empty($result) && is_numeric($result)){
    $output = TRUE;
    }else{
    $output = FALSE;
    }
  }
  }
  return $output;
}

function custom_hcfm_dashboard_section_layout(){
  drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/m6connect_hcfm.js');
  drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/js/jquery.flip.min.js'); 
  
  
  
  
  
  
  
  
  
  $AsRiskNid = 53006;
  
  
  $query = db_select('node','n');
  if(isset($AsRiskNid) && is_numeric($AsRiskNid) && !empty($AsRiskNid)){
    $query->leftjoin('field_data_field_asset_priority_rr','fdfaprrr','fdfaprrr.entity_id=n.nid');
    $query->fields('fdfaprrr',array('field_asset_priority_rr_target_id')); 
    $query->condition('fdfaprrr.field_asset_priority_rr_target_id',$AsRiskNid,'=');
  }
  $query->fields('n',array('nid','type','title','uid','status'));   
  $query->condition('n.type','fm_asset','=');  
  $ReturnObj = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
  if(isset($ReturnObj) && !empty($ReturnObj)){
  
    
     $header = array('PM/CM','Work Order Number','Work Order Name');
      $DasTableData = hcfm_work_order_dashboard_table_content1($user->uid,$company->nid,'fm_asset',$header,0,'field_asset_priority_rr_target_id',$ReturnObj);
      
    //$commands[] = ajax_command_invoke('.dashboardasset_data','val',array($DasTableData));
      $getGraphData = array_count_values(array_column($ReturnObj, 'field_asset_priority_rr_target_id'));
    $totalRisk = 0;
    foreach($getGraphData as $getCount) {
      $getFinal += $getCount;
    }
    
    $cgetPer = array();
      $cgetLab = array();
      foreach($getGraphData as $riskKey => $risk) { 
      $cgetPer[] = round((($risk/$getFinal )*100) , 2);
      if(is_numeric($riskKey)){
        
          $cgetLab[] =  _get_title_of_node($riskKey);
        
      }
      } 
      
      $DasColumnData = _hcfm_chart_intigration_column($cgetPer,$cgetLab);
  }
  $output = '';
  // row One
  $output .= '<div class="hcfm-dashboard-section">';
  $output .= '<div class="row margin-5 levelone">';  
    $output .= '<div class="col-md-2 col-sm-12 col-xs-12 padding-5">';
    $output .='<div class="text-center" style="display:none"><h3>Coming Soon!  map</h3></div>';
    $output .= '<div class="middle_one company-profile-navigation clearfix">
                    <div class="middle_one_top clearfix">
                      <div class="region region-middle-one-top">
             
             
            </div>
          </div>
          </div>';
  $output .= '</div>';  
  
  $output .= '<div class="col-md-8 col-sm-12 col-xs-12 padding-5 middle-two-main-section">';
    $output .= '<div class="middle_two clearfix">
                    <div class="middle_two_inner">
          
                    </div>
                    <div class="content_inner">   
            
           
              <div class="row margin-5">            
              <div class="padding-5 prochat-chatswitch-error"></div>
              <div class="prochat_project_list col-sm-3 col-md-3 col-xs-3 padding-5">
             
              </div>
              <div class="prochat_member_chat col-sm-9 col-md-9 col-xs-9 padding-5">
             
              
              </div>              
            </div>
          </div>
          
          </div>';          
  
  $output .= '</div>';  
  $output .= '<div class="col-md-2 col-sm-12 col-xs-12 padding-5 middle-three-main-section">
                <div class="text-center" style="display:none"><h3>Coming Soon! grap</h3></div>
                  <div class="middle_three clearfix">
                    <div class="region region-middle-three">
            
                    </div>
          </div>
                </div>';
  $output .= '</div>';
  
  //row Two
  $output .= '<div class="row margin-5 leveltwo">';  
    $output .= '<div class="col-md-4 col-sm-12 col-xs-12 padding-5 secton-comp-one">';
    $output .='<div class="text-center"><h3>Asset Management</h3></div>';
    $output .='<div class="clearfix dashboard-leveltwo-sectionone">
                 
          <div id="card-1" class="card-1" style="height:350px">
          <div class="front" style="background:#22bae5;">
            <div class="pull-left flipControl"><a class="flip-btn111"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
            <div class="pull-right flipControl"><a class="flip-btn121"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            <div class="dashboardasset_data" style="width:50%; height:50%">'.$DasColumnData.'</div> 
          </div>
          <div class="back" style="background:#ccc;">
            <div class="clearfix">
              <div class="pull-right flipControl"><a class="unflip-btn122"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            </div>
             '.drupal_render(drupal_get_form('hcfm_dashboard_asset_form')).' 
          </div>
          </div>
          <div id="card-11" style="display:none;">
            <div style="background:#ccc;height:350px;">
              <div class="pull-left flipControl"><a class="flip-btn112"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
              test
          </div>
          </div>
           
           
           
          </div>';
  $output .= '</div>';  

  $output .= '<div class="col-md-4 col-sm-12 col-xs-12 padding-5 secton-comp-two">';
    $output .='<div class="text-center"><h3>Work Order Efficiency</h3></div>';
    $output .= '<div class="clearfix dashboard-leveltwo-sectiontwo">
                    
          
          
          
    
          
          <div id="card-2" class="card-2" style="height:350px">
            <div class="front" style="background:#149e5d;">
            <div class="pull-left flipControl"><a class="flip-btn211"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
            <div class="pull-right flipControl"><a class="flip-btn221"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            <strong>PM to CM Ratio: <br>
            Current Month</strong> 
            </div>
            <div class="back" style="background:#ccc;">
              <div class="clearfix">
              <div class="pull-right flipControl"><a class="unflip-btn222"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            </div>
            <strong>Asset by Risk Rank: <br>
            Current Month</strong> 
            
            </div>
          </div>
          
          <div id="card-22" style="display:none;">
            <div style="background:#ccc;height:350px;">
            <div class="pull-left flipControl"><a class="flip-btn212"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
            test
            </div>
          </div>
          
          
          
          
          
          
          
          
          </div>';          
  
  $output .= '</div>';  
  $output .= '<div class="col-md-4 col-sm-12 col-xs-12 padding-5 secton-comp-three">';
    $output .='<div class="text-center"><h3>Performance Level</h3></div>';
    $output .= '<div class="clearfix dashboard-leveltwo-sectionthree" >
                   
           
          <div id="card-3" class="card-3" style="height:350px">
            <div class="front" style="background:#ef923d;">
            <div class="pull-left flipControl"><a class="flip-btn311"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
            <div class="pull-right flipControl"><a class="flip-btn321"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            <strong>Asset by Risk Rank: <br>
            Current Month</strong> 
            </div>
            <div class="back" style="background:#ccc;">
              <div class="clearfix">
              <div class="pull-right flipControl"><a class="unflip-btn322"><i class="fa fa-cog" aria-hidden="true"></i></a></div>
            </div>
            <strong>Asset by Risk Rank: <br>
            Current Month</strong> 
            
            </div>
          </div>
 
          
                    
          <div id="card-33" style="display:none;">
            <div style="background:#ccc;height:350px;">
            <div class="clearfix">
              <div class="pull-left flipControl"><a class="flip-btn312"><i class="fa fa-compress" aria-hidden="true"></i></a></div>
            </div>
            test
            </div>
          </div>
          
          
          
          
          
                    
          
          
        
          
          
          
          
          
          
          
          </div>';          
  
  $output .= '</div>';
  $output .= '</div>';
  $output .= '</div>';
  return $output; 
}

function hcfm_dashboard_asset_form($form,&$form_state) {
  //drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/js/jquery.flip.min.js');
  $form['main-container-main'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('hcfmdashboard-asset-section padding-10')),
    '#prefix' => '<div class="hcfmdashboard-asset-detail">', 
    '#suffix' => '</div>',
    '#process' => array('hcfmdashboard_asset_process'),
  );
  return $form;
}

function hcfmdashboard_asset_process($element, &$form_state){
  global $user,$company;
  $UserUid = (isset($user)&& $user->uid == 2 ? 0:$user->uid);
  $ComNid= (isset($company )&& $company->nid == 645 ? 0:$company->nid);
  $query = db_select('m6cocnnect_hcfm_dashboard_tiles','hcfmdt');
  $query->fields('hcfmdt');
  $query->condition('hcfmdt.user',$user->uid,'=');
  $query->condition('hcfmdt.company',$company->nid,'=');
  $query->condition('hcfmdt.type','asset','=');
  $TableResult = $query->execute()->fetchAllAssoc('type', PDO::FETCH_ASSOC); 
  //drupal_add_js(drupal_get_path('module', 'm6connect_hcfm') . '/js/jquery.flip.min.js');
    
  /*$element['asset_riskrank_data'] = array(  
  '#markup' => '<div class="asset_riskrank_data"></div>',
  '#prefix' => '<div class="row"><div class="col-md-6">', 
    '#suffix' => '</div></div>',
  );*/
  $asset_region = hcfm_nodenid_nodetitle_by_node_type('fm_location_region',$ComNid,$UserUid);
  $element['dash_asset_region_list'] = array(
  '#title' => t('Select Region'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-region',
    'dash_asset_region_list'
    )
  ),
  '#type' => 'select',
  '#options' => $asset_region,
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['region']) && !empty($TableResult['asset']['region'])?$TableResult['asset']['region']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),
  '#prefix' => '<div class="row margin-5"><div class="padding-5">',
  '#suffix' => '</div>',
  );
  $location_site = hcfm_nodenid_nodetitle_by_node_type('fm_location_site',$ComNid,$UserUid);
  $element['dash_asset_site_list'] = array(
  '#title' => t('Select Site'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-site',
    'dash_asset_site_list'
    )
  ),
  '#options' => $location_site,
  '#type' => 'select',
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['site']) && !empty($TableResult['asset']['site'])?$TableResult['asset']['site']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),
  '#prefix' => '<div class="padding-5">',
  '#suffix' => '</div>',
  
  );
  $asset_facility = hcfm_nodenid_nodetitle_by_node_type('fm_facility',$ComNid,$UserUid);
  $element['dash_asset_facility_list'] = array(
  '#title' => t('Select Facility '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-facility',
    'dash_asset_facility_list'
    )
  ),
  '#options' => $asset_facility,
  '#type' => 'select',
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['facility']) && !empty($TableResult['asset']['facility'])?$TableResult['asset']['facility']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),
  '#prefix' => '<div class="padding-5">',
  '#suffix' => '</div></div>',
  );
  $location_location = hcfm_nodenid_nodetitle_by_node_type('fm_location_location',$ComNid,$UserUid);
  $element['dash_asset_zone_list'] = array(
  '#title' => t('Select Zone '),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'as-asset-location',
    'dash_asset_zone_list'
    )
  ),
  '#options' => $location_location,
  '#type' => 'select',
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['zone']) && !empty($TableResult['asset']['zone'])?$TableResult['asset']['zone']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),
  '#prefix' => '<div class="row margin-5"><div class="padding-5">',
  '#suffix' => '</div>',
  );
  $fm_asset_status = hcfm_nodenid_nodetitle_by_node_type('fm_asset_status');
  $element['dash_asset_status_list'] = array(
    '#title' => t('Select Status'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'dash_asset_status_list'
    )
  ),  
  '#type' => 'select',
  '#options' => $fm_asset_status,    
  '#attributes'=> array('class'=> array('form-control')),
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['status']) && !empty($TableResult['asset']['status'])?$TableResult['asset']['status']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),  
  '#prefix' => '<div class="padding-5">', 
    '#suffix' => '</div>',
  );
  $fm_risk_rank = hcfm_nodenid_nodetitle_by_node_type('fm_risk_rank');
  $element['dash_asset_riskrank_list'] = array(
    '#title' => t('Select Risk Rank'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'dash_asset_riskrank_list'
    )
  ),  
  '#type' => 'select',
  '#options' => $fm_risk_rank,    
  '#attributes'=> array('class'=> array('form-control')),
  '#empty_option' => 'None',
  '#default_value' => (isset($TableResult['asset']['riskrank']) && !empty($TableResult['asset']['riskrank'])?$TableResult['asset']['riskrank']:''),
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),  
  '#prefix' => '<div class="padding-5">', 
    '#suffix' => '</div></div>',
  );
  
  /*$DashboardFilter = array('today'=>'Today','tomorrow'=>'Tomorrow','yesterday'=>'Yesterday','last_year'=>'Last Year','last_month'=>'Last Month','last_week'=>'Last Week','this_year'=>'This Year','this_month'=>'This Month','this_week'=>'This Week','next_year'=>'Next Year','next_month'=>'Next Month','next_week'=>'Next Week');
  $element['dash_asset_filter_list'] = array( 
    '#title' => t('Select Filter'),
  '#attributes' => array(
    'class'=> array(
      'clear-data',
    'dash_asset_filter_list'
    )
  ), 
  '#type' => 'select',
  '#options' => $DashboardFilter,    
  '#attributes'=> array('class'=> array('form-control')),
  '#empty_option' => 'None',
  '#select2' => array(
    'width' => '150',
    'minimumResultsForSearch' => '1',
  ),
  //'#default_value' => 'this_month',
  '#prefix' => '<div class="row margin-5"><div class="col-md-4 padding-5">', 
    '#suffix' => '</div></div>',   
  );*/
  $element['dashboard_asset_submit'] = array(
    //'#markup' => l('<input type="button" class="btn btn primary form-submit" value="Submit" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('dashboard_asset_submit_btn')))),
  '#type' => 'button',
  '#ajax' => array(
    'callback' => 'hcfmdashboard_asset_riskrank_callback',
    'event' => 'click',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type' => 'none'),
  ),
  '#name' => 'hcfm_dashboard_asset',
  '#validate' => TRUE,
  '#value' => t('Submit'),
  '#prefix' => '<div class="clearfix"><div class="form-item"><div class="clearfix"><label>&nbsp;</label></div><div class="display-inline-block">'.l('<input type="button" class="btn btn primary form-submit" value="Reset" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('dashboard_asset_reset_btn')))).'</div><div class="display-inline-block">',
  '#suffix' => '</div></div></div>',
  );
  return $element;
}

function hcfmdashboard_asset_riskrank_callback($form,&$form_state){//drup_msg($form_state);
  global $user, $company;
  $commands = array();
  $values = $form_state['values'];                               //pre($values);pre($form_state,1);
  //pre($form_state);
  if(isset($form_state['triggering_element']['#ajax']['callback']) && $form_state['triggering_element']['#ajax']['callback'] == 'hcfmdashboard_asset_riskrank_callback'){
  $RegionId= $values['dash_asset_region_list'];
    $SiteId= $values['dash_asset_site_list'];
    $FacilityId= $values['dash_asset_facility_list'];
    $ZoneId= $values['dash_asset_zone_list'];
    $StatusId= $values['dash_asset_status_list'];
    $RiskrankId= $values['dash_asset_riskrank_list'];
    $FilterId= $values['dash_asset_filter_list'];
  
  if(!empty($RegionId) || !empty($SiteId) || !empty($FacilityId) || !empty($ZoneId) || !empty($StatusId) || !empty($RiskrankId)){

    $query = db_select('node','n');
    //$query->leftjoin('field_data_field_asset_status','fiasst','fiasst.entity_id=n.nid');
    $query->leftjoin('field_data_field_asset_priority_rr','fiaspr','fiaspr.entity_id=n.nid');
    $query->fields('n',array('nid','title','uid','status'));
    //$query->fields('fiasst',array('field_asset_status_target_id'));
    $query->fields('fiaspr',array('field_asset_priority_rr_target_id'));
    //$query->condition('fiasst.field_asset_status_target_id',52651,'=');
    
    
    if(isset($RegionId) && is_numeric($RegionId) && !empty($RegionId)){
    $query->leftjoin('field_data_field_asset_region','fdfwr','fdfwr.entity_id=n.nid');
    $query->fields('fdfwr',array('field_asset_region_target_id')); 
    $query->condition('fdfwr.field_asset_region_target_id',$RegionId,'=');
    }
    if(isset($SiteId) && is_numeric($SiteId) && !empty($SiteId)){
    $query->leftjoin('field_data_field_asset_site','fdfws','fdfws.entity_id=n.nid');
    $query->fields('fdfws',array('field_asset_site_target_id')); 
    $query->condition('fdfws.field_asset_site_target_id',$SiteId,'=');
    }
    if(isset($FacilityId) && is_numeric($FacilityId) && !empty($FacilityId)){
    $query->leftjoin('field_data_field_asset_facility','fdfwf','fdfwf.entity_id=n.nid');
    $query->fields('fdfwf',array('field_asset_facility_target_id')); 
    $query->condition('fdfwf.field_asset_facility_target_id',$FacilityId,'=');
    }
    if(isset($ZoneId) && is_numeric($ZoneId) && !empty($ZoneId)){
    $query->leftjoin('field_data_field_asset_location','fdfwlo','fdfwlo.entity_id=n.nid');
    $query->fields('fdfwlo',array('field_asset_location_target_id')); 
    $query->condition('fdfwlo.field_asset_location_target_id',$WoZonNid,'=');
    }
    if(isset($StatusId) && is_numeric($StatusId) && !empty($StatusId)){
    $query->leftjoin('field_data_field_asset_status','fdfwlo','fdfwlo.entity_id=n.nid');
    $query->fields('fdfwlo',array('field_asset_status_target_id')); 
    $query->condition('fdfwlo.field_asset_status_target_id',$StatusId,'=');
    }
    if(isset($RiskrankId) && is_numeric($RiskrankId) && !empty($RiskrankId)){
    $query->leftjoin('field_data_field_asset_priority_rr','fdfwlo','fdfwlo.entity_id=n.nid');
    $query->fields('fdfwlo',array('field_asset_priority_rr_target_id')); 
    $query->condition('fdfwlo.field_asset_priority_rr_target_id',$RiskrankId,'=');
    }   
    $query->condition('n.type','fm_asset','=');
    $query->addExpression("from_unixtime(n.created, '%M')", 'asset_month');
    $query->addExpression("from_unixtime(n.created, '%Y')", 'asset_year');
    //$query->havingCondition('asset_year',date('Y'), '=');
    if(isset($user) && !in_array('administrator',$user->roles) && $user->uid !=2){
      $query->condition('n.uid',$user->uid,'=');
      $query->havingCondition('asset_year',date('Y'), '=');
    }
    $ReturnObj = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC); 
      
    /*$getGraphData = array_count_values(array_column($ReturnObj, 'field_asset_priority_rr_target_id'));    
    foreach($getGraphData as $getCount) {
    $getFinal += $getCount;
    }
    $cgetPer = array();
    $cgetLab = array();
    foreach($getGraphData as $riskKey => $risk) { 
    $cgetPer[] = round((($risk/$getFinal )*100) , 2);
    if(is_numeric($riskKey)){     
      $cgetLab[] =  _get_title_of_node($riskKey);     
    }
    }  */ 
    /*
    $getGraphData = array_count_values(array_column($ReturnObj, 'field_asset_priority_rr_target_id'));    
    foreach($getGraphData as $getCount) {
      $getFinal += $getCount;
    }
    $cgetPer = array();
    $cgetLab = array();
    $NewGpData = array();
    $NewGpDataArray = array();
    $NewGpDataArrayB = array();
    foreach($getGraphData as $riskKey => $risk) { 
      $cgetPer[] = round((($risk/$getFinal )*100) , 2);
      if(is_numeric($riskKey)){     
      $cgetLab[] =  _get_title_of_node($riskKey); 
      $NewGpData[_get_title_of_node($riskKey)] =  $risk;  
      $gname = "'"._get_title_of_node($riskKey)."'";
      $NewGpDataArray[] = array('name'=>_get_title_of_node($riskKey),'data'=>array($risk));   
      $NewGpDataArrayB[] = array('nid'=>$riskKey,'name'=>_get_title_of_node($riskKey),'data'=>array($risk));
      }
    }
    */
    //$NewGpDataArrayB = json_encode($NewGpDataArray);
    
    //drupal_add_js(array('m6connect_hcfm' => array('graphData'=>array('getGraphData' => $getGraphData,'getCgetPer' => $cgetPer,'GetcgetLab' => $cgetLab,'GetNewGpData' => $NewGpData,'NewGpDataArrayA' =>array('asset'=> $NewGpDataArray),'NewGpDataArrayB' => $NewGpDataArrayB))),'setting');

    $aMonth = array('January'=>1,'February'=>2,'March'=>3,'April'=>4,'May'=>5,'June'=>6,'July'=>7,'August'=>8,'September'=>9,'October'=>10,'November'=>11,'December'=>12);
$bMonth = array('J','F','M','A','M','J','J','A','S','O','N','D');
$dMonth = array('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
//drup_msg($ReturnObj);
$dataTargetId = array();
$dataMonth = array();
foreach ($ReturnObj as $key => $value) {
    if($dataTargetId[$value['field_asset_priority_rr_target_id']] != $aMonth[$value['asset_month']]){
        $dataTargetId[$value['field_asset_priority_rr_target_id']] = $aMonth[$value['asset_month']];
        $dataMonth[$value['field_asset_priority_rr_target_id']][$aMonth[$value['asset_month']]] = 1;
    }
    else{
        ++$dataMonth[$value['field_asset_priority_rr_target_id']][$aMonth[$value['asset_month']]];
    }
}
//pre($dataTargetId);
//pre($dataMonth);
//drup_msg($dataMonth);
$arr = array();

foreach ($dataMonth as $key => $monArr) {
    foreach ($monArr as $mon => $monValue) {
        for($i = 0; $i < 12; $i++)  {
            if($i+1 == $mon){
$arr[$key]['nid']= $key;
$arr[$key]['name']= _get_title_of_node($key);
                $arr[$key]['data'][$i] = $monValue;
            }
            else if(empty($arr[$key]['data'][$i])){
$arr[$key]['nid']= $key;
$arr[$key]['name']= _get_title_of_node($key);
                $arr[$key]['data'][$i] = 0;   

            }
        }
    }
}
    $DasColumnData = drupal_render(_hcfm_chart_intigration_column_stacking_inc($cgetPer,$dMonth,$arr,'asset','Asset by Risk'));
    //$DasColumnData = _hcfm_chart_intigration_column_stacking_inc($cgetPer,$cgetLab);    
    if (db_table_exists('m6cocnnect_hcfm_dashboard_tiles')){    
    db_merge('m6cocnnect_hcfm_dashboard_tiles')
        ->key(array('type' => 'asset', 'company' => $company->nid,'user'=>$user->uid))
        ->fields(array(
          'type' => 'asset',
      'company' => (isset($company,$company->nid) && !empty($company->nid)?$company->nid:'none'),
      'user' => $user->uid,
      'region' => (isset($RegionId) && !empty($RegionId)?$RegionId:NULL),     
      'site' => (isset($SiteId) && !empty($SiteId)?$SiteId:NULL), 
      'facility' => (isset($FacilityId) && !empty($FacilityId)?$FacilityId:NULL), 
      'zone' => (isset($ZoneId) && !empty($ZoneId)?$ZoneId:NULL), 
      'status' => (isset($StatusId) && !empty($StatusId)?$StatusId:NULL), 
      'filter' => (isset($FilterId) && !empty($FilterId)?$FilterId:NULL), 
      'timestamp' => time(),
    ))
    ->execute();    
    }
    $commands[] = ajax_command_replace(".asset-column-data-display", '<div class="asset-column-data-display">'.$DasColumnData.'</div>');
    
    $commands[] = ajax_command_invoke("a.unflip-btn022", 'trigger',array('click'));
  }
  }  
  return array('#type' => 'ajax','#commands' => $commands); 
}

function hcfm_update_image_remove_callback($fid,$nid,$ajax=TRUE) {
  global $company;
  if($fid != '') {  
    $getNodeData = node_load($nid);   
  
  if($getNodeData->type == 'fm_work_order') {
    if(isset($getNodeData->field_wo_attachement['und']) && !empty($getNodeData->field_wo_attachement['und'])) {
    foreach($getNodeData->field_wo_attachement['und'] as $key => $val) {
      if($val['fid'] == $fid) {
      unset($getNodeData->field_wo_attachement['und'][$key]);
      }   
    }
    reset($getNodeData->field_wo_attachement['und']);
    node_save($getNodeData);
    $resArr = array('NodeId' => $nid,'status' => 'updated');
    }
  }   
  }  
  else {
    $resArr = array('status' => 'notupdate');
  }    
  drupal_json_output($resArr);
  drupal_exit(0);
}

function select_add_attribute($var,$obj='title'){
  $output = '';
  if(isset($var, $obj) && !empty($var) && !empty($obj)){
  if($obj == 'title'){
    foreach($var as $key=>$value){
      $output[$key] = array('title'=>$value);
    }
  }
  }
  return $output;  
}

function get_company_city_by_country_state($country,$state,$ajax=TRUE){
  if(isset($country,$state) && !empty($country) && !empty($state)){
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_company_locations','fcl','fcl.entity_id=n.nid');
  $query->leftjoin('field_data_field_location_address','fla','fla.entity_id=fcl.field_company_locations_value');
  $query->fields('n',array('nid'));
  $query->fields('fcl',array('field_company_locations_value'));
  $query->fields('fla',array('field_location_address_country','field_location_address_thoroughfare','field_location_address_premise','field_location_address_locality','field_location_address_administrative_area','field_location_address_postal_code'));
  $query->condition('fla.field_location_address_country',$country,'=');
  $query->condition('fla.field_location_address_administrative_area',$state,'=');
  $query->condition('fla.field_location_address_locality','','!=');
  $query->condition('fla.bundle','field_company_locations','=');
  $query->condition('n.type','organization','=');
  $result = $query->execute()->fetchAllKeyed(5,5);
  if(isset($result) && !empty($result)){
    drupal_json_output($result);  
  }else{
    drupal_exit(0);
  }
  } 
}

function get_location_address($action,$nid,$ajax=TRUE){
  if(isset($action,$nid) && !empty($action) && !empty($nid)){
  if($action == 'region'){
    $VenderData = array();
    $VenderList = array();
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_locationregion_address','fcl','fcl.entity_id=n.nid');
    $query->fields('n',array('nid','title','uid'));
    $query->fields('fcl',array('field_locationregion_address_country','field_locationregion_address_thoroughfare','field_locationregion_address_premise','field_locationregion_address_locality','field_locationregion_address_administrative_area','field_locationregion_address_postal_code'));
    $query->condition('fcl.entity_id',$nid,'=');
    $query->condition('n.type','fm_location_region','=');
    $regionresult = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
    if(isset($regionresult) && !empty($regionresult )){
      $countryCode = $regionresult[$nid]['field_locationregion_address_country'];
      $stateCode = $regionresult[$nid]['field_locationregion_address_administrative_area'];
      $cityCode = $regionresult[$nid]['field_locationregion_address_locality'];
      $query1 = db_select('node','n');
      $query1->leftjoin('field_data_field_pref_vendor_country','pvco','pvco.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_state','pvst','pvst.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_city','pvci','pvci.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_com_users','pvcous','pvcous.entity_id=n.nid');
      $query1->fields('n',array('nid','title','uid'));
      $query1->fields('pvco',array('field_pref_vendor_country_value'));
      $query1->fields('pvst',array('field_pref_vendor_state_value'));
      $query1->fields('pvci',array('field_pref_vendor_city_value'));
      $query1->fields('pvcous',array('field_pref_vendor_com_users_value'));
      if(isset($countryCode ) && !empty($countryCode ) && $countryCode != '0'){
      $query1->condition('pvco.field_pref_vendor_country_value',$countryCode ,'=');
      }
      if(isset($stateCode ) && !empty($stateCode ) && $stateCode != '0'){
      $query1->condition('pvst.field_pref_vendor_state_value',$stateCode ,'=');
      }
      $query1->condition('n.type','fm_preferred_vendor','=');
      $vanderresult = $query1->execute()->fetchAll();
      if(isset($vanderresult ) && !empty($vanderresult )){
        foreach($vanderresult as $key=>$value){
        if(isset($value->field_pref_vendor_com_users_value ) && !empty($value->field_pref_vendor_com_users_value)){
          $data = json_decode($value->field_pref_vendor_com_users_value,TRUE);
          $VenderData[$data['company']]= $data['users'];      
        }
        }
      } 
    }
    if(isset($VenderData) && !empty($VenderData)){
      foreach($VenderData as $pdKey=>$vdValue){
      foreach($vdValue as $pd2Key=>$vd2Value){
        $senderData = _get_user_mail_realname_by_uid($vd2Value);
        $VenderList[$pdKey.'_'.$vd2Value]   =  _get_title_of_node($pdKey).' - '.$senderData['realname'];
      }
      }
    }
      if(isset($VenderList) && !empty($VenderList)){
      drupal_json_output($VenderList);  
    }else{
      drupal_exit(0);
    }
  }
  if($action == 'site'){
    $VenderData = array();
    $VenderList = array();
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_locationsite_address','fcl','fcl.entity_id=n.nid');
    $query->fields('n',array('nid','title','uid'));
    $query->fields('fcl',array('field_locationsite_address_country','field_locationsite_address_thoroughfare','field_locationsite_address_premise','field_locationsite_address_locality','field_locationsite_address_administrative_area','field_locationsite_address_postal_code'));
    $query->condition('fcl.entity_id',$nid,'=');
    $query->condition('n.type','fm_location_site','=');
    $regionresult = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
    if(isset($regionresult) && !empty($regionresult )){
      $countryCode = $regionresult[$nid]['field_locationsite_address_country'];
      $stateCode = $regionresult[$nid]['field_locationsite_address_administrative_area'];
      $cityCode = $regionresult[$nid]['field_locationsite_address_locality'];
      $query1 = db_select('node','n');
      $query1->leftjoin('field_data_field_pref_vendor_country','pvco','pvco.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_state','pvst','pvst.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_city','pvci','pvci.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_com_users','pvcous','pvcous.entity_id=n.nid');
      $query1->fields('n',array('nid','title','uid'));
      $query1->fields('pvco',array('field_pref_vendor_country_value'));
      $query1->fields('pvst',array('field_pref_vendor_state_value'));
      $query1->fields('pvci',array('field_pref_vendor_city_value'));
      $query1->fields('pvcous',array('field_pref_vendor_com_users_value'));
      if(isset($countryCode ) && !empty($countryCode ) && $countryCode != '0'){
      $query1->condition('pvco.field_pref_vendor_country_value',$countryCode ,'=');
      }
      if(isset($stateCode ) && !empty($stateCode ) && $stateCode != '0'){
      $query1->condition('pvst.field_pref_vendor_state_value',$stateCode ,'=');
      }
      $query1->condition('n.type','fm_preferred_vendor','=');
      $vanderresult = $query1->execute()->fetchAll();
      if(isset($vanderresult ) && !empty($vanderresult )){
        foreach($vanderresult as $key=>$value){
        if(isset($value->field_pref_vendor_com_users_value ) && !empty($value->field_pref_vendor_com_users_value)){
          $data = json_decode($value->field_pref_vendor_com_users_value,TRUE);
          $VenderData[$data['company']]= $data['users'];      
        }
        }
      } 
    }
    if(isset($VenderData) && !empty($VenderData)){
      foreach($VenderData as $pdKey=>$vdValue){
      foreach($vdValue as $pd2Key=>$vd2Value){
        $senderData = _get_user_mail_realname_by_uid($vd2Value);
        $VenderList[$pdKey.'_'.$vd2Value]   =  _get_title_of_node($pdKey).' - '.$senderData['realname'];
      }
      }
    }
      if(isset($VenderList) && !empty($VenderList)){
      drupal_json_output($VenderList);  
    }else{
      drupal_exit(0);
    }
  }
  if($action == 'facility'){
    $VenderData = array();
    $VenderList = array();
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_facility_address','fcl','fcl.entity_id=n.nid');
    $query->fields('n',array('nid','title','uid'));
    $query->fields('fcl',array('field_facility_address_country','field_facility_address_thoroughfare','field_facility_address_premise','field_facility_address_locality','field_facility_address_administrative_area','field_facility_address_postal_code'));
    $query->condition('fcl.entity_id',$nid,'=');
    $query->condition('n.type','fm_facility','=');
    $regionresult = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
    if(isset($regionresult) && !empty($regionresult )){
      $countryCode = $regionresult[$nid]['field_facility_address_country'];
      $stateCode = $regionresult[$nid]['field_facility_address_administrative_area'];
      $cityCode = $regionresult[$nid]['field_facility_address_locality'];
      $query1 = db_select('node','n');
      $query1->leftjoin('field_data_field_pref_vendor_country','pvco','pvco.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_state','pvst','pvst.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_city','pvci','pvci.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_com_users','pvcous','pvcous.entity_id=n.nid');
      $query1->fields('n',array('nid','title','uid'));
      $query1->fields('pvco',array('field_pref_vendor_country_value'));
      $query1->fields('pvst',array('field_pref_vendor_state_value'));
      $query1->fields('pvci',array('field_pref_vendor_city_value'));
      $query1->fields('pvcous',array('field_pref_vendor_com_users_value'));
      if(isset($countryCode ) && !empty($countryCode ) && $countryCode != '0'){
      $query1->condition('pvco.field_pref_vendor_country_value',$countryCode ,'=');
      }
      if(isset($stateCode ) && !empty($stateCode ) && $stateCode != '0'){
      $query1->condition('pvst.field_pref_vendor_state_value',$stateCode ,'=');
      }
      $query1->condition('n.type','fm_preferred_vendor','=');
      $vanderresult = $query1->execute()->fetchAll();
      if(isset($vanderresult ) && !empty($vanderresult )){
        foreach($vanderresult as $key=>$value){
        if(isset($value->field_pref_vendor_com_users_value ) && !empty($value->field_pref_vendor_com_users_value)){
          $data = json_decode($value->field_pref_vendor_com_users_value,TRUE);
          $VenderData[$data['company']]= $data['users'];      
        }
        }
      } 
    }
    if(isset($VenderData) && !empty($VenderData)){
      foreach($VenderData as $pdKey=>$vdValue){
      foreach($vdValue as $pd2Key=>$vd2Value){
        $senderData = _get_user_mail_realname_by_uid($vd2Value);
        $VenderList[$pdKey.'_'.$vd2Value]   =  _get_title_of_node($pdKey).' - '.$senderData['realname'];
      }
      }
    }
      if(isset($VenderList) && !empty($VenderList)){
      drupal_json_output($VenderList);  
    }else{
      drupal_exit(0);
    }
  }
  if($action == 'zone'){
    $VenderData = array();
    $VenderList = array();
    $query = db_select('node','n');
    $query->leftjoin('field_data_field_location_zone_address','fcl','fcl.entity_id=n.nid');
    $query->fields('n',array('nid','title','uid'));
    $query->fields('fcl',array('field_location_zone_address_country','field_location_zone_address_thoroughfare','field_location_zone_address_premise','field_location_zone_address_locality','field_location_zone_address_administrative_area','field_location_zone_address_postal_code'));
    $query->condition('fcl.entity_id',$nid,'=');
    $query->condition('n.type','fm_location_location','=');
    $regionresult = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
    if(isset($regionresult) && !empty($regionresult )){
      $countryCode = $regionresult[$nid]['field_location_zone_address_country'];
      $stateCode = $regionresult[$nid]['field_location_zone_address_administrative_area'];
      $cityCode = $regionresult[$nid]['field_location_zone_address_locality'];
      $query1 = db_select('node','n');
      $query1->leftjoin('field_data_field_pref_vendor_country','pvco','pvco.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_state','pvst','pvst.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_city','pvci','pvci.entity_id=n.nid');
      $query1->leftjoin('field_data_field_pref_vendor_com_users','pvcous','pvcous.entity_id=n.nid');
      $query1->fields('n',array('nid','title','uid'));
      $query1->fields('pvco',array('field_pref_vendor_country_value'));
      $query1->fields('pvst',array('field_pref_vendor_state_value'));
      $query1->fields('pvci',array('field_pref_vendor_city_value'));
      $query1->fields('pvcous',array('field_pref_vendor_com_users_value'));
      if(isset($countryCode ) && !empty($countryCode ) && $countryCode != '0'){
      $query1->condition('pvco.field_pref_vendor_country_value',$countryCode ,'=');
      }
      if(isset($stateCode ) && !empty($stateCode ) && $stateCode != '0'){
      $query1->condition('pvst.field_pref_vendor_state_value',$stateCode ,'=');
      }
      $query1->condition('n.type','fm_preferred_vendor','=');
      $vanderresult = $query1->execute()->fetchAll();
      if(isset($vanderresult ) && !empty($vanderresult )){
        foreach($vanderresult as $key=>$value){
        if(isset($value->field_pref_vendor_com_users_value ) && !empty($value->field_pref_vendor_com_users_value)){
          $data = json_decode($value->field_pref_vendor_com_users_value,TRUE);
          $VenderData[$data['company']]= $data['users'];      
        }
        }
      } 
    }
    if(isset($VenderData) && !empty($VenderData)){
      foreach($VenderData as $pdKey=>$vdValue){
      foreach($vdValue as $pd2Key=>$vd2Value){
        $senderData = _get_user_mail_realname_by_uid($vd2Value);
        $VenderList[$pdKey.'_'.$vd2Value]   =  _get_title_of_node($pdKey).' - '.$senderData['realname'];
      }
      }
    }
      if(isset($VenderList) && !empty($VenderList)){
      drupal_json_output($VenderList);  
    }else{
      drupal_exit(0);
    }
  }
  } 
}

function get_vender_company_user_list(){
  $VenderData = array();
  $VenderList = array();
  $query1 = db_select('node','n');
  $query1->leftjoin('field_data_field_pref_vendor_country','pvco','pvco.entity_id=n.nid');
  $query1->leftjoin('field_data_field_pref_vendor_state','pvst','pvst.entity_id=n.nid');
  $query1->leftjoin('field_data_field_pref_vendor_city','pvci','pvci.entity_id=n.nid');
  $query1->leftjoin('field_data_field_pref_vendor_com_users','pvcous','pvcous.entity_id=n.nid');
  $query1->fields('n',array('nid','title','uid'));
  $query1->fields('pvco',array('field_pref_vendor_country_value'));
  $query1->fields('pvst',array('field_pref_vendor_state_value'));
  $query1->fields('pvci',array('field_pref_vendor_city_value'));
  $query1->fields('pvcous',array('field_pref_vendor_com_users_value')); 
  $query1->condition('n.type','fm_preferred_vendor','=');
    $vanderresult = $query1->execute()->fetchAll();
  if(isset($vanderresult ) && !empty($vanderresult )){
    foreach($vanderresult as $key=>$value){
    if(isset($value->field_pref_vendor_com_users_value ) && !empty($value->field_pref_vendor_com_users_value)){
      $data = json_decode($value->field_pref_vendor_com_users_value,TRUE);
      $VenderData[$data['company']]= $data['users'];      
    }
    }
  } 
    if(isset($VenderData) && !empty($VenderData)){
    foreach($VenderData as $pdKey=>$vdValue){
    foreach($vdValue as $pd2Key=>$vd2Value){
      $senderData = _get_user_mail_realname_by_uid($vd2Value);
      $VenderList[$pdKey.'_'.$vd2Value]   =  _get_title_of_node($pdKey).' - '.$senderData['realname'];
    }
    }
  }
  return $VenderList;
}
function get_company_list_by_country_state_city($country,$state='',$city='',$ajax=TRUE){
  if(isset($country) && !empty($country) && $country){
  $db_or = db_or();
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_company_locations','fcl','fcl.entity_id=n.nid');
  $query->leftjoin('field_data_field_location_address','fla','fla.entity_id=fcl.field_company_locations_value');
  $query->fields('n', array('nid', 'title'));
  $query->fields('fcl',array('field_company_locations_value'));
  $query->fields('fla',array('field_location_address_country','field_location_address_thoroughfare','field_location_address_premise','field_location_address_locality','field_location_address_administrative_area','field_location_address_postal_code'));
  
  $query->condition('fla.field_location_address_country',$country,'=');
  if(isset($state) && !empty($state) && $state != '0'){
    $query->condition('fla.field_location_address_administrative_area',$state,'=');
  }
  if(isset($city) && !empty($city) && $city != '0'){
    $query->condition('fla.field_location_address_locality',$city,'=');
  }  
  $query->condition('fla.bundle','field_company_locations','=');
  $query->condition('n.type','organization','=');
  $result = $query->execute()->fetchAllKeyed(0,1);
  if(isset($result) && !empty($result)){
    drupal_json_output($result);  
  }else{
    drupal_exit(0);
  }
  }
}

function _get_company_all_users(){  
  $query = db_select ('node','n');  
  $query->leftJoin('field_data_field_type_of_company', 'tc', 'tc.entity_id = n.nid');
  $query->leftjoin('og_membership','om','om.gid=n.nid');
  $query->leftjoin('realname','r','om.etid=r.uid');
  $query->leftjoin('users','u','u.uid=om.etid');  
  $query->fields('u',array('uid'));
  $query->fields('r',array('realname'));
  $query->fields('n',array('nid','title'));
  $query->fields('tc',array('field_type_of_company_value'));  
  $query->condition('n.type','organization','=');

  $query->condition('om.entity_type','user','=');
  $query->condition('tc.field_type_of_company_value', 'company', '=');  
  $result = $query->execute()->fetchAllKeyed(0,1);
  return $result; 
}

function get_company_users_by_comnid($cmpNid,$ajax=TRUE){
  if(isset($cmpNid) && !empty($cmpNid) && $cmpNid != '0'){
  $query = db_select ('node','n');  
  $query->leftJoin('field_data_field_type_of_company', 'tc', 'tc.entity_id = n.nid');
  $query->leftjoin('og_membership','om','om.gid=n.nid');
  $query->leftjoin('realname','r','om.etid=r.uid');
  $query->leftjoin('users','u','u.uid=om.etid');  
  $query->fields('u',array('uid'));
  $query->fields('r',array('realname'));
  $query->fields('n',array('nid','title'));
  $query->fields('tc',array('field_type_of_company_value'));  
  $query->condition('om.gid', $cmpNid, '=');  
  $query->condition('n.type','organization','=');
  $query->condition('om.entity_type','user','=');
  $query->condition('tc.field_type_of_company_value', 'company', '=');  
  $result = $query->execute()->fetchAllKeyed(0,1);    
  if(isset($result) && !empty($result)){
    drupal_json_output($result);  
  }else{
    drupal_exit(0);
  }
  }
}

function _get_company_city($var=NULL){
  $comcity = array();
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_company_locations','fcl','fcl.entity_id=n.nid');
  $query->leftjoin('field_data_field_location_address','fla','fla.entity_id=fcl.field_company_locations_value');
  $query->fields('n', array('nid', 'title'));
  $query->fields('fcl',array('field_company_locations_value'));
  $query->fields('fla',array('field_location_address_country','field_location_address_thoroughfare','field_location_address_premise','field_location_address_locality','field_location_address_administrative_area','field_location_address_postal_code'));
  
  $query->condition('fla.field_location_address_country','','!=');
  $query->condition('fla.field_location_address_administrative_area','','!=');
  $query->condition('fla.field_location_address_locality','','!=');
  $query->condition('fla.bundle','field_company_locations','=');
  $query->condition('n.type','organization','=');
  $result = $query->execute()->fetchAllAssoc('nid', PDO::FETCH_ASSOC);
  if(isset($result) && !empty($result)){
    foreach($result as $nid=>$cvalue){
      $comcity[$cvalue['field_location_address_locality']]= $cvalue['field_location_address_locality'];
    }
  }
  return $comcity;
}

function m6connect_hcfm_invite_users() {
    $render_array['variable_to_print1'] = 'Foo';
    $render_array['variable_to_print2'] = 'Bar';
    return theme('m6connect_hcfm_contents', $render_array);
}

function hcfm_people_section_invite_access_callback() { 
  global $user;
  $nid = arg(3);
  /*if (isset($_SESSION['company']) && is_numeric($_SESSION['company']) && !is_company_individual_flag($_SESSION['company'])) {
    if (isset($user->roles[4]) || isset($user->roles[5])) {
      return TRUE;
    }
  }
  return FALSE;*/
  if(isset($nid) && is_numeric($nid) && !is_company_individual_flag($nid)){
    $user_og_roles = og_get_user_roles('node', $nid, $user->uid);
    if(in_array('company admin', $user_og_roles)){
     return TRUE;  
    }
    if(in_array('administrator member', $user_og_roles)){
    return TRUE;  
    }
  
  }
  return FALSE;
}

function m6connect_hcfm_invite_users_submit() {
  global $user,$base_url,$base_path;
  $companyNid = $_POST['companyNid'];
  $companyTitle = _get_title_of_node($companyNid);
  $senderData = _get_user_mail_realname_by_uid($user->uid);
  $signUpLink = '';
  $FinalHello = ''; 
  $HasUser = '';
    foreach ($_POST['email'] as $key => $value) {   
    if ($value !== '') {      
    $params = _get_mail_variables($mailkey, $type = 'company', $user, $other = array('email' => $value,'company_nid' => $companyNid));
    $to = $value;
    $HasUser = _get_user_details_by_og_email($value);
    if (isset($_POST['firstname'][$key],$_POST['lastname'][$key]) && !empty($_POST['firstname'][$key]) &&  !empty($_POST['lastname'][$key])) {      
      $FinalHello = $_POST['firstname'][$key].' '.$_POST['lastname'][$key];
    }else if (isset($_POST['firstname'][$key]) && !empty($_POST['firstname'][$key]) &&  empty($_POST['lastname'][$key])) {
      $FinalHello = $_POST['firstname'][$key];
    }else if (isset($_POST['lastname'][$key]) && empty($_POST['firstname'][$key]) &&  !empty($_POST['lastname'][$key])) {
      $FinalHello = $_POST['lastname'][$key];
    }else if(empty($_POST['firstname'][$key]) &&  empty($_POST['lastname'][$key])){       
      if(isset($HasUser) && !empty($HasUser)){
      $FinalHello = $HasUser->realname;
      $existingUser= user_load($HasUser->uid);      
        $existingUser->field_hcfm_status['und'][0]['value'] = 'active';     
        user_save((object) array('uid'=>$HasUser->uid), (array) $existingUser);
      }else{
      $FinalHello = $to;
      }
    }
    if(isset($HasUser) && !empty($HasUser)){
      $signUpLink = l('Join Company', $base_url . $base_path . 'join/organization', array('external' => true, 'query' => array('company' => $companyNid,'invitejoinrequesterfrom'=>$user->uid,'invitejoinrequesterto'=>$uuser->uid)));
      
    }else{
      $email_encoded = rtrim(strtr(base64_encode($to), '+/', '-_'), '=');
  
      $signUpLink = l('Sign Up', $base_url . $base_path . 'user/register', array('external' => true, 'query' => array('request-id' => $companyNid,'hcfm-invite-mail'=>$email_encoded)));
      if (db_table_exists('m6connect_hcfm_user_invite')){     
      $m6connect_vender = array (
        'mail_uid' => $to,
        'first_name' => $_POST['firstname'][$key],
        'last_name' => $_POST['lastname'][$key],
        'company_nid' => $companyNid,     
        'status' => 1,
        'timestamp' => time() 
      );      
      db_insert('m6connect_hcfm_user_invite')->fields($m6connect_vender)->execute();
      }
    }
    
    
     
    
    $message = 'Hello '.$FinalHello.',<br>
    '.$senderData['realname'].' has invited you to join his company '.$companyTitle.' on M6Connect.<br>   
    Please click the link below to join them today<br>    
    '.$signUpLink.'<br><br>   
    Thank you,<br>    
    M6Connect Support<br>   
    support@m6connect.com';
    $params = array (
      'subject' => 'Your are invited to join M6Connent',
      'sender' => $user->mail,
      'body' => $message,
      'language' => language_default(),
      'key' => 'hcfm_mail___invite_user_by_company',
      'module' => 'm6connect_misc',
    );    
    $mail = drupal_mail ($params['module'], $params['key'], $to,$params['language'], $params );
    

    }  
    }    
  drupal_set_message('Successfully Invited');
}

function m6connect_hcfm_invite_list_users(){
    global $user;
  $output = '';
  $header = array('SrNo.','Mail','Action');
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $q = db_select('m6connect_hcfm_user_invite','hcfmui');
$q->fields('hcfmui');
$result = $q->execute()->fetchAll();
  if($result && ! empty ( $result )){
    // Convert Array as per Risk rank 
    $rankItems = array();

     
      foreach($result as $rankDeltaKey => $rankDeltaVal) {
      $action = '<div class="btn-group hcfm-action-btn">
         <div class="dropdown">
         <button id="dLabel" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
         <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
           <li>
           '.l('Resend', url('hcfm-invite-action/resend/'.$rankDeltaVal->mail_uid.'/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax'))) ).'
           </li>
           <li>
           '.l('Delete', url('hcfm-invite-action/delete/'.$rankDeltaVal->mail_uid.'/nojs'), array( 'external'=>TRUE, 'attributes'=> array('class'=>array('use-ajax','listing-row-delete')))).'
           </li>';
      $action .= '</ul>
           </div>
           </div>'; 
      $rows [] = array (
        'data' => array (
          array (
          'data' => $rankDeltaKey,
          'class' => array (
          'view-work-order-number' 
          )
          ),
          array (
          'data' => $rankDeltaVal->mail_uid,
          'class' => array (
          'view-work-order-title' 
          )
          ),
          array (
          'data' => $action,
          'class' => array (
          'view-work-order-action' 
          )
          ),      
        ),
        'class' => array (
          'listing-row-' . $rankDeltaKey,
        'hcfm-invite-row'
        ) 
        );
      }
        
    }

    $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'hcfm-invite-detail-table',
          'class' => array (
              'hcfm-invite-detail-table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  return $output;
}

function m6connect_hcfm_member_list_users(){
    global $user;
  $output = '';
  $header = array('SrNo.','Name','Mail','Status');
  foreach($headervalue as $HValue){
  $header[]=array(
    'data' =>  $HValue,
    'class' => array(
      'text-left' 
    ) 
  );

  }
  
  $rows = array ();
  $q = db_select('field_data_field_hcfm_status','hcfmui');
  $q->leftjoin('users','u','u.uid=hcfmui.entity_id');
  $q->leftjoin ( 'realname', 'r', 'r.uid=u.uid' );  
  $q->fields('u',array('uid','name','mail'));
  $q->fields('r',array('realname'));
  $q->fields('hcfmui',array('field_hcfm_status_value'));
  $result = $q->execute()->fetchAll();
  if($result && ! empty ( $result )){
    // Convert Array as per Risk rank 
    $rankItems = array();

     
      foreach($result as $rankDeltaKey => $rankDeltaVal) {
      $rows [] = array (
        'data' => array (
          array (
          'data' => $rankDeltaKey,
          'class' => array (
          'view-work-order-number' 
          )
          ),
          array (
          'data' => $rankDeltaVal->realname,
          'class' => array (
          'view-work-order-title' 
          )
          ),
        array (
          'data' => $rankDeltaVal->mail,
          'class' => array (
          'view-work-order-title' 
          )
          ),
          array (
          'data' => $rankDeltaVal->field_hcfm_status_value,
          'class' => array (
          'view-work-order-action' 
          )
          ),      
        ),
        'class' => array (
          'listing-row-' . $rankDeltaKey 
        ) 
        );
      }
        
    }

    $output .= theme ( 'table', array (
      'header' => $header,
      'rows' => $rows,
      'empty' => 'Not Available Yet',
      'attributes' => array (
          'id' => 'work-order-detail-table',
          'class' => array (
              'work-order-detail-table',
              'table',
              'table-bordered',
              'm6connect-custom-table',
              'table-hover',
              'table-striped' 
          ) 
      ),
      'sticky' => FALSE 
  ) );
  return $output;
}

function get_hcfm_internal_resources_list($comNid=NULL,$userUid=NULL){
  $output = '';
  $q = db_select('field_data_field_hcfm_status','hcfmui');
  $q->leftjoin('users','u','u.uid=hcfmui.entity_id');
  $q->leftjoin ( 'realname', 'r', 'r.uid=u.uid' );  
  $q->fields('u',array('uid','name','mail'));
  $q->fields('r',array('realname'));
  $q->fields('hcfmui',array('field_hcfm_status_value'));
  $result = $q->execute()->fetchAllKeyed(0,3);
  if($result && ! empty ( $result )){
    $output = $result;
  }
  return $output;
}



function hcfm_invite_action_callback($Action,$mailid,$ajax){
  global $user,$base_url,$base_path;  
  ctools_include('ajax');
  $commands = array();
  if(isset($Action,$mailid) && !empty($Action) && !empty($mailid)){
  if($Action == 'resend'){    
    $q = db_select('m6connect_hcfm_user_invite','hcfmui');
    $q->fields('hcfmui');
    $q->condition('hcfmui.mail_uid',$mailid,'=');
    $result = $q->execute()->fetchAllAssoc('mail_uid', PDO::FETCH_ASSOC); 
    
    if (isset($result[$mailid]['first_name'],$result[$mailid]['last_name']) && !empty($result[$mailid]['first_name']) &&  !empty($result[$mailid]['last_name'])) {      
    $FinalHello = $result[$mailid]['first_name'].' '.$result[$mailid]['last_name'];
    }else if (isset($result[$mailid]['first_name']) && !empty($result[$mailid]['first_name']) &&  empty($result[$mailid]['last_name'])) {     
    $FinalHello = $result[$mailid]['first_name'];
    }else if (isset($result[$mailid]['last_name']) && empty($result[$mailid]['first_name']) &&  !empty($result[$mailid]['last_name'])) {      
    $FinalHello = $result[$mailid]['first_name'].' '.$result[$mail]['last_name'];
    }else if (empty($result[$mailid]['first_name']) &&  empty($result[$mailid]['last_name'])) {     
    $FinalHello = $result[$mailid]['mail_uid'];
    }
    $companyNid =  $result[$mailid]['company_nid'];
    $companyTitle = _get_title_of_node($companyNid);
      $senderData = _get_user_mail_realname_by_uid($user->uid); 
    $email_encoded = rtrim(strtr(base64_encode($mailid), '+/', '-_'), '='); 
    $signUpLink = l('Sign Up', $base_url . $base_path . 'user/register', array('external' => true, 'query' => array('request-id' => $companyNid,'hcfm-invite-mail'=>$email_encoded)));  
    $message = 'Hello '.$FinalHello.',<br>
    '.$senderData['realname'].' has invited you to join his company '.$companyTitle.' on M6Connect.<br>   
    Please click the link below to join them today<br>    
    '.$signUpLink.'<br><br>   
    Thank you,<br>    
    M6Connect Support<br>   
    support@m6connect.com';
    $params = array (
    'subject' => 'Your are invited to join M6Connent',
    'sender' => $user->mail,
    'body' => $message,
    'language' => language_default(),
    'key' => 'hcfm_mail___invite_user_by_company',
    'module' => 'm6connect_misc',
    );    
    $sendmail = drupal_mail ($params['module'], $params['key'], $mailid,$params['language'], $params );
    //drupal_set_message('Successfully Invited');
    //drup_msg($sendmail);
    $commands[] = ajax_command_alert('Successfully Invited');
  }
  if($Action == 'delete'){
    db_delete('m6connect_hcfm_user_invite')
    ->condition('mail_uid',$mailid)
    ->execute();
    
  }   
  }
  print ajax_render($commands);
  exit;
}

function m6connect_hcfm_dashboard_switch_dashboard($type, $uid, $ajax = null) {
    module_load_include('inc', 'statuses', 'includes/utility/statuses.form');
    $path = drupal_get_path('module', 'statuses') . '/resources';
    ctools_include('modal');
    ctools_include('ajax');
    $user = user_load($uid);
    $form = render(drupal_get_form('statuses_box', $user, 'hcfm_user')); //render(drupal_get_form('statuses_box', $node, 'og'));
  
//    $form .= "<script>Drupal.attachBehaviors(jQuery('#block-statuses-statuses'));";
    $commads = array();
    $commads[] = ctools_modal_command_dismiss();
    $commads[] = ajax_command_html('.hcfm_timeline_outer .hcfm_cutom_statuses_box', $form);
    $commads[] = ajax_command_html('#dLabel2', ucfirst($user->realname));
    $commads[] = array("command" => 'add_from_elements', 'selector' => '.hcfm_timeline_outer');

//
    print ajax_render($commads);
    exit();
}
function hcfm_dashboard_tile_configure($action,$delta, $ajax = null) {
  global $user, $company; 
  if (db_table_exists('m6connect_hcfm_tile_configure') && !empty($delta) && isset($delta,$action)){   
    db_merge('m6connect_hcfm_tile_configure')
    ->key(array('company_nid' => $company->nid,'user_uid'=>$user->uid))
    ->fields(array(
      'company_nid' => (isset($company,$company->nid) && !empty($company->nid)?$company->nid:'none'),
      'user_uid' => $user->uid,
      'data' => $delta,
      'status' => 1,  
      'timestamp' => time(),
    ))
    ->execute();
  } 
}

function get_hcfm_dashboard_tile_configure($action, $ajax = TRUE) {
  global $user, $company;
  if($action == 'retrive'){ 
    $query = db_select('m6connect_hcfm_tile_configure', 'hcfmtc');
    $query->fields('hcfmtc',array('data'));
    $query->condition('hcfmtc.user_uid',$user->uid,'=');
    $query->condition('hcfmtc.company_nid',$company->nid,'=');
    $tresult = $query->execute()->fetchColumn(0);
    if(isset($tresult) && !empty($tresult)){  
      drupal_json_output($tresult);
      drupal_exit(0);   
    } 
  } 
}



function m6connect_hcfm_chart_definition_alter(&$definition, $chart, $chart_id) { //drup_msg($chart_id);
  global $user,$company;
  $Chart3D = array('work_orders_open_pm','work_orders_open_cm','work_orders_open_projects');
  $ChartDount = array('work_orders_on_hold');
  if ($chart['#chart_type'] == 'pie') {    
    if(in_array($chart_id,$ChartDount)){
      $definition['chart']['options3d'] = array('enabled'=> true, 'alpha' => 40, 'beta' => 0);
      $definition['plotOptions']['pie'] = array( 'innerSize' => 50, 'depth' => 40, 'allowPointSelect' => true, 'cursor' => 'pointer', 'dataLabels'=> array( 'enabled' =>true, 'format' => '{point.name}' ) );
      $definition['tooltip']= array('pointFormat'=>' {point.x}: <b>{point.percentage:.1f}%</b>');
    }  
    if(in_array($chart_id,$Chart3D)){        
      $definition['chart']['options3d'] = array('enabled'=> true, 'alpha' => 40, 'beta' => 0);
      $definition['plotOptions']['pie'] = array( 'innerSize' => 0, 'depth' => 40, 'allowPointSelect' => true, 'cursor' => 'pointer', 'dataLabels'=> array( 'enabled' =>true, 'format' => '{point.name}' ) );
      $definition['tooltip']= array('pointFormat'=>' {point.x}: <b>{point.percentage:.1f}%</b>');
    }
  }
  if($chart['#chart_type'] == 'pyramid'){
    //$definition['chart']['options3d'] = array('enabled'=> true, 'alpha' => 45, 'beta' => 0);
    $definition['tooltip']['pointFormat'] = '{point.percentage:.1f}%';
    $definition['plotOptions']['series'] = array('dataLabels'=> array('style'=>array('width'=> "10px"),'enabled' => true, /*'format' => '{point.y:.0f}%',*/ 'color' => '(Highcharts.theme && Highcharts.theme.contrastTextColor)' || 'black', 'softConnector' => true ) );
    $definition['title']['x'] = 5;
   $definition['chart']['marginRight'] = 150;
   $definition['chart']['marginBottom'] = 30;
    //drup_msg($definition);
     // drup_msg($chart);
  }
  if($chart_id == 'available_labor'){
    $chart['#stacking']= FALSE;
  }
  if($chart_id == 'square_foot'){    
    $definition['plotOptions']['pie'] = array('size'=> 100,'center'=> array(30, 30),'dataLabels'=> array('enabled'=> false));    
     $current_path = current_path();
    if (strpos($current_path,'hcfm')!==FALSE && $user->uid ==2) {
      //drup_msg($definition);
      //drup_msg($chart);
    }  
  }
  if($chart_id == 'labor_forecast'){    
    $definition['chart']['options3d'] = array('enabled'=> true, 'alpha' => 15, 'beta' => 15,'viewDistance'=>25,'depth' => 40);
    $definition['plotOptions']['column'] = array( 'stacking' => 'normal','depth' => 40);  
    //$definition['series'][0] = array( 'stacking' => 'normal','depth' => 40);
    if(isset($definition,$definition['series'][0]) && !empty($definition['series'][0]) && $definition['series'][0]['name'] ='FTE Available'){
      $stack = $definition['series'][0]['stack'] =  'FTE Available';
      ////array_push($definition['series'][0],$stack);
      array_merge($definition['series'][0],$stack);
    }
    //drup_msg($definition);
    //drup_msg($chart);
  }
  if($chart_id == 'labor_use_rate'){  
    if(isset($definition,$definition['series'][1]) && !empty($definition['series'][1]) && $definition['series'][1]['name'] ='Total Wo Time Charge'){
      $pointPadding = $definition['series'][1]['pointPadding'] =  0.2;
      ////array_push($definition['series'][0],$stack);
      array_merge($definition['series'][1],$pointPadding);
    }  
    $definition['plotOptions']['column'] = array( 'grouping' => false);
  }
  if($chart_id == 'fte_square_foot'){
    $definition['yAxis'] = array(
      'min'=> 0,
      'max'=> 100000,
      'minorTickInterval'=> 'auto',
      'minorTickWidth'=> 1,
      'minorTickLength'=> 10,
      'minorTickPosition'=> 'inside',
      'minorTickColor'=> '#666',
      'tickPixelInterval'=> 30,
      'tickWidth'=> 2,
      'tickPosition'=> 'inside',
      'tickLength'=> 10,
      'tickColor'=> '#666',
      'labels'=> array(
        'step'=> 2,
        'rotation'=> 'auto'
      ),
      'title'=> array(
        'text'=> 'Sf/Fte'
      ),
      'plotBands'=>array(array(
        'from'=> 0,
        'to'=> 60000,
        'color'=> '#55BF3B' // green
      ), array(
        'from'=> 60000,
        'to'=> 80000,
        'color'=> '#DDDF0D' // yellow
      ), array(
        'from'=> 80000,
        'to'=> 100000,
        'color'=> '#DF5353' // red
      ))    
    );
    $definition['pane'] = array(
      'startAngle'=> -150,
      'endAngle'=> 150,/*
      'background'=> array(
        array('backgroundColor'=> array(
          'linearGradient'=> array( 'x1'=> 0, 'y1'=> 0, 'x2'=> 0, 'y2'=> 1 ),
          'stops'=> array(
            array(0, '#FFF'),
            array(1, '#333')
          ),
        ),
        'borderWidth'=> 0,
        'outerRadius'=> '109%'
      ), array(
        'backgroundColor'=> array(
          'linearGradient'=> array( 'x1'=> 0, 'y1'=> 0, 'x2'=> 0, 'y2'=> 1 ),
          'stops'=> array(
            array(0, '#333'),
            array(1, '#FFF')
          ),
        ),
        'borderWidth'=> 1,
        'outerRadius'=> '107%'
      ), array(
        'backgroundColor'=> '#DDD',
        'borderWidth'=> 0,
        'outerRadius'=> '105%',
        'innerRadius'=> '103%'
      ))*/
    );    
  }
  if($chart_id == 'available_labor'){
   $current_path = current_path();
    //if (strpos($current_path,'hcfm')!==FALSE && $user->uid ==2) {
      //$definition['title'] = array('align'=> 'left','margin'=> 0,'x'=> 30,'text'=>$chart['#title']);
      $definition['yAxis']['title'] = array('margin'=> 10,'x'=> 0,'text'=>$chart['#title']);
      $definition['title'] = array('text'=>false);
      //$definition['xAxis'] = array('crosshair'=> true,'events'=>array(/* setExtremes: syncExtremes*/),'labels'=>array('format' =>'{value} km'));

      /*$definition['tooltip'] = array(
          'tooltip'=> array(
            'borderWidth'=> 0,
            'backgroundColor'=> 'none',
            'pointFormat'=> '{point.y}',
            'headerFormat'=> '',
            'shadow'=> false,
            'style'=> array(
                'fontSize'=> '18px',
            ),
                    
        ));*/
      //drup_msg($definition);
      //drup_msg($chart);  
    //} 
 }
}

function m6connect_hcfm_charts_type_info() {
  $chart_types['pyramid'] = array(
    'label' => t('Pyramid'),
    'axis' => CHARTS_DUAL_AXIS,
  );
  $chart_types['gauge'] = array(
    'label' => t('Gauge'),
    'axis' => CHARTS_SINGLE_AXIS,
  );
  return $chart_types;

}



function addArrays($arrOne, $arrTwo){
    if(empty($arrOne)){ $arrOne = array(); }
    if(empty($arrTwo)){ $arrTwo = array(); }
    $arrFinal = $arrOne;
    foreach ($arrTwo as $key=>$value) {

        if(!isset($arrFinal[$key])){
            //If key not exist in array one, define data type same as array two.
            if(is_array($value)){
                $arrFinal[$key] = array();
            }
            else if(is_string($value)){
                $arrFinal[$key] = 0;
            }
            else{
                $arrFinal[$key] = NULL;
            }
        }

        if(empty($arrFinal[$key]) && !empty($value)){
            $arrFinal[$key] = $value;
        }
        else if(gettype($arrFinal[$key]) != gettype($value)){
            continue;
        }
        else if(!is_array($value) && !is_object($value)){
            $arrFinal[$key] += $value;
        }
        else if(is_array($value) && !is_object($value)){
            $arrFinal[$key] = addArrays($arrFinal[$key], $value);
        }
        else if(is_string($value) || is_int($value) || is_float($value)){
            $arrFinal[$key] += $value;
        }
        else{
            $arrFinal[$key] = $value;
        }
    }

    return $arrFinal;
}

function user_or_administrator_data($uid=NULL){
  global $user;  
  $return = TRUE;
  $useruid = (isset($uid) && !empty($uid)?$uid:$user->uid);
  $query = db_select('m6connect_hcfm_user_or_administrator_data','uoa');
  $query->fields('uoa',array('uid'));
  $query->condition('uoa.uid',$useruid,'=');
  $result = $query->execute()->rowCount();
  if(isset($result) && !empty($result)){
    $return = FALSE;
  }
  return $return;
}

function hcfm_assetlist_by_gusercom_get($action){
  global $user,$company;
  $output = '';
  if(isset($action) && !empty($action)){
    if($action == 'description'){
      $query = db_select('node','n');
      $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
      $query->leftjoin('field_data_field_asset_description','fsd','fsd.entity_id=n.nid');
      $query->fields('n',array('nid','title'));
      $query->fields('fsd',array('field_asset_description_value'));
      $query->condition('n.type','fm_asset','=');
      $query->condition('n.uid',$user->uid,'=');
      $query->condition('ogm.gid',$company->nid,'=');
      $output = $query->execute()->fetchAllkeyed(0,2);
    }
    if($action == 'number'){
      $query = db_select('node','n');
      $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
      $query->leftjoin('field_data_field_asset_number','fsd','fsd.entity_id=n.nid');
      $query->fields('n',array('nid'));
      $query->fields('fsd',array('field_asset_number_value'));  
      $query->condition('n.type','fm_asset','=');
      $query->condition('n.uid',$user->uid,'=');
      $query->condition('ogm.gid',$company->nid,'=');
      $output = $query->execute()->fetchAllkeyed(0,1);
    }
  }
  if(isset($output) && !empty($output)){  
    drupal_json_output($output);
    drupal_exit(0);   
  } 
}

function _get_asset_number($nid){
  $query = db_select('node','n');
  $query->leftjoin('og_membership','ogm','ogm.etid=n.nid');
  $query->leftjoin('field_data_field_asset_number','fsd','fsd.entity_id=n.nid');
  $query->fields('n',array('nid'));
  $query->fields('fsd',array('field_asset_number_value'));  
  $query->condition('n.type','fm_asset','=');
  $query->condition('n.nid',$nid,'=');  
  $output = $query->execute()->fetchColumn(1);
  return $output;
}


function test_form($form,$form_state){

   $form['asset_pictures'] = array(
  '#title' => t('Pictures'),
  '#type' => 'managed_file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-pictures'
    )
  ),
  '#upload_location' => 'public://', 
  '#prefix' => '<div class="project-details-border"><div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  '#field_prefix' => '<div class="picture-preview-out"></div>',
  );

  $form['asset_attachment_one'] = array(
  '#title' => t('Attachment'),
  '#type' => 'file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-attachment-one'
    )
  ),
  '#upload_location' => 'public://', 
    '#name' => 'attach1[]',
  '#field_prefix' => '<div class="hcfm-asset-image-preview"></div>',
  '#description' => t('Use CTRL + Click to choose multiple attachments.'),
    '#attributes' => array('multiple' => 'multiple'),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  );

  $form['asset_attachment_two'] = array(
  '#title' => t('Attachment'),
  '#type' => 'file',
  '#attributes' => array(
    'class'=> array(
      'clear-data',
      'asset-attachment-two'
    )
  ),
  '#upload_location' => 'public://', 
    '#name' => 'attach2[]',
  '#field_prefix' => '<div class="hcfm-asset-image-preview"></div>',
  '#description' => t('Use CTRL + Click to choose multiple attachments.'),
    '#attributes' => array('multiple' => 'multiple'),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  );
  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Save'),  
  );

 return $form;
  
}

function test_form_validate($form, &$form_state) {  pre($_FILES);    
  $values = $form_state ['values'];
  
  if(isset($_FILES['attach1'])) {
  $fileCount1 = count($_FILES['attach1']['name']);
  for ($i = 0; $i < $fileCount1; $i++) {      
    $file1 = custom_file_save_upload($i, 'attach1',FILE_EXISTS_REPLACE);     
    if ($file1) {   
    if ($file_move1 = file_move($file1, 'public://')) {
      $form_state['values']['asset_attachment_one'][$i] = $file_move1;
    } 
    }
  }
  }
  if(isset($_FILES['attach2'])) {
  $fileCount2 = count($_FILES['attach2']['name']);
  //pre('attach2');  
  for ($j = 0; $j < $fileCount2; $j++) {
    $file2 = custom_file_save_upload($j, 'attach2',FILE_EXISTS_REPLACE);
   //pre((array) $file2);
    if ($file2) {  
   // pre('file1'); 
    if ($file_move2 = file_move($file2, 'public://')) {
      
      $form_state['values']['asset_attachment_two'][$j] = $file_move2;
    } 
    }
  }
  }
//pre($_FILES);
  pre($form_state ['values'],1);
}

function test_form_submit($form,&$form_state){
  pre($form_state,1);
}