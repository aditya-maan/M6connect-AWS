<?php
/**
 * @file sub module for m6drive
 */

function m6drive_sub_menu() {

  $items['driveshare-user-list/%/%/%ctools_js'] = array(
  'page callback' => 'm6drive_sub_shared_user_list_callback',
  'page arguments' => array(1,2,3),
  'access callback' => '_is_m6_user_logged_in',
  );
  $items['m6drive-remove-share-user/%/%/%/%ctools_js'] = array(
  'page callback' => 'm6drive_remove_share_user_list_callback',
  'page arguments' => array(1,2,3,4),
  'access callback' => '_is_m6_user_logged_in',
  );
   $items['provide-drive-space/%/%ctools_js'] = array(
  'page callback' => 'provide_drive_space_callback',
  'page arguments' => array(1,2),
  'access arguments' => array('administer users'),
  );
  $items['project-drive-share-list/%/%/%/%ctools_js'] = array(
  'page callback' => 'project_drive_share_user_list_callback',
  'page arguments' => array(1,2,3,4),
  'access callback' => '_is_m6_user_logged_in',
  );
   $items['project-drive-remove-share-user/%/%/%/%/%ctools_js'] = array(
  'page callback' => 'project_drive_remove_share_user_callback',
  'page arguments' => array(1,2,3,4,5),
  'access callback' => '_is_m6_user_logged_in',
  );
  $items['m6drive/search'] = array(
    //'title' => t('Search Drive'),
    'page callback' => 'm6drive_sub_personal_drive_serach_content',
    'page arguments' => array('personal'),
    'access callback' => '_is_m6_user_logged_in',
  );

  $items['project/search'] = array(
    'page callback' => 'm6drive_sub_personal_drive_serach_content',
    'page arguments' => array('project'),
    'access callback' => '_is_m6_user_logged_in',
  );

  $items['getbreadcrumb/%/%ctools_js'] = array(
  'page callback' => 'm6drive_breadcrumb_for_search_folder_up',
  'page arguments' => array(1,2),
  'access callback' => '_is_m6_user_logged_in',
  );

  /// Add Here For drag and Drop folder and files
  $items['folders-drag-drop/%/%'] = array(
  'page callback' => 'm6drive_folders_drag_drop_callback',
  'page arguments' => array(1,2),
  'access callback' => '_is_m6_user_logged_in',
  );

  $items['m6drive-project-restore-trash/%/%/%ctools_js'] = array(
    'page arguments' => array(1,2,3),
    'page callback' => 'm6drive_project_restore_trash_callback',
    'access callback' => '_is_m6_user_logged_in',
  );

  $items['project-drive-delete-permanent-trash/%/%/%ctools_js'] = array(
    'page arguments' => array(1,2,3),
    'page callback' => 'project_drive_delete_permanent_trash_callback',
    'access callback' => '_is_m6_user_logged_in',
  );
  // Project drive folder Darg and Drop
   $items['project-drive-drag-drop/%/%/%'] = array(
  'page callback' => 'project_drive_folders_dragdrop_callback',
  'page arguments' => array(1,2,3),
  'access callback' => '_is_m6_user_logged_in',
  );
  /// Add Here For drag and Drop folder and files
  // $items['shared-folders-drag-drop/%/%'] = array(
  // 'page callback' => 'm6drive_shared_folders_drag_drop_callback',
  // 'page arguments' => array(1,2),
  // 'access callback' => '_is_m6_user_logged_in',
  // );
  return $items;
}
function m6drive_sub_shared_user_list_callback($type, $folderidorfid, $ajax=NULL){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js'); 
 global $user;
 global $company;
  ctools_include('modal');
  ctools_include('ajax');
  $output2 = array();

  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Close" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click(); Drupal.attachBehaviors();')));

  if($type == 'folder' && is_numeric($folderidorfid)){

     $query = db_select('m6connect_m6drive_shared','srd');
     $query->fields('srd',array('id','folder_id','share_by_uid','share_to_uid'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.folder_id',$folderidorfid, '=');
     $result = $query->execute()->fetchAll();

     $output = '<div class="m6drive-share-user-listing onboarding-inter-company-messaging">';
     $output .='<div class="appr-feedback-notes-block" id="edit-main-container">';
     $output .='<div class="ins-feed-notes-title margin-bottom-10 clearfix"><span class="ins-notes-title clearfix text-center">M6 Drive Share User List</span></div>';
     $output .= '<div class="margin-bottom-10 clearfix">'; 
     $output .='<div class="ins-feed-sub-title margin-bottom-10 clearfix">';
     foreach($result  as $key => $values) {
      $sharetouid =  $values->share_to_uid;
      if(!empty($values->share_to_uid)){
      $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
      } 
        $output .='<div class="clearfix margin-bottom-10 drive-user-share-del-'.$values->share_to_uid.'-'.$company->nid.'-row"><div class="sub-title pull-left">' . l(($UserFnameLname['realname']), 'user/'.$values->share_to_uid,   array('html' => TRUE, 'attributes' => array('title' => $UserFnameLname['realname'],'class'=>''))) . '</div>
         <div class="sub-title pull-right">' . l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'm6drive-remove-share-user/folder/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs',   array('html' => TRUE, 'attributes' => array('title' => '','class'=>'use-ajax'))) . '</div>
        </div>';      
     }
     $output .= '</div>'; 
     $output .='</div></div>';
     $output .= '<div class="clearfix text-right">'.$closeButton.'</div></div>';
  }
  if($type == 'file' && is_numeric($folderidorfid)){

     $query = db_select('m6connect_m6drive_shared','srd');
     $query->fields('srd',array('id','fid','share_by_uid','share_to_uid'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.fid',$folderidorfid, '=');
     $result = $query->execute()->fetchAll();

     $output = '<div class="m6drive-share-user-listing onboarding-inter-company-messaging">';
     $output .='<div class="appr-feedback-notes-block" id="edit-main-container">';
     $output .='<div class="ins-feed-notes-title clearfix margin-bottom-10"><span class="ins-notes-title clearfix text-center">Share User List</span></div>';
     $output .= '<div class="clearfix margin-bottom-10">'; 
     $output .='<div class="ins-feed-sub-title clearfix margin-bottom-10">';
     foreach($result  as $key => $values) {
      $sharetouid =  $values->share_to_uid;
      if(!empty($values->share_to_uid)){
      $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
      }
        
        $output .='<div class="clearfix margin-bottom-10 drive-user-share-del-'.$values->share_to_uid.'-'.$company->nid.'-row"><div class="sub-title pull-left">' . l(($UserFnameLname['realname']), 'user/'.$values->share_to_uid,   array('html' => TRUE, 'attributes' => array('title' => $UserFnameLname['realname'],'class'=>''))) . '</div>
         <div class="sub-title pull-right">' . l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'm6drive-remove-share-user/folder/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs',   array('html' => TRUE, 'attributes' => array('title' => '','class'=>'use-ajax'))) . '</div>
        </div>';        
     }
    $output .= '</div>'; 
    $output .='</div></div>';
    $output .= '<div class="clearfix text-right">'.$closeButton.'</div></div>';
  }
  $output2[] = ctools_modal_command_display('', $output);
  print ajax_render($output2);
  drupal_exit();

}


function m6drive_remove_share_user_list_callback($type, $folderidorfid, $uid, $ajax=NULL){
  global $user,$company;

 if($type == 'folder'){
    $multVal = $folderidorfid.'-folder';
 }
 else{
    $multVal = $folderidorfid.'-file';
 } 
 if(!empty($uid) && is_numeric($uid)){
     //echo  $multVal; die;

    $getStatus = explode('-', $multVal);
      if($getStatus[1] == 'folder') {

        $projectnidMul = $getStatus[0];
        if (!empty($projectnidMul)) {
          // Recursively removing the child files and folders from share.
          _delete_folder_file_from_share_personal($projectnidMul, $uid);

          $query = db_select('m6connect_m6drive', 'm')
            ->fields('m')
            ->condition('Id', $projectnidMul)
            ->execute()
            ->rowCount();

          if ($query > 0) {
            // Removing the folder from the m6drive_shared table.
            db_delete('m6connect_m6drive_shared')
              ->condition('folder_id', $projectnidMul)
              ->condition('share_to_uid', $uid)
              ->condition('share_by_uid', $user->uid)
              ->execute();
          }
          else {
            // If the folder is not in m6connect_m6drive table, then it means
            // that it is project node, so removing from the project share table.
            db_delete('m6connect_project_drive_shared')
              ->condition('project_nid', $projectnidMul)
              ->condition('share_by_uid', $user->uid)
              ->condition('share_to_uid', $uid)
              ->execute();


          }
           $commands[] = ajax_command_remove('.m6drive-share-user-listing .drive-user-share-del-'.$uid.'-'.$company->nid.'-row');
           $commands[] = ajax_command_remove('table.m6connect-custom-m6drive-folder-name tr.m6drive-folderdelete-'.$projectnidMul.'-'.$company->nid.'-row td .row');
        }
      }
      elseif ($getStatus[1] == 'file') {
        $fileIdMul = $getStatus[0];
        $query = db_select('m6connect_m6drive_attachment', 'm')
          ->fields('m')
          ->condition('file', $fileIdMul)
          ->execute()
          ->rowCount();

        if ($query > 0) {
          db_delete('m6connect_m6drive_shared')
            ->condition('fid', $fileIdMul)
            ->condition('share_to_uid', $uid)
            ->condition('share_by_uid', $user->uid)
            ->execute();
        }
        else {
          db_delete('m6connect_project_drive_shared')
            ->condition('fid', $fileIdMul,'=')
            ->condition('share_to_uid', $uid)
            ->condition('share_by_uid', $user->uid)
            ->execute();
        }
        $commands[] = ajax_command_remove('.m6drive-share-user-listing .drive-user-share-del-'.$uid.'-'.$company->nid.'-row');
        $commands[] = ajax_command_remove('table.m6connect-custom-m6drive-folder-name tr.m6drive-folderdelete-'.$fileIdMul.'-'.$company->nid.'-row td .row');
      }
 } 
  if($ajax){
    print ajax_render($commands);
    drupal_exit(0);  
  }
}
function _get_total_space_project_drive_by_uid($uid, $bytes_only = FAlSE){
 global $user;

 $kilobyte = 1024;
 $megabyte = $kilobyte * 1024;
 $gigabyte = $megabyte * 1024;

  $query = db_select('m6connect_m6drive_attachment','att');
  $query->leftjoin ('file_managed', 'fmu', 'fmu.fid = att.file');
  $query->fields('att', array('file','user_uid'));
  $query->fields('fmu', array('uri'));
  $query->fields('fmu', array('filesize'));
  $query->condition('user_uid', $uid,'=');  
  $query->condition('services', 'm6drive_project','='); 
  
  $result = $query->execute()->fetchAll();
  $bytes = 0;
   foreach ($result as $value) {
     $bytes += $value->filesize;
   }

    if ($bytes_only) {
      return $bytes;
    }
    if(($bytes >= 0) && ($bytes < $kilobyte)) {
        return $bytes . ' B';
 
    }elseif (($bytes >= $kilobyte) && ($bytes < $megabyte)) {
        return round($bytes / $kilobyte, $precision) . ' KB';
 
    }elseif (($bytes >= $megabyte) && ($bytes < $gigabyte)) {
        return round($bytes / $megabyte, $precision) . ' MB';
 
    }elseif (($bytes >= $gigabyte) && ($bytes < $terabyte)) {
        return round($bytes / $gigabyte, $precision) . ' GB';
 
    }elseif ($bytes >= $terabyte) {
        return round($bytes / $terabyte, $precision) . ' TB';
    }else{
        return $bytes . ' B';
    }
}

function provide_drive_space_callback($uid, $ajax = NULL){
  if($ajax){
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
      'ajax' => TRUE,
      'user_uid' => $uid,
    );
  $output = ctools_modal_form_wrapper('provide_drive_space_form', $form_state);

  if(!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
  }
  print ajax_render($output);
  drupal_exit();
  }
  return drupal_get_form('provide_drive_space_form', $uid);
  
}
function provide_drive_space_form($form, &$form_state, $uid) {
 
  $uid = (isset($form_state['user_uid']) && is_numeric($form_state['user_uid'])) ? $form_state['user_uid']:  $uid;
  $form_state['user_uid'] = $uid; 

  $form['personal_drive'] = array(
    '#type' => 'textfield',
    '#title' => t('Personal Drive Space'),
    '#attributes'=> array('class'=> array('form-control'),'placeholder'=>'Enter Personal Drive Space in GB'),
    '#element_validate' => array('provide_drive_space_element_validate'),
  ); 
  $form['company_drive'] = array(
    '#type' => 'textfield',
    '#title' => t('Company Drive Space'),
    '#attributes'=> array('class'=> array('form-control'),'placeholder'=>'Enter Company Drive Space in GB'),
    '#element_validate' => array('provide_drive_space_element_validate'),
  );  
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('provide_drive_space_submit'),
    '#value' => 'Submit',
    '#prefix' => '<div class="clearfix margin-to-10">',  
    '#suffix' => $closeButton.'</div>', 
  );  
  return $form;
 
}
function provide_drive_space_element_validate($element, &$form_state) {
  $value = $element['#value'];
  if ($value !== '' && (!is_numeric($value) || intval($value) != $value)) {
     form_error($element, t('Please enter only positive integer value.'));
  }
}
function provide_drive_space_submit(&$form, &$form_state) {
 
 $values = $form_state['values'];
 $useruid = $form_state['user_uid'];
 $personalm6drive = $values['personal_drive'];
 $companym6drivespace = $values['company_drive'];
  if(isset($useruid) && is_numeric($useruid)){
      $user = user_load($useruid);
      // print "<pre>"; print_r($user); die;
        if(!empty($personalm6drive) && is_numeric($personalm6drive)){
          $user->field_personal_m6drive_space['und'][0]['value'] = $personalm6drive;  
        } 
        if(!empty($companym6drivespace) && is_numeric($companym6drivespace)){
          $user->field_company_m6drive_space['und'][0]['value'] = $companym6drivespace; 
        } 
        user_save($user);
  }
  
  if((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false){
    $form_state['ajax_commands'][] = ctools_modal_command_dismiss();  
  }
}

function user_personal_drive_total_space_count($uid) {

  if(!empty($uid) && is_numeric($uid)){
    $user = user_load($uid);
    if(!empty($user->field_personal_m6drive_space['und'][0]['value']) && is_numeric($user->field_personal_m6drive_space['und'][0]['value'])){
         $output = $user->field_personal_m6drive_space['und'][0]['value'];  
    }else{
          $output = 5; 
    }
  }

  return $output;
   
 }
 function user_company_drive_total_space_count($comNid) {

  if(!empty($comNid) && is_numeric($comNid)){
    $ComNode = node_load($comNid);

    if(isset($ComNode->field_company_m6drive_space['und'][0]['value']) && is_numeric($ComNode->field_company_m6drive_space['und'][0]['value'])){
         $output = $ComNode->field_company_m6drive_space['und'][0]['value'];  
    }else{
          $output = 5; 
    }
  }
  return $output;
 }

 function project_drive_share_user_list_callback($type, $projectnid, $folderidorfid, $ajax=NULL){
  global $user, $company;
  ctools_include('modal');
  ctools_include('ajax');
  $output2 = array();
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Close" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();Drupal.attachBehaviors();')));

  if($type == 'folder' && is_numeric($projectnid) && $folderidorfid == 0){

     $query = db_select('m6connect_project_drive_shared','srd');
     $query->fields('srd',array('id','services','project_nid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.project_nid',$projectnid, '=');
     $query->condition('srd.services','m6drive_project', '=');
     $result = $query->execute()->fetchAll();

     $output = '<div class="m6drive-share-user-listing onboarding-inter-company-messaging">';
     $output .='<div class="appr-feedback-notes-block" id="edit-main-container">';
     $output .='<div class="ins-feed-notes-title margin-bottom-10 clearfix"><span class="ins-notes-title clearfix text-center">My Company Projects Drive Share User List</span></div>';
     $output .= '<div class="margin-bottom-10 clearfix">'; 
     $output .='<div class="ins-feed-sub-title margin-bottom-10 clearfix">';
     foreach($result  as $key => $values) {
      $sharetouid =  $values->share_to_uid;
      if(!empty($values->share_to_uid)){
      $UserFnameLname = _get_user_data_by_uid($values->share_to_uid);
      } 
        $output .='<div class="clearfix margin-bottom-10 drive-user-share-del-'.$values->share_to_uid.'-'.$company->nid.'-row"><div class="sub-title pull-left">' . l(($UserFnameLname['realname']), 'user/'.$values->share_to_uid,   array('html' => TRUE, 'attributes' => array('title' => $UserFnameLname['realname'],'class'=>''))) . '</div>
         <div class="sub-title pull-right">' . l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'project-drive-remove-share-user/folder/'.$projectnid.'/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs',   array('html' => TRUE, 'attributes' => array('title' => '','class'=>'use-ajax'))) . '</div>
        </div>';      
     }
     $output .= '</div>'; 
     $output .='</div></div>';
     $output .= '<div class="clearfix text-right">'.$closeButton.'</div></div>';
  }
  /*else if($type == 'folder' && is_numeric($projectnid) && $folderidorfid != 0){

     $query = db_select('m6connect_m6drive_shared','srd');
     $query->fields('srd',array('id','fid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.folder_id',$folderidorfid, '=');
     $result = $query->execute()->fetchAll();

     $output = '<div class="m6drive-share-user-listing onboarding-inter-company-messaging">';
     $output .='<div class="appr-feedback-notes-block" id="edit-main-container">';
     $output .='<div class="ins-feed-notes-title clearfix margin-bottom-10"><span class="ins-notes-title clearfix text-center">My Company Projects Drive Share User List</span></div>';
     $output .= '<div class="clearfix margin-bottom-10">'; 
     $output .='<div class="ins-feed-sub-title clearfix margin-bottom-10">';
     foreach($result  as $key => $values) {
      $sharetouid =  $values->share_to_uid;
      if(!empty($values->share_to_uid)){
      $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
      }
        
        $output .='<div class="clearfix margin-bottom-10 drive-user-share-del-'.$values->share_to_uid.'-'.$company->nid.'-row"><div class="sub-title pull-left">' . l(($UserFnameLname['realname']), 'user/'.$values->share_to_uid,   array('html' => TRUE, 'attributes' => array('title' => $UserFnameLname['realname'],'class'=>''))) . '</div>
         <div class="sub-title pull-right">' . l((t('X')), 'project-drive-remove-share-user/folder/'.$projectnid.'/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs',   array('html' => TRUE, 'attributes' => array('title' => '','class'=>'use-ajax'))) . '</div>
        </div>';        
     }
    $output .= '</div>'; 
    $output .='</div></div>';
    $output .= '<div class="clearfix text-right">'.$closeButton.'</div></div>';
  }*/
  else if($type == 'file' && is_numeric($projectnid) && $folderidorfid != 0){

     /*$query = db_select('m6connect_m6drive_shared','srd');
     $query->fields('srd',array('id','fid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.fid',$folderidorfid, '=');
     $result = $query->execute()->fetchAll();*/

     $query = db_select('m6connect_project_drive_shared','srd');
     $query->fields('srd',array('id','services','fid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.fid',$folderidorfid, '=');
     $query->condition('srd.services','m6drive_project', '=');

     $result = $query->execute()->fetchAll();

     $output = '<div class="m6drive-share-user-listing onboarding-inter-company-messaging">';
     $output .='<div class="appr-feedback-notes-block" id="edit-main-container">';
     $output .='<div class="ins-feed-notes-title clearfix margin-bottom-10"><span class="ins-notes-title clearfix text-center">My Company Projects Drive Share User List</span></div>';
     $output .= '<div class="clearfix margin-bottom-10">'; 
     $output .='<div class="ins-feed-sub-title clearfix margin-bottom-10">';
     foreach($result  as $key => $values) {
      $sharetouid =  $values->share_to_uid;
      if(!empty($values->share_to_uid)){
      $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
      }
        
        $output .='<div class="clearfix margin-bottom-10 drive-user-share-del-'.$values->share_to_uid.'-'.$company->nid.'-row"><div class="sub-title pull-left">' . l(($UserFnameLname['realname']), 'user/'.$values->share_to_uid,   array('html' => TRUE, 'attributes' => array('title' => $UserFnameLname['realname'],'class'=>''))) . '</div>
         <div class="sub-title pull-right">' . l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'project-drive-remove-share-user/file/'.$projectnid.'/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs',   array('html' => TRUE, 'attributes' => array('title' => '','class'=>'use-ajax'))) . '</div>
        </div>';        
     }
    $output .= '</div>'; 
    $output .='</div></div>';
    $output .= '<div class="clearfix text-right">'.$closeButton.'</div></div>';
  }
  if(!$ajax){
    return $output;

  }
  $output2[] = ctools_modal_command_display('', $output);
  print ajax_render($output2);
  drupal_exit();


 }
 function project_drive_remove_share_user_callback($type, $projectnid, $folderidorfid, $uid, $ajax=NULL){

 global $user, $company;
 if($type == 'folder' && $folderidorfid == 0){
    $multVal = $projectnid.'-folder';
 }else{
    $multVal = $folderidorfid.'-folder';
 }
 if ($type == 'file') {
    $multVal = $folderidorfid.'-file';
 }
  
if(!empty($uid) && is_numeric($uid)){

    $getStatus = explode('-', $multVal);
      if($getStatus[1] == 'folder') {

        $projectnidMul = $getStatus[0];
        if (!empty($projectnidMul)) {
          // Recursively removing the child files and folders from share.
          _delete_folder_file_from_share_project_shared($projectnidMul, $uid);

          $query = db_select('m6connect_m6drive', 'm')
            ->fields('m')
            ->condition('Id', $projectnidMul)
            ->execute()
            ->rowCount();

          if ($query > 0) {
            // Removing the folder from the m6drive_shared table.
            db_delete('m6connect_m6drive_shared')
              ->condition('folder_id', $projectnidMul)
              ->condition('share_by_uid', $user->uid)
              ->condition('share_to_uid', $uid)
              ->execute();
          }
          else {
            // If the folder is not in m6connect_m6drive table, then it means
            // that it is project node, so removing from the project share table.
            db_delete('m6connect_project_drive_shared')
              ->condition('project_nid', $projectnidMul)
              ->condition('share_by_uid', $user->uid)
              ->condition('share_to_uid', $uid)
              ->execute();


          }
          $commands[] = ajax_command_remove('.m6drive-share-user-listing .drive-user-share-del-'.$uid.'-'.$company->nid.'-row');
          $commands[] = ajax_command_remove('table.m6connect-custom-m6drive-project-drive tr.m6drive-project-archive-'.$projectnidMul.'-'.$company->nid.'-row td .row');
        }
      }
      elseif ($getStatus[1] == 'file') {
        $fileIdMul = $getStatus[0];
        $query = db_select('m6connect_m6drive_attachment', 'm')
          ->fields('m')
          ->condition('file', $fileIdMul)
          ->execute()
          ->rowCount();

        if ($query > 0) {
          db_delete('m6connect_m6drive_shared')
            ->condition('fid', $fileIdMul)
            ->condition('share_to_uid', $uid)
            ->condition('share_by_uid', $user->uid)
            ->execute();
        }
        else {
          db_delete('m6connect_project_drive_shared')
            ->condition('fid', $fileIdMul,'=')
            ->condition('share_to_uid', $uid)
            ->condition('share_by_uid', $user->uid)
            ->execute();
        }
        $commands[] = ajax_command_remove('.m6drive-share-user-listing .drive-user-share-del-'.$uid.'-'.$company->nid.'-row');
        $commands[] = ajax_command_remove('table.m6connect-custom-m6drive-project-drive tr.m6drive-project-archive-'.$fileIdMul.'-'.$company->nid.'-row td .row');
      }
} 
 if($ajax){
    print ajax_render($commands);
    drupal_exit(0);  
  }
}
/*function project_drive_remove_share_user_form($form, &$form_state, $type, $projectnid, $folderidorfid, $uid){

  $type = (isset($form_state['type'])) ? $form_state['type'] : $type;
  $projectnid = (isset($form_state['project_nid']) && is_numeric($form_state['project_nid'])) ? $form_state['project_nid']: $projectnid;
  $uid = (isset($form_state['user_uid']) && is_numeric($form_state['user_uid'])) ? $form_state['user_uid']:  $uid;
  $folderidorfid = (isset($form_state['folder_id']) && is_numeric($form_state['folder_id'])) ? $form_state['folder_id']: $folderidorfid;
  
  $form_state['type'] = $type;
  $form_state['project_nid'] = $projectnid;
  $form_state['folder_id'] = $folderidorfid;
  $form_state['user_uid'] = $uid;  

 if($type == 'folder'){
  $form['multiple_projectnid'] = array(
      '#type'=>'value',
      '#value' => 'folder-'.$projectnid,  
  ); 
 }else{
  $form['multiple_projectnid'] = array(
      '#type'=>'value',
      '#value' => 'file-'.$projectnid,  
  ); 
 }

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('project_drive_remove_share_user_submit'),
    '#value' => 'Submit',
    '#prefix' => '<div class="clearfix margin-to-10">',  
    '#suffix' => $closeButton.'</div>', 
  );  
  return $form;

}
function project_drive_remove_share_user_submit($form, &$form_state){
}*/

function m6drive_check_file_folder_shared($type, $folderorfid){
  global $user;
  //$user  = user_load(2591);

    if($type == 'folder' && is_numeric($folderorfid)){
       $query = db_select('m6connect_m6drive_shared','srd');
       $query->fields('srd',array('id','folder_id','share_by_uid','share_to_uid','email_id'));
       $query->condition('srd.share_by_uid', $user->uid,'=');
       $query->condition('srd.folder_id', $folderorfid,'=');
       $result = $query->execute()->fetchAll();
       $count = 0;
       foreach($result as $values) {
           if(!empty($values->share_to_uid) && $count == 0){
              $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
            }
          $count++;
        }
            if($count == 0){
              $SharewithurlLink = '-';  
            }else if($count == 1){
                
                $SharelLink = l($UserFnameLname['realname'], 'driveshare-user-list/folder/'.$folderorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
                $RemoveUserlink = l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'm6drive-remove-share-user/folder/'.$folderorfid.'/'.$values->share_to_uid.'/nojs', array('attributes' => array('class' => array('use-ajax')),'html' => TRUE));

                $SharewithurlLink = '<div class="row margin-5"><div class="col-md-2 padding-5">'.$RemoveUserlink.'</div><div class="col-md-10 padding-5">'.$SharelLink.'</div></div>'; 
            }else{
              $moreuser =  ' & '.($count - 1). ' more' ;
              $SharewithurlLink = l($UserFnameLname['realname'] . $moreuser, 'driveshare-user-list/folder/'.$folderorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
           }
     } 
     if($type == 'file' && is_numeric($folderorfid)){
       $query = db_select('m6connect_m6drive_shared','srd');
       $query->fields('srd',array('id','fid','share_by_uid','share_to_uid','email_id'));
       $query->condition('srd.share_by_uid', $user->uid,'=');
       $query->condition('srd.fid',$folderorfid, '=');
       $result = $query->execute()->fetchAll();
       $count = 0;
       foreach($result as $values) {
           if(!empty($values->share_to_uid) && $count == 0){
              $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
            }
          $count++;
        }
            if($count == 0){
                $SharewithurlLink = '-';  
            }else if($count == 1){
                $SharelLink = l($UserFnameLname['realname'], 'driveshare-user-list/file/'.$folderorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
                $RemoveUserlink = l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'm6drive-remove-share-user/file/'.$folderorfid.'/'.$values->share_to_uid.'/nojs', array('attributes' => array('class' => array('use-ajax')),'html' => TRUE));
                $SharewithurlLink = '<div class="row margin-5"><div class="col-md-2 padding-5">'.$RemoveUserlink .'</div><div class="col-md-10 padding-5">'.$SharelLink.'</div></div>';  
            }else{
              $moreuser =  '& '.($count - 1). ' more' ;
              $SharewithurlLink = l($UserFnameLname['realname'] . $moreuser, 'driveshare-user-list/file/'.$folderorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
           }
    }
     
     return $SharewithurlLink;
}
function m6drive_check_project_folder_shared($type, $projectnid, $folderidorfid){
  global $user;
  
  if($type == 'folder' && is_numeric($projectnid) && $folderidorfid == 0){

     $query = db_select('m6connect_project_drive_shared','srd');
     $query->fields('srd',array('id','project_nid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.project_nid',$projectnid, '=');
     $query->condition('srd.services','m6drive_project', '=');
     $result = $query->execute()->fetchAll();
     $count = 0;
       foreach($result as $values) {
           if(!empty($values->share_to_uid) && $count == 0){
              $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
            }
          $count++;
        }
            if($count == 0){
                $SharewithurlLink = '-';  
            }else if($count == 1){
                $RemoveUserlink = l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'project-drive-remove-share-user/folder/'.$projectnid.'/0/'.$values->share_to_uid.'/nojs', array('attributes' => array('class' => array('use-ajax')),'html' => TRUE));
                $SharelLink = l($UserFnameLname['realname'], 'project-drive-share-list/folder/'.$projectnid.'/0/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
                $SharewithurlLink = '<div class="row margin-5"><div class="col-md-2 padding-5">'.$RemoveUserlink.'</div><div class="col-md-10 padding-5">'.$SharelLink.'</div></div>';   
            }else{
              $moreuser =  ' & '.($count - 1). ' more' ;
              $SharewithurlLink = l($UserFnameLname['realname'] . $moreuser, 'project-drive-share-list/folder/'.$projectnid.'/0/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
           }
    
  } 
  if($type == 'file' && is_numeric($projectnid) && $folderidorfid != 0){

     $query = db_select('m6connect_project_drive_shared','srd');
     $query->fields('srd',array('id','fid','share_by_uid','share_to_uid','email_id'));
     $query->condition('srd.share_by_uid', $user->uid);
     $query->condition('srd.fid',$folderidorfid, '=');
     $query->condition('srd.services','m6drive_project', '=');
     $result = $query->execute()->fetchAll();
     $count = 0;
    foreach($result as $values) {
           if(!empty($values->share_to_uid) && $count == 0){
              $UserFnameLname =_get_user_data_by_uid($values->share_to_uid);
            }
          $count++;
     }
            if($count == 0){
                $SharewithurlLink = '-';  
            }else if($count == 1){
                $RemoveUserlink = l('<i class="fa fa-times padding-5" style="float:left; cursor:pointer;"></i>', 'project-drive-remove-share-user/file/'.$projectnid.'/'.$folderidorfid.'/'.$values->share_to_uid.'/nojs', array('attributes' => array('class' => array('use-ajax')),'html' => TRUE));
               $SharelLink = l($UserFnameLname['realname'], 'project-drive-share-list/file/'.$projectnid.'/'.$folderidorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
               $SharewithurlLink = '<div class="row margin-5"><div class="col-md-2 padding-5">'.$RemoveUserlink .'</div><div class="col-md-10 padding-5">'.$SharelLink.'</div></div>'; 
            }else{
              $moreuser =  ' & '.($count - 1). ' more' ;
              $SharewithurlLink = l($UserFnameLname['realname'] . $moreuser, 'project-drive-share-list/file/'.$projectnid.'/'.$folderidorfid.'/nojs', array('attributes' => array('class' => array('ctools-use-modal', 'ctools-modal-assign-dashboard-popup-style')),'html' => TRUE));
           }
   
  }
     return $SharewithurlLink;
}

function m6drive_get_primary_company_email($companynid, $currentuseruid){

    if(isset($currentuseruid) && !empty($companynid)){
       $query = db_select ( 'm6connect_og_membership_email', 'ome');
       $query->join ( 'node', 'n', 'n.nid=ome.entity_id' );
       $query->fields ( 'ome', array ('company_email'));
       $query->condition ( 'ome.user_uid', $currentuseruid, '=' );
       $query->condition ( 'ome.company_type', 'company', '=' );
       $query->condition ('n.nid',  $companynid, '=');
       $result = $query->execute ()->fetchField();

    }

    return $result;

}
//============== M6drive custom serach=================//

function m6drive_sub_personal_drive_serach_content($drive = '') {
  // Including drive inc file.
  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  // drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js'); 
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive_sub.js'); 

  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery-ias.min.js');
  // drupal_add_library('system', 'ui.draggable');
  // drupal_add_library('system', 'ui.droppable');
  // module_load_include($type = 'inc', $module = 'bookmarkorganizer', $name = 'bookmarkorganizer');

  ctools_include('ajax');

  $SearchKey = $_REQUEST['searchvalue'];

  $folderchecked = $_POST['folderchecked'];

  global $company;
  global $user; 

  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }
  if($optionview == 'List') {
    $griddisplaybtn = '<a href="javascript:void(0)" class="Grid" title="Grid view"><i class="fa fa-th padding-5" aria-hidden="true"></i></a>';   
  }
  else {
   $griddisplaybtn = '<a href="javascript:void(0)" class="List" title="List view"><i class="fa fa-list padding-5" aria-hidden="true"></i></a>';
  }
  $element['left-container']= array(
  '#type' => 'container',
  '#prefix' => '<div class="clearfix">',
  '#attributes' => array('class'=>array('col-md-3','col-sm-3','col-xs-12','m6drive-details-left','margin-bottom-25','padding-8')),
  );  
  $element['right-container']= array(
  '#type' => 'container',
  '#attributes' => array('class'=>array('col-md-9','col-sm-9','col-xs-12','m6drive-details-right','padding-8')),
  '#suffix' => '</div>',
  );
  $element['left-container']['drive-panel'] = array(
  '#markup' => _get_left_drive_panel(),
  '#prefix' => '<div class="left-main-container"><div id="left-main-continter-for-panel">',
  '#suffix' => '</div></div>',
  );

  $element['right-container']['folder-search-form']= array(
  '#markup' => drupal_render(drupal_get_form('program_drive_folder_serach_form', $SearchKey)),
  '#prefix' => '<div class="row margin-5"><div class="margin-bottom-10 col-md-6 padding-5">',
  '#suffix' => '</div></div>',
  );
  
  $bread_suffix = $drive == 'personal' ? '</div><div id="right-main-continter-for-multiple" class="col-md-3 padding-5"><span class="m6drive-more-action display-inline-block m6drive-more-option default-gray">'.l('<i class="fa fa-share-square padding-5" aria-hidden="true"></i>','share-m6drive/revoke/folder/multi/nojs', array('attributes'=> array('class'=>array('ctools-use-modal ctools-modal-assign-dashboard-popup-style'), 'title' => "Share With Others"),'html' => TRUE)).'<a class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" href="/m6drive-delete-folder/folder/multi/nojs" title="Delete"><i class="fa fa-trash-o padding-5" aria-hidden="true"></i></a><a class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" href="/m6drive-archive-folder/folder/multi/nojs" title="Archive"><i class="fa fa-archive" aria-hidden="true"></i></a><a href="/m6drive-multiple-download/multi/nojs" class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" title="Download"><i class="fa fa-download padding-5" aria-hidden="true"></i></a>
    </span>
    <span class="m6drive-more-action display-inline-block">
      <a href="javascript:void(0)" class="trigger-upload-drive" title="Upload Files"><i class="fa fa-upload" aria-hidden="true"></i></a>
    </span>
     <span class="m6drive-grid-list-action m6drive-more-action display-inline-block">'.$griddisplaybtn.'</span>
    </div></div>' : '</div><div id="right-main-continter-for-multiple" class="col-md-3 padding-5">
    <span class="m6drive-more-action display-inline-block m6drive-project-more-option default-gray">
     <a class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" href="/project-drive-share/folder/multi/nojs" title="Share With Others"><i class="fa fa-share-square padding-5" aria-hidden="true"></i></a>
     <a class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" href="/project-drive-archive/folder/multi/nojs" title="Archive"><i class="fa fa-archive" aria-hidden="true"></i></a>
     <a href="/m6drive-project-multiple-download/multi/nojs" class="ctools-use-modal ctools-modal-assign-dashboard-popup-style" title="Download"><i class="fa fa-download padding-5" aria-hidden="true"></i></a>
    </span>
    <span class="m6drive-more-action display-inline-block">
      <a href="javascript:void(0)" class="trigger-upload-drive" title="Upload Files"><i class="fa fa-upload" aria-hidden="true"></i></a>
    </span>
    <span class="m6drive-grid-list-action m6drive-more-action display-inline-block">'.$griddisplaybtn.'</span>
    </div></div>';

  $bread_id = $drive == 'personal' ? 'right-main-continter-for-breadcrumb' : 'right-main-continter-project-drive-breadcrumb';
  $element['right-container']['folder-search-breadcrume']= array(
  '#markup' =>  m6drive_breadcrumb_for_folder_search(),
  '#prefix' => '<div class="row margin-5 margin-bottom-10"><div id="' . $bread_id . '" class="col-md-9 padding-5">',
  '#suffix' => $bread_suffix,
  //'#markup' =>  m6drive_breadcrumb_for_folder(),
  // '#markup' =>  '', 
  // '#prefix' => '<div class="row margin-5 margin-bottom-10"><div id="right-main-continter-for-breadcrumb" class="col-md-9 padding-5">',
  // '#suffix' => '</div></div>',
  );
  $table_id = $drive == 'personal' ? 'm6-drive-datacontainer-main-cust' : 'project-m6drive-datacontainer-main-cust';
  $element['right-container']['drive-folder-listing'] = array(
  '#markup' => get_drive_serach_content_listing_table_data($drive),
  '#prefix' => '<div class="clearfix"><div class="" id="' . $table_id . '">',
  '#suffix' => '</div></div><div id="drive-dialog-status-area"></div>',
   );     
  return $element;
}

function m6drive_breadcrumb_for_folder_search($foldername = '', $folderid = 0){
  global $user, $company;
  global $base_url;

  ctools_include('ajax');
 
  $query = db_select('m6connect_m6drive', 'm6d');
  $query->fields('m6d',array('services'));
  $query->condition('m6d.Id', $folderid);
  $services = $query->execute()->fetchField();
  $load_path = $services == 'm6drive' ? 'load-drive-data' : 'project-load-drive';
  $load_path_root = $services == 'm6drive' ? 'load-drive-data' : 'project-load-drive';

  $Currentfolder = $foldername;
  $output = m6drive_get_parent_folder($folderid);
  $mydrive = $services == 'm6drive' ? t('My M6Drive') : t('Project Drive');

  if (empty($services)) {
    $load_path_root = arg(0) == 'm6drive' ? 'load-drive-data' : 'project-load-drive';
    $mydrive = arg(0) == 'm6drive' ? t('My M6Drive') : t('Project Drive');
  }

  if($folderid == 0){
    $breadcrumbVal = '<div class="search-folder-breadcrumb-custom">
                       <ul id="bc1" class="breadcrumb">
                         <li><a class="use-ajax" href="/' . $load_path_root . '/0/0/nojs">' . $mydrive . '</a>&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i></li>
                        </ul>
                     </div>';
  }
  else {
    // Checking if this folder is listed in shared drive.
    $share_query = db_select('m6connect_m6drive_shared', 'ms')
      ->fields('ms')
      ->condition('folder_id', $folderid)
      ->condition('share_to_uid', $user->uid)
      ->execute()
      ->rowCount();
    if ($share_query > 0) {
      // If it is a shared folder, then preparing its load path.
      // But also we need to check if it is project folder or mydrive folder.
      if ($services == 'm6drive') {
        $load_path = t('share-load-drivedata');
      }
      else {
        $load_path = t('project-share-load-drive');
      }
    }
    $breadcrumbVal = '<div class="search-folder-breadcrumb-custom"><ul id="bc1" class="breadcrumb">
    <li><a class="use-ajax" href="/' . $load_path_root . '/0/0/nojs"">' . $mydrive . '</a>&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i></li>';
    // Trying to get projectnid.
    $projectnid = FALSE;
    foreach($output as $fldrId => $folderNameVal) {
      foreach($folderNameVal as $foldKey => $fldVal) {
        if (is_array($fldVal)) {
          $projectnid = $foldKey;
        }
      }
    }
    foreach($output as $fldrId => $folderNameVal) {
      foreach($folderNameVal as $foldKey => $fldVal) {
        $get_key = $foldKey;
        if (is_array($fldVal)) {
          $foldKey = 0;
          $fldVal = $fldVal[0];
        }
        if (!$projectnid) {
          $projectnid = $fldVal;
        }

        if ($share_query > 0) {
          if (_check_folder_eligibility_share($get_key)) {
            $breadcrumbVal .= '<li>'.l(ucwords(str_replace('_',' ',$fldVal)), $load_path . '/'.$projectnid.'/'.$foldKey.'/nojs', array('attributes' => array('class' => array('use-ajax')))).'&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i></li>';
          }
        }
        else {
          $breadcrumbVal .= '<li>'.l(ucwords(str_replace('_',' ',$fldVal)), $load_path . '/'.$projectnid.'/'.$foldKey.'/nojs', array('attributes' => array('class' => array('use-ajax')))).'&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i></li>';
        }
      }
    }
    $breadcrumbVal .= '<li><a class="use-ajax" href="/' . $load_path . $foldername.'/'.$folderid.'/nojs">'.ucwords(str_replace('_',' ',$foldername)).'</a>&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i></li>';
    $breadcrumbVal .= '</li></ul></div>';
  }
  return $breadcrumbVal;   
}


function get_drive_serach_content_listing_table_data($drive = ''){
  // drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');  
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive_sub.js'); 
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');
  /*drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery-ias.min.js');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.droppable');
  module_load_include($type = 'inc', $module = 'bookmarkorganizer', $name = 'bookmarkorganizer');*/
  
  global $company, $user, $base_url; 

  $searchKey = $_REQUEST['searchvalue'];
  $rows = array();
  $complteresult = array();
  $div_structure = array();

  $drive_folder_icon = $base_url . '/sites/all/themes/m6connect/images/drive-folder-icon.png';
  $Drive_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:40px;">';
  $Grid_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:50px;">';

  $header = array(
  array('data'=>'','class'=>array('col-md-1','text-left','hidden','no-sort')),
  array('data'=>'','class'=>array('col-md-1','text-left','hidden','no-sort')),
  array('data'=>'<input type="checkbox" name="select-m6drive-folder-checkbox" class="form-checkbox select-m6drive-folder-checkbox">', 'class'=> array('col-md-1','text-center','hidden','no-sort')),
  array('data'=>'Name','class'=>array('col-md-5','text-left')),
  array('data'=>'Owner','class'=>array('col-md-2','text-left')),
  array('data'=>'Last Modified','class'=>array('col-md-2','text-left')),
  array('data'=>'File Size','class'=>array('col-md-2','text-left')),
  );

  $query = db_select('m6connect_m6drive', 'm6d');
  $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status', 'services'));
  $query->condition('m6d.user_uid', $user->uid);
  $query->condition('m6d.company_nid', $company->nid);
  if ($drive == 'personal') {
    $query->condition('m6d.services', 'm6drive');
    $Dragclass = 'm6drive-folder-dragable';
    $Dropclass = 'm6drive-folder-droppable';
  }
  else {
    $query->condition('m6d.services', 'm6drive_project');
    $Dragclass = 'project-drive-folder-dragable';
    $Dropclass = 'project-drive-folder-droppable';
  }
  //$query->condition('m6d.trash_status',0,'=');
  //$query->condition('m6d.archive_status', 0,'=');
  $query->condition('m6d.foldername', '%' . db_like($searchKey).'%', 'LIKE');
  $maintablerecord = $query->execute()->fetchAll();
  if ($searchKey) {
    $attachmenttabledata = m6drive_attachment_get_all_file_name_using_filename($searchKey, $drive);
    $m6drivesharedtabledataFol = m6drive_shared_get_all_file_folder_using_serachkey($searchKey, $drive);
    $m6drivesharedtabledataFile = m6drive_shared_get_all_file_using_serachkey($searchKey, $drive);
  }
  $record = array_merge($maintablerecord, $attachmenttabledata, $m6drivesharedtabledataFol, $m6drivesharedtabledataFile);   
  //==== start Table for view List View======
  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }

  if ($optionview == 'List') {
    $grid_display =  'display:none';
    $list_display =  'display:block';
  }
  else {
    $grid_display =  'display:block';
    $list_display =  'display:none';
  }
  foreach ($record  as $values) {
    $div_structure[] = $values;
    $UserFnameLname = _get_user_data_by_uid($values->user_uid);
    if ($values->foldername) {
      $parents = m6drive_get_parent_folder($values->Id);
      if (!empty($parents)) {
        foreach ($parents as $key => $value) {
          foreach ($value as $key1 => $value1) {
            if (is_array($value1)) {
              $values->company_nid = $key1;
            }
          }
        }
      }
      $load_path = '';
      if (isset($values->share_to_uid)) {
        $load_path = $values->services == 'm6drive' ? 'share-load-drivedata/' . $values->foldername.'/'.$values->Id.'/nojs' : 'project-share-load-drive/' . $values->company_nid . '/' . $values->Id . '/nojs';
      }
      else {
        $load_path = $values->services == 'm6drive' ? 'load-drive-data/' . $values->foldername.'/'.$values->Id.'/nojs' : 'project-load-drive/' . $values->company_nid . '/' . $values->Id . '/nojs';
      }

      $foldername_str = strlen($values->foldername) > 35 ? substr($values->foldername, 0, 32) . '...' : $values->foldername;
      $foldericon = $Drive_folder_icon_image . ucwords(str_replace('_', ' ', $foldername_str));

      $foldername =  l($foldericon, $load_path, array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));

      $rows[] = array(
        'data' => array(
          array('data'=>'<span class="folder-ids" style="display:none;">'.$values->Id.'-folder</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
          array('data'=>'<span class="project-drive-nids" style="display:none;">'.$values->company_nid.'</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
          array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.ucwords(str_replace('_',' ',$values->foldername)).'" name="m6drive-folder-'.$values->Id.'" value="'.$values->Id.'-folder" class="form-checkbox m6drive-folder-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
          array('data'=> $foldername, 'class' => array('col-md-3','text-left','m6drive-drag-content-show','drive-getting-folder')),
          array('data' => $UserFnameLname['realname'],'class' => array('col-md-2','text-left')),
          array('data' => date('M d, Y', strtotime($values->created_date)),'class' => array('col-md-2','text-left')),
          array('data'=>'-','class'=>array('col-md-2','text-left')),       
        ),
        'id' => array(''.$values->Id.''),  
        'class' => array('custom-odd', $Dragclass, $Dropclass,'m6drive-folderdelete-'.$values->Id.'-'.$company->nid.'-row', 'customsearchformydrive'),
      );
    }
    if ($values->file) {
      $fid =  $values->file;
      $filevalue = file_load($fid);
      $uri = $filevalue->uri;
      $filename =  $filevalue->filename;
      $filename_str = strlen($filename) > 22 ? substr($filename, 0, 19) . '...' : $filename;
      $filetype = $filevalue->type;
      $filepath = file_create_url($uri);  
      $Attachment = l($filename_str, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$values->Id))); 
      $share_with_url = m6drive_check_file_folder_shared('file', $fid);

      $rows[] = array(
        'data' => array(
          array('data'=>'<span class="folder-ids" style="display:none;">' . $fid . '-file</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
          array('data'=>'<span class="project-drive-nids" style="display:none;">' . $values->company_nid . '</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
          array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="' . $filename . '" name="m6drive-folder-'. $fid . '" value="' . $fid . '-file" class="form-checkbox m6drive-folder-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
          array('data'=>  $Attachment, 'class' => array('col-md-3','text-left','m6drive-drag-content-show','drive-getting-folder')),
          array('data' => $UserFnameLname['realname'],'class' => array('col-md-2','text-left')),
          array('data' => date('M d, Y', strtotime($values->created_date)),'class' => array('col-md-2','text-left')),
          array('data'=> _get_m6drive_total_space_user_fid($fid),'class'=>array('col-md-2','text-left')),
        ),
        'class' => array('custom-odd','customsearchformydrive', $Dragclass,'m6drive-folderdelete-' . $fid . '-' . $company->nid . '-row'),
      );
    }
  }
  $return .= '<div class="list-view" style="' . $list_display . '">'; 
  $return .= theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No file or folders yet','attributes'=>array('class'=>array('table','m6connect-custom-m6drive-search-folder-name','table-striped','table-hover','table-bordered','text-center'))));
  $return .= '</div>';
  //==== End Table List View======

  // Start here for div structure Grid view=====

  $return .= '<div class="grid-view" style="' . $grid_display . '">';
  $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Folders') . '</h3></div>';
  $return .= '<div class="grid-view-folders row margin-5">';
  // First handling only Folders.
  $folders_present = FALSE;
  $files_present = FALSE;
  foreach ($div_structure as $key => $value) {
    if ($value->foldername) {
      $folders_present = TRUE;
    }
    if ($value->file && $filevalue = file_load($value->file)) {
      $files_present = TRUE;
    }
  }
  if (!$folders_present) {
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No folders yet</strong></div>'; 
  }
  else {
    foreach($div_structure  as $values) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      if($values->foldername) {
        $parents = m6drive_get_parent_folder($values->Id);
        if (!empty($parents)) {
        foreach ($parents as $key => $value) {
          foreach ($value as $key1 => $value1) {
            if (is_array($value1)) {
              $values->company_nid = $key1;
            }
          }
        }
        }
        $load_path = '';
        if (isset($values->share_to_uid)) {
          $load_path = $values->services == 'm6drive' ? 'share-load-drivedata/' . $values->foldername.'/'.$values->Id.'/nojs' : 'project-share-load-drive/' . $values->company_nid . '/' . $values->Id . '/nojs';
        }
        else {
          $load_path = $values->services == 'm6drive' ? 'load-drive-data/' . $values->foldername.'/'.$values->Id.'/nojs' : 'project-load-drive/' . $values->company_nid . '/' . $values->Id . '/nojs';
        }
        $foldername_str = strlen($values->foldername) > 22 ? substr($values->foldername, 0, 19) . '...' : $values->foldername;
        $foldericon   = $Grid_folder_icon_image . ucwords(str_replace('_', ' ', $foldername_str)).'';

        $return .= '<div id="' . $values->Id . '" class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10 ' . $Dragclass . ' ' . $Dropclass . '">';

        $return .= '<div class="m6drive-display-none-drag" style="display: none;"><span class="folder-ids" style="display:none;">' . $values->Id. '-folder</span></div>';
        $return .= '<div class="m6drive-display-none-drag" style="display: none;"><span class="project-drive-nids" style="display:none;">' . $values->company_nid. '</span></div>';

        $return .= '<div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.ucwords(str_replace('_', ' ', $values->foldername)).'" name="m6drive-folder-' . $values->Id . '" value="' . $values->Id . '-folder" class="form-checkbox m6drive-folder-checkbox"></div>';

        $return .= '<div class="grid-item-anchor clearfix m6drive-drag-content-show">';
        $return .= l($foldericon, $load_path, array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));
        $return .= '</div>'; //end grid-item-anchor.
        $return .= '</div>'; //end grid-view-folder-item
      }
    }
  }
  $return .= '</div>'; //end grid-view-folders

  // Then handling only Files.
  $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Files') . '</h3></div>';
  $return .= '<div class="grid-view-files row margin-5">';
  if (!$files_present) {
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No files yet</strong></div>';
  }
  else {
    foreach($div_structure  as $values) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      if ($values->file &&  $filevalue = file_load($values->file)) {
        $return .= '<div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10 ' . $Dragclass . '">';
        $fid =  $values->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $img_url = image_style_url('user_image_large', $uri);
        $filename =  $filevalue->filename;
        $filename_str = strlen($filename) > 22 ? substr($filename, 0, 19) . '...' : $filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        $fileicondrive = _get_file_icon_m6drive($filevalue->filemime);
        if ($fileicondrive) {
          $img_url = $fileicondrive;
        }
        else {
          $img_url = image_style_url('user_image_large', $uri);
          $img_url = '<img src= '.$img_url.'>';
        }
        $img_src = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>' . $img_url . ' <div class="clearfix text-blue grid-item-anchor m6drive-drag-content-show">'.$filename_str.'</div>';
        $return .= '<div class="m6drive-display-none-drag" style="display: none;"><span class="folder-ids" style="display:none;">'.$fid.'-file</span></div>';
        $return .= '<div class="m6drive-display-none-drag" style="display: none;"><span class="project-drive-nids" style="display:none;">' . $values->company_nid . '</span></div>';
        $return .= '<div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-folder-'.  $fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-folder-checkbox"></div>';
        $return .= $img_src;
        $return .= '</div>'; // end grid-view-file-item.
      }
    }
  }
  $return .= '</div>'; // end grid-view-files.
  $return .= '</div>'; // end grid-view.
  // End here for div structure Grid view=======

  return $return;
}


function m6drive_attachment_get_all_file_name_using_filename($filename, $drive = '') {
  global $user, $company;
  $result = array();
  if (isset($filename)) {
    $query = db_select('m6connect_m6drive_attachment','att');
    $query->leftjoin ('file_managed', 'fmu', 'fmu.fid = att.file');
    $query->fields('att', array('file','created_date','user_uid','company_nid'));
    $query->fields('fmu', array('fid','uri','filesize','filename'));
    $query->condition('att.user_uid', $user->uid); 
    $query->condition('att.company_nid',$company->nid);
    if ($drive == 'personal') {
      $query->condition('att.services', 'm6drive');
    }
    else {
      $query->condition('att.services', 'm6drive_project');
    }
    $query->condition('fmu.filename', '%' . db_like($filename).'%', 'LIKE');
    $result = $query->execute()->fetchAll();
  }
  return $result;
}

function m6drive_shared_get_all_file_folder_using_serachkey($searchkey, $drive = '') {
  global $user;
  $query = db_select('m6connect_m6drive_shared', 'mds'); 
  $query->leftjoin('m6connect_m6drive', 'm6d', 'm6d.Id = mds.folder_id');    
  $query->fields('m6d',array('Id','parent_id','foldername','created_date', 'services'));
  $query->fields('mds',array('share_to_uid','email_id'));
  $query->addField('mds', 'share_by_uid', 'user_uid');
  $query->condition('mds.share_to_uid', $user->uid,'=');
  if ($drive == 'personal') {
  $query->condition('mds.services', 'm6drive');
  }
  else {
  $query->condition('mds.services', 'm6drive_project');
  }
  $query->condition('m6d.foldername', '%'. db_like($searchkey).'%', 'LIKE');
  $record = $query->execute()->fetchAll();
  return  $record;
}
function m6drive_shared_get_all_file_using_serachkey($searchkey, $drive = '') {
  global $user;
  $query = db_select('m6connect_m6drive_shared','mds');
  $query->leftjoin ('file_managed', 'fmu', 'fmu.fid = mds.fid');
  $query->fields('fmu', array('fid','uri','filesize','filename'));
  $query->fields('mds',array('share_to_uid','email_id'));
  $query->addField('mds', 'share_by_uid', 'user_uid');
  $query->addField('mds', 'fid', 'file');
  $query->addField('mds', 'shared_date', 'created_date');
  $query->condition('mds.share_to_uid', $user->uid,'=');
  if ($drive == 'personal') {
    $query->condition('mds.services', 'm6drive');
  }
  else {
    $query->condition('mds.services', 'm6drive_project');
  }
  $query->condition('fmu.filename', '%' . db_like($searchkey).'%', 'LIKE');
  $record = $query->execute()->fetchAll();
    
  return  $record;
}

//===Start breadcrumb programmatically for serach folder file using arg===//

function m6drive_breadcrumb_for_search_folder_up($folderid = 0, $ajax = NULL) {
   // drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
     ctools_include('ajax');  
 $folder = get_folder_name_by_folderid($folderid);
 $foldername = '';
 if ($folder && is_object($folder)) {
  $foldername = $folder->foldername;
 }
  //$m6driveActiveClass = 'active';
  // $output = get_drive_listing_table_data($folder,$folderid);  
  // $output2 = _get_left_drive_panel($folder,$folderid, $m6driveActiveClass);  
  $outputbreadcrumb = m6drive_breadcrumb_for_folder_search($foldername,$folderid);

  //$commands = array();
  // $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", $output);
  // $commands[] = ajax_command_html("#left-main-continter-for-panel", $output2);
  //$commands[] = ajax_command_html("#right-main-continter-for-breadcrumb", $outputbreadcrumb);
  //print ajax_render($commands);
  //return array('#type' => 'ajax', '#commands' => $commands); 
  print $outputbreadcrumb;
  exit;  


 
  // drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');  
  // $m6driveActiveClass = 'active';

  // $folder = get_folder_name_by_folderid($folderid);
  //  ctools_include('ajax');
  //  $outputbreadcrumb = m6drive_breadcrumb_for_folder($folder,$folderid);
  //  $outputbreadcrumb = str_replace('Object', $folder , $outputbreadcrumb);
  //  print $outputbreadcrumb;
  
  //   $commands = array();
  //   $commands[] = ajax_command_html("#right-main-continter-for-breadcrumb", drupal_render($outputbreadcrumb), $settings = NULL); 
  //   // return array('#type' => 'ajax', '#commands' => $commands); 

}


//===end breadcrumb programmatically rogrammatically for serach folder file using arg=====//



function get_all_childFunction($folderid ,$uid) {
  //$folder[] = '';
  $i = 0;
  $getdatapernent = get_info_folderID($folderid ,$uid);
  foreach ($getdatapernent as $key => $value) {
    if($value->parent_id){
      $folder = get_all_childFunction($value->Id ,$uid);
      $branch[] = $value->Id;
    }
     // $i++;
     // //$inner_res = get_all_childFunction($value->Id ,$uid);
     //  $folder[] = $value->Id;
     //  $folder = array_merge($folder[$folderid],get_all_childFunction($value->Id ,$uid), $i);
  }

  return $branch;
}


function get_info_folderID($folderid ,$uid) {
  $query = db_select('m6connect_m6drive','m6d');
    $query->fields('m6d');
    $query->condition('m6d.parent_id', $folderid);
    $query->condition('m6d.user_uid', $uid);
    $record = $query->execute()->fetchAll();
    return $record;
}

/**
 * Menu callback for folders-drag-drop/%/%.
 */
function m6drive_folders_drag_drop_callback($folderdrag, $folderdrop = FALSE) {
  // global $user, $company;
  $getStatusDrag = explode('-', $folderdrag);
  $can_drag = TRUE;

  if (empty($getStatusDrag)) {
    print 'Failure';
    drupal_exit(0);
  }

  // First of all checking if a folder which is being dragged into some other
  // is not a parent of the destination folder. If so, aborting!
  if ($getStatusDrag[1] == 'file') {
    $can_drag = TRUE;
  }
  else {
    $childs = m6drive_update_status_child_file_folder($getStatusDrag[0]);
    if (!empty($childs)) {
      foreach ($childs as $key => $value) {
        if (!empty($value->Id)) {
          if ($value->Id == $folderdrop) {
            $can_drag = FALSE;
          }
        }
      }
    }
  }

  if ($can_drag) {
    $bucket = 'dev.repo.m6connect.com';
    if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
    if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
    if(!defined('awsSecretKey')) define('awsSecretKey', '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');
    $s3 = new S3(awsAccessKey, awsSecretKey);

    $Currentfolder = '';
    $Currentfolders = get_folder_name_by_folderid($folderdrop);
    if (is_object($Currentfolders)) {
      $Currentfolder = $Currentfolders->foldername;
    }

    $output = m6drive_get_parent_folder($folderdrop);
    $Parentfolder = '';
    foreach($output as $key => $values){
      $Parentfolder .=  implode("", $values) . "/"; 
    }

    $foldername = '';
    if(!empty($Currentfolder)){
      $foldername = $Parentfolder.$Currentfolder; 
    }
    $companyName =  str_replace(' ','_',$company->title);
    $userName = str_replace(' ','_',$user->name);

    if ($getStatusDrag[1] == 'folder') {
      $Folderid = $getStatusDrag[0];
      if($folderdrop !== FALSE) {
        // This is the case, when the request is made by the owner and we need
        // to do a lot of things.
        // First creating new folder structure at S3 Amazon.
        _create_new_structure_at_amazon($Folderid, $foldername);

        // After creating the structure, we move files in the new structure.
        _move_files_into_new_structure($Folderid, $foldername);

        // After we have successfully created new structure and moved files in
        // it, we remove the old structure from S3.
        _clear_old_structure_from_s3($Folderid);

        // Changing the parent structure in our table.
        db_update('m6connect_m6drive')
          ->fields(array(
            'parent_id' => $folderdrop,
          ))
          ->condition('Id', $Folderid,'=')
          ->execute();
      }
    }
    elseif (($getStatusDrag[1] == 'file')) {
      $fileId = $getStatusDrag[0];

      $query = db_select('m6connect_m6drive_attachment', 'm')
        ->fields('m')
        ->condition('file', $fileId,'=')
        ->execute()
        ->fetchObject();

      $org_company = node_load($query->company_nid);
      $org_user = user_load($query->user_uid);
      $companyName = str_replace(' ','_',$org_company->title);
      $userName = str_replace(' ','_',$org_user->name);

      if ($folderdrop !== FALSE && $fileObj = file_load($fileId)) {
        if(!empty($fileId) && is_numeric($fileId)) {
          db_update('m6connect_m6drive_attachment')
            ->fields(array(
              'folder_id' => $folderdrop,
            ))
            ->condition('file', $fileId)
            ->execute();
          if (empty($foldername)) {
            $destination =  'private://' . $companyName . '/M6Drive/' . $userName;
          }
          else {
            $destination =  'private://' . $companyName . '/M6Drive/' . $userName . '/' . $foldername;
          }
          $fileName = $fileObj->filename;
          file_prepare_directory($destination, FILE_CREATE_DIRECTORY|FILE_MODIFY_PERMISSIONS);
          $moved_file = file_move($fileObj, $destination.'/'.$fileName, FILE_EXISTS_RENAME);
        }
      }
    }
    print 'Success';
    drupal_exit(0);
  }
  print 'Failure';
  drupal_exit(0);
}

/**
 * Menu callback for m6drive-project-restore-trash/%/%/%ctools_js.
 */
function m6drive_project_restore_trash_callback($type, $projectnid, $ajax = NULL) {
  if($ajax){
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
     'ajax' => TRUE,
    );
  $output = ctools_modal_form_wrapper('m6drive_project_restore_trash_form', $form_state);
  if(!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
  print ajax_render($output);
  drupal_exit();
  }
  return drupal_get_form('m6drive_project_restore_trash_form');
}

function m6drive_project_restore_trash_form($form, &$form_state) {
  $form['multiple_projectnid'] = array(
      '#type' => 'textarea',
      '#attributes'=> array('class'=> array('multiple-project-drive-perform')),
      '#prefix' => '<div style="display:none;">',
      '#suffix' => '</div>'
  );
   $form['m6drive_action_title'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="group-action-status row margin-bottom-10"><div class="col-md-2 cross-icons"><i class="fa fa-archive"></i></div><div class="col-md-10 remove-member" style="font-size:16px;"> Are you sure you want to restore: <span class="multiple-project-folders-show"></span> ?</div></div>',
  );
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('m6drive_project_restore_trash_form_submit'),
    '#value' => 'Confirm',
    '#prefix' => '<div class="clearfix text-right">',  
    '#suffix' => $closeButton.'</div></div></div>', 
  );  

  return $form;
}

/**
 * Submit handler for m6drive_project_restore_trash_form().
 */
function m6drive_project_restore_trash_form_submit($form, &$form_state) {
  global $user;
  global $company;
  $values = $form_state['values']; 
  $projectMultiple = $values['multiple_projectnid'];
  $projectfolder =  explode(',' ,$projectMultiple);

  if (!empty($projectfolder)) {
    foreach($projectfolder as $multKey => $multVal) {
      $getStatus = explode('-', $multVal);
      if ($getStatus[1] == 'folder') {
        // There are no files on root folder of project drive.
        // Only projects are present. So we check only here, if the folder is
        // project folder or inner folder.
        $projectnidMul = $getStatus[0];
        if (!empty($projectnidMul)) {
          // First handling this folder's children, if present.
          _untrash_folder_and_file_project($projectnidMul);

          // Acting on the current folder.
          $query = db_select('m6connect_m6drive', 'm')
            ->fields('m')
            ->condition('Id', $projectnidMul)
            ->condition('services', 'm6drive_project')
            ->condition('company_nid', $company->nid)
            ->condition('user_uid', $user->uid)
            ->execute()
            ->rowCount();
          if ($query > 0) {
            // This is the case when the folder is inner folder.
            // In this case, just updating the trash status in table.
            db_update('m6connect_m6drive')
              ->fields(array(
                'trash_status' => 0,
                'root' => 0,
              ))
              ->condition('Id', $projectnidMul)
              ->execute();
          }
          else {
            // Deleting the trash entry.
            db_delete('m6connect_project_drive_trash')
              ->condition('user_uid', $user->uid)
              ->condition('project_nid', $projectnidMul)
              ->condition('services', 'm6drive_project')
              ->execute();
          }
        }
      }
      elseif ($getStatus[1] == 'file') {
        $fileIdMul = $getStatus[0];
        if (!empty($fileIdMul)) {
          // As file can not be present in root folder, so we are sure that the
          // file is in inner folder, and hence present in attachment table.
          // So changing trash status there.
          db_update('m6connect_m6drive_attachment')
            ->fields(array(
              'trash_status' => 0,
              'root' => 0,
            ))
            ->condition('file', $fileIdMul)
            ->execute();
        }
      }
    }
  }

  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
        $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
        $form_state['ajax_commands'][] =ctools_ajax_command_redirect('/project/trash-drive'); 
        
  }
}

/**
 * Helper function for un-trash project drive folders.
 */
function _untrash_folder_and_file_project($folderMul) {
  // When this function is called, then we are sure, that we are dealing with
  // the inner folders and not the root folder. So, technically there is 
  // no need to check whether a folder is project folder or inner folder, as
  // we had already dealt with the project folder, when this function was
  // called.
  global $user;
  global $company;
  $childs = m6drive_update_status_child_file_folder($folderMul);
  if (!empty($childs)) {
    // If the folder, we are to un-trash, has children, then dealing here,
    // that too recursively.
    foreach ($childs as $key => $value) {
      if (!isset($value->file)) {
        // The current entry is a folder.
        _untrash_folder_and_file_project($value->Id);
        db_update('m6connect_m6drive')
          ->fields(array(
            'trash_status' => 0,
          ))
          ->condition('Id', $value->Id)
          ->execute();
      }
      else {
        // When the current entry is a file.
        db_update('m6connect_m6drive_attachment')
          ->fields(array(
            'trash_status' => 0,
          ))
          ->condition('file', $value->file)
          ->execute();
      }
    }
  }
  else {
    // This may be the case, when the folder is a blank folder.
    // Simply updating its archive status.
    db_update('m6connect_m6drive')
      ->fields(array(
        'trash_status' => 0,
      ))
      ->condition('Id', $folderMul)
      ->execute();
  }
}

/**
 * Menu callback for
 */
function project_drive_delete_permanent_trash_callback($type, $deleteid, $ajax = NULL) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
      'ajax' => TRUE,
      'delete_id' => $deleteid,
      'delete_type' => $type,
    );
    $output = ctools_modal_form_wrapper('project_drive_delete_permanent_trash_form', $form_state);
    if(!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit();
  }
  return drupal_get_form('project_drive_delete_permanent_trash_form', $type, $deleteid);
}

function project_drive_delete_permanent_trash_form($form, &$form_state) {
  $form['multiple_projectnid'] = array(
      '#type' => 'textarea',
      '#attributes'=> array('class'=> array('multiple-project-drive-perform')),
      '#prefix' => '<div style="display:none;">',
      '#suffix' => '</div>'
  );
   $form['m6drive_action_title'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="group-action-status row margin-bottom-10"><div class="col-md-2 cross-icons"><i class="fa fa-archive"></i></div><div class="col-md-10 remove-member" style="font-size:16px;"> Are you sure you want to permanantly delete: <span class="multiple-project-folders-show"></span> ?</div></div>',
  );
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('project_drive_delete_permanent_trash_submit'),
    '#value' => 'Confirm',
    '#prefix' => '<div class="clearfix text-right">',  
    '#suffix' => $closeButton.'</div></div></div>', 
  );  

  return $form;
}

/**
 * Submit handler for project_drive_delete_permanent_trash().
 */
function project_drive_delete_permanent_trash_submit($form, &$form_state) {
  global $user;
  global $company;
  $values = $form_state['values']; 
  $projectMultiple = $values['multiple_projectnid'];
  $projectfolder =  explode(',' ,$projectMultiple);

  if (!empty($projectfolder)) {
    foreach ($projectfolder as $multKey => $multVal) {
      $getStatus = explode('-', $multVal);
      if ($getStatus[1] == 'folder') {
        $projectnidMul = $getStatus[0];
        // As project node folders are not uploaded folders and are actual
        // nodes, so these can not be deleted, only deleting uploaded folders.
        // First of all dealing with child folders and files.
        _delete_folder_and_file_project_perm($projectnidMul);
        $query = db_select('m6connect_m6drive', 'm')
          ->fields('m')
          ->condition('Id', $projectnidMul)
          ->execute()
          ->rowCount();
        if ($query > 0) {
          // We are dealing with a uploaded folder.
          // Removing from shared table.
          db_delete('m6connect_m6drive_shared')
            ->condition('folder_id', $projectnidMul)
            ->condition('share_by_uid', $user->uid)
            ->condition('services', 'm6drive_project')
            ->execute();

          // Removing from main folder.
          db_delete('m6connect_m6drive')
            ->condition('Id', $projectnidMul)
            ->condition('user_uid', $user->uid)
            ->condition('company_nid', $company->nid)
            ->condition('services', 'm6drive_project')
            ->execute();
        }
        else {
          // Removing from project trash drive also.
          db_delete('m6connect_project_drive_trash')
            ->condition('project_nid', $projectnidMul)
            ->condition('user_uid', $user->uid)
            ->execute();
        }
      }
      elseif ($getStatus[1] == 'file') {
        $fileIdMul = $getStatus[0];
        if (!empty($fileIdMul)) {
          if($fileObj = file_load($fileIdMul)) {
            file_delete($fileObj);
          }

          // Deleting entry from attachment table.
          db_delete('m6connect_m6drive_attachment')
            ->condition('file', $fileIdMul)
            ->condition('user_uid', $user->uid)
            ->condition('company_nid', $company->nid)
            ->execute();

          // Deleting entry from shared table.
          db_delete('m6connect_m6drive_shared')
            ->condition('fid', $fileIdMul)
            ->condition('share_by_uid', $user->uid)
            ->execute();

          // Removing from project trash drive also.
          db_delete('m6connect_project_drive_trash')
            ->condition('fid', $fileIdMul)
            ->condition('user_uid', $user->uid)
            ->execute();
        }
      }
    }
  }

  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
    $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
    $form_state['ajax_commands'][] =ctools_ajax_command_redirect('/project/trash-drive');
  }
}

/**
 * Helper function to permanently delete folder and files from project drive.
 */
function _delete_folder_and_file_project_perm($folderMul) {
  global $user, $company;
  $companyName = str_replace(' ', '_', $company->title);

  $bucket = 'dev.repo.m6connect.com';
  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('AWSACCESSKEY')) define('AWSACCESSKEY', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('AWSSECRETKEY')) define('AWSSECRETKEY', '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');
  $s3 = new S3(AWSACCESSKEY, AWSSECRETKEY);

  $query = db_select('m6connect_m6drive', 'm6d');
  $query->fields('m6d',array('foldername'));
  $query->condition('m6d.user_uid', $user->uid);
  $query->condition('m6d.company_nid', $company->nid); 
  $query->condition('m6d.Id', $folderMul);
  $Currentfolder = $query->execute()->fetchField();

  $output = m6drive_get_parent_folder($folderMul);

  foreach ($output as $key => $value) {
    foreach ($value as $key1 => $value1) {
      if (is_array($value1)) {
        $projectnid = $key1;
        $project = node_load($projectnid);
        $projectName =  str_replace(' ','_',$project->title);
        $projectName .= '/';
      }
    }
  }

  $Parentfolder = '';
  foreach($output as $key=>$values) {
    $shifted = array_shift($values);
    if (is_array($shifted)) {
      // If this entry is array, then this means that it is the node entry.
      // Meaning project name, which we are attaching manually.
      continue;
    }
    $Parentfolder .=  $shifted . "/"; 
  }

  if (isset($Currentfolder) && !empty($Currentfolder) && isset($projectName)) {
    $foldername =  $Parentfolder . $Currentfolder;
    $folder = 's3fs-private/'.$companyName.'/ProjectDocuments/'.$projectName.$foldername.'/M6Drive.txt';
  }

  $childs = m6drive_update_status_child_file_folder($folderMul);
  if (empty($childs)) {
    // Dealing with the last folder in heirarchy.
    db_delete('m6connect_m6drive_shared')
      ->condition('folder_id', $folderMul)
      ->condition('share_by_uid', $user->uid)
      ->execute();

    db_delete('m6connect_m6drive')
      ->condition('Id', $folderMul)
      ->condition('user_uid', $user->uid)
      ->condition('company_nid', $company->nid)
      ->execute();

    if (!empty($folder)) {
      $s3->deleteObject($bucket, $folder, S3::ACL_PRIVATE);
    }
  }
  else {
    foreach($childs as $value) {
      if (!isset($value->file)) {
        // When the entry is a folder.
        _delete_folder_and_file_project_perm($value->Id);

        db_delete('m6connect_m6drive_shared')
          ->condition('folder_id', $value->Id)
          ->condition('share_by_uid', $user->uid)
          ->execute();

        db_delete('m6connect_m6drive')
          ->condition('Id', $value->Id)
          ->condition('user_uid', $user->uid)
          ->condition('company_nid', $company->nid)
          ->execute();

        if (!empty($folder)) {
          $s3->deleteObject($bucket, $folder, S3::ACL_PRIVATE);
        }
      }
      else {
        // When it is a file.
        $fid = $value->file;
        db_delete('m6connect_m6drive_attachment')
          ->condition('file', $fid)
          ->condition('user_uid', $user->uid)
          ->condition('company_nid', $company->nid)
          ->execute();

        db_delete('m6connect_m6drive_shared')
          ->condition('fid', $fid)
          ->condition('share_by_uid', $user->uid)
          ->execute();

        if ($fileObj = file_load($fid)) {
          file_delete($fileObj);
        }
      }
    }
    if (!empty($folder)) {
      $s3->deleteObject($bucket, $folder, S3::ACL_PRIVATE);
    }
  }
}

/**
 * Helper function to create new folder structure at amazon S3.
 */
function _create_new_structure_at_amazon($Folderid, $foldername) {
  // The $foldername is the new folder destination where we need to create the
  // folder structure of $Folderid.
  global $user, $company;
  $companyName =  str_replace(' ','_',$company->title);
  $userName = str_replace(' ','_',$user->name);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $original_user = user_load($query->user_uid);
    $companyName =  str_replace(' ','_',$original_company->title);
    $userName = str_replace(' ','_',$original_user->name);
  }

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  $Currentfolder = $Currentfolder->foldername;

  if ($foldername != '') {
    $newFoldername = $foldername . '/' . $Currentfolder;
  }
  else {
    $newFoldername = $Currentfolder;
  }

  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('awsSecretKey')) define('awsSecretKey', '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');
  $s3 = new S3(awsAccessKey, awsSecretKey);
  $s3->putObjectFile('M6Drive.txt', 'dev.repo.m6connect.com', 's3fs-private/'.$companyName.'/M6Drive/'.$userName.'/'.$newFoldername.'/M6Drive.txt', S3::ACL_PRIVATE);

  // Recursively adding child folders into the new structure.
  $childs = m6drive_update_status_child_file_folder($Folderid);
  foreach ($childs as $child) {
    if (isset($child->Id) && !isset($child->file)) {
      // We are only working here for folders, and not Files.
      _create_new_structure_at_amazon($child->Id, $newFoldername);
    }
  }
}

/**
 * Helper function to move files into new structure at amazon S3.
 */
function _move_files_into_new_structure($Folderid, $foldername) {
  global $user, $company;
  $companyName =  str_replace(' ','_',$company->title);
  $userName = str_replace(' ','_',$user->name);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $original_user = user_load($query->user_uid);
    $companyName =  str_replace(' ','_',$original_company->title);
    $userName = str_replace(' ','_',$original_user->name);
  }

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  $Currentfolder = $Currentfolder->foldername;

  if ($foldername != '') {
    $newFoldername = $foldername . '/' . $Currentfolder;
  }
  else {
    $newFoldername = $Currentfolder;
  }

  $childs = m6drive_update_status_child_file_folder($Folderid);
  foreach ($childs as $child) {
    if (isset($child->file)) {
      // Working with files only.
      $destination =  'private://'.$companyName.'/M6Drive/'.$userName.'/'.$newFoldername;
      $fileObj = file_load($child->file);
      $fileName = $fileObj->filename;
      file_prepare_directory($destination, FILE_CREATE_DIRECTORY|FILE_MODIFY_PERMISSIONS);
      $moved_file = file_move($fileObj, $destination.'/'.$fileName, FILE_EXISTS_RENAME);
    }
    elseif (isset($child->Id)) {
      // If it is a folder, then getting it's files.
      _move_files_into_new_structure($child->Id, $newFoldername);
    }
  }
}

/**
 * Helper function to clear old structure from Amazon S3.
 */
function _clear_old_structure_from_s3($Folderid) {
  // Here we need to deal with the child folders first.
  global $user, $company;
  $bucket = 'dev.repo.m6connect.com';

  $companyName =  str_replace(' ','_',$company->title);
  $userName = str_replace(' ','_',$user->name);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $original_user = user_load($query->user_uid);
    $companyName =  str_replace(' ','_',$original_company->title);
    $userName = str_replace(' ','_',$original_user->name);
  }

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  if (is_object($Currentfolder)) {
    $Currentfolder = $Currentfolder->foldername;
  }

  $parents = m6drive_get_parent_folder($Folderid);
  $Parentfolder = '';
  foreach($parents as $key=>$values) {
    $Parentfolder .=  implode("",$values)."/"; 
  }

  if (isset($Currentfolder) && !empty($Currentfolder)) {
    $foldername =  $Parentfolder . $Currentfolder . '/M6Drive.txt'; 
  }

  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('AWSACCESSKEY')) define('AWSACCESSKEY', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('AWSSECRETKEY')) define('AWSSECRETKEY', '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');
  $s3 = new S3(AWSACCESSKEY, AWSSECRETKEY);

  $folderlocation = $companyName.'/M6Drive/'.$userName.'/'.$foldername;

  $childs = m6drive_update_status_child_file_folder($Folderid);
  foreach ($childs as $child) {
    if (isset($child->Id)) {
      _clear_old_structure_from_s3($child->Id);
    }
  }

  // After dealing with all the childs, clearing the current one here.
  $s3->deleteObject($bucket, 's3fs-private/'. $folderlocation, S3::ACL_PRIVATE);
}

/**
 * Menu callback for project-drive-drag-drop/%/%/%.
 */
function project_drive_folders_dragdrop_callback($folderdrag, $projectnid = FALSE, $folderdrop = FALSE){
  // global $user, $company;
  // $companyName = str_replace(' ', '_', $company->title);

  // Search drive also uses this callback for moving files and folders, so we
  // need to confirm that the drop and drag is happening in the same project.
  $can_drag = FALSE;
  if (!empty($projectnid) && is_numeric($projectnid) && !empty($folderdrop)) {
    $drop_parents = m6drive_get_parent_folder($folderdrop);
    foreach ($drop_parents as $key => $values) {
      foreach ($values as $key1 => $value1) {
        if (is_array($value1)) {
          if ($key1 == $projectnid) {
            $can_drag = TRUE;
          }
        }
      }
    }
  }

  // There may be this case, when a folder is dropped from an inner folder to
  // the node root folder. In this case, the folderdrop would be 0.
  // So if we get folderdrop 0, we are checking once again here.
  if ($folderdrop !== FALSE && empty($folderdrop)) {
    // If folderdrop is 0 or '0'.
    $can_drag = TRUE;
  }

  $getStatusDrag = explode('-', $folderdrag);

  if (!empty($folderdrop) && $getStatusDrag[1] == 'folder') {
    // Need to check if a parent uploaded folder is not dragged in it's child.
    $childs = m6drive_update_status_child_file_folder($getStatusDrag[0]);
    if (!empty($childs)) {
      foreach ($childs as $key => $value) {
        if (!empty($value->Id)) {
          if ($value->Id == $folderdrop) {
            $can_drag = FALSE;
          }
        }
      }
    }
  }

  if ($getStatusDrag && $can_drag) {
    $bucket = 'dev.repo.m6connect.com';
    if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
    if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
    if(!defined('awsSecretKey')) define('awsSecretKey', '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');
    $s3 = new S3(awsAccessKey, awsSecretKey);

    $Currentfolder = get_folder_name_by_folderid($folderdrop);
    if (is_object($Currentfolder)) {
      $Currentfolder = $Currentfolder->foldername;
    }
    else {
      $Currentfolder = '';
    }

    $output = m6drive_get_parent_folder($folderdrop);
    $Parentfolder = '';
    foreach($output as $key => $values) {
      $key_n = key($values);
      $shifted = array_shift($values);
      if (is_array($shifted)) {
        if (!projectnid) {
          // In case, if we did not get projectnid, then this is also a reliable
          // way to get projectnid.
          $projectnid = $key_n;
        }
        // If this entry is array, then this means that it is the node entry.
        // Meaning project name, which we are attaching manually.
        continue;
      }
      $Parentfolder .=  $shifted . "/"; 
    }

    $projectName = '';
    if ($projectnid) {
      $project = node_load($projectnid);
      // First trying to get the main folder of the node.
      $folders_nodes = _get_rfp_project_folders($project);
      if (!empty($folders_nodes)) {
        foreach ($folders_nodes as $folder) {
          if ($folder == 'project') {
            $projectName .= 'M6_Project_Postings/';
          }
          elseif ($folder == 'rfp') {
            $projectName .= 'M6_RFPs/';
          }
          else {
            if ($folder_node = node_load($folder)) {
              $projectName .= str_replace(' ','_',$folder_node->title);
              $projectName .= '/';
            }
          }
        }
      }
      $projectName .=  str_replace(' ','_',$project->title);
      $projectName .= '/';
    }

    if (isset($Currentfolder) && !empty($Currentfolder)) {
      $foldername =  $Parentfolder . $Currentfolder;
      // $folder = 's3fs-private/'.$companyName.'/ProjectDocuments/'.$projectName.$foldername.'/M6Drive.txt';
    }

    if ($getStatusDrag[1] == 'folder') {
      $Folderid = $getStatusDrag[0];

      if ($folderdrop !== FALSE && $projectnid !== FALSE) {
        // This is the case, when the request is made by the owner and we need
        // to do a lot of things.
        // First creating new folder structure at S3 Amazon.
        _create_new_structure_at_amazon_project($Folderid, $projectnid, $foldername);

        // After creating the structure, we move files in the new structure.
        _move_files_into_new_structure_project($Folderid, $projectnid, $foldername);

        // After we have successfully created new structure and moved files in
        // it, we remove the old structure from S3.
        _clear_old_structure_from_s3_project($Folderid, $projectnid);

        // Changing the parent structure in our table.
        $parent_id = $folderdrop;
        if ($folderdrop == 0) {
          $parent_id = $projectnid;
        }
        db_update('m6connect_m6drive')
          ->fields(array(
            'parent_id' => $parent_id,
          ))
          ->condition('Id', $Folderid,'=')
          ->execute();
      }
    }
    elseif (($getStatusDrag[1] == 'file')) {
      $fileId = $getStatusDrag[0];

      $query = db_select('m6connect_m6drive_attachment', 'm')
        ->fields('m')
        ->condition('file', $fileId,'=')
        ->execute()
        ->fetchObject();

      $company = node_load($query->company_nid);
      $user = user_load($query->user_uid);


      $companyName =  str_replace(' ','_',$company->title);
      $userName = str_replace(' ','_',$user->name);

      $fileObj = file_load($fileId);
      if ($folderdrop !== FALSE && $projectnid !== FALSE && $fileObj) {
        if ($fileObj) {
          $parent_id = $folderdrop;
          if ($folderdrop == 0) {
            $parent_id = $projectnid;
          }
          db_update('m6connect_m6drive_attachment')
            ->fields(array(
              'folder_id' => $parent_id,
            ))
            ->condition('file', $fileId)
            ->execute();
          $destination =  'private://'.$companyName.'/ProjectDocuments/'.$projectName.$foldername;
          $fileName = $fileObj->filename;
          file_prepare_directory($destination, FILE_CREATE_DIRECTORY|FILE_MODIFY_PERMISSIONS);
          $moved_file = file_move($fileObj, $destination.'/'.$fileName, FILE_EXISTS_RENAME);
        }
      }
    }
    print 'Success';
    drupal_exit(0);
  }
  print 'Failure';
  drupal_exit(0);
}

/**
 * Helper function to create new folder structure for project drive at amazon S3.
 */
function _create_new_structure_at_amazon_project($Folderid, $projectnid, $foldername) {
  global $user, $company;
  $companyName = str_replace(' ', '_', $company->title);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $companyName =  str_replace(' ','_',$original_company->title);
  }

  $bucket = 'dev.repo.m6connect.com';
  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('awsSecretKey')) define('awsSecretKey', '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');
  $s3 = new S3(awsAccessKey, awsSecretKey);

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  if (is_object($Currentfolder)) {
    $Currentfolder = $Currentfolder->foldername;
  }

  if ($foldername != '') {
    $newFoldername = $foldername . '/' . $Currentfolder;
  }
  else {
    $newFoldername = $Currentfolder;
  }

  $projectName = '';
  if ($projectnid) {
    $project = node_load($projectnid);
    // First trying to get the main folder of the node.
    $folders_nodes = _get_rfp_project_folders($project);
    if (!empty($folders_nodes)) {
      foreach ($folders_nodes as $folder) {
        if ($folder == 'project') {
          $projectName .= 'M6_Project_Postings/';
        }
        elseif ($folder == 'rfp') {
          $projectName .= 'M6_RFPs/';
        }
        else {
          if ($folder_node = node_load($folder)) {
            $projectName .= str_replace(' ','_',$folder_node->title);
            $projectName .= '/';
          }
        }
      }
    }
    $projectName .=  str_replace(' ','_',$project->title);
    $projectName .= '/';
  }

  $s3->putObjectFile('M6Drive.txt', $bucket, 's3fs-private/'.$companyName.'/ProjectDocuments/'.$projectName.$newFoldername.'/M6Drive.txt', S3::ACL_PRIVATE);
  // Recursively adding child folders into the new structure.
  $childs = m6drive_update_status_child_file_folder($Folderid);
  foreach ($childs as $child) {
    if (isset($child->Id) && !isset($child->file)) {
      // We are only working here for folders, and not Files.
      _create_new_structure_at_amazon_project($child->Id, $projectnid, $newFoldername);
    }
  }
}

/**
 * Helper function to move files into new structure for project drive at amazon S3.
 */
function _move_files_into_new_structure_project($Folderid, $projectnid, $foldername) {
  global $user, $company;
  $companyName = str_replace(' ', '_', $company->title);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $companyName =  str_replace(' ','_',$original_company->title);
  }

  $bucket = 'dev.repo.m6connect.com';
  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('awsSecretKey')) define('awsSecretKey', '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');
  $s3 = new S3(awsAccessKey, awsSecretKey);

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  if (is_object($Currentfolder)) {
    $Currentfolder = $Currentfolder->foldername;
  }

  if ($foldername != '') {
    $newFoldername = $foldername . '/' . $Currentfolder;
  }
  else {
    $newFoldername = $Currentfolder;
  }

  $projectName = '';
  if ($projectnid) {
    $project = node_load($projectnid);
    // First trying to get the main folder of the node.
    $folders_nodes = _get_rfp_project_folders($project);
    if (!empty($folders_nodes)) {
      foreach ($folders_nodes as $folder) {
        if ($folder == 'project') {
          $projectName .= 'M6_Project_Postings/';
        }
        elseif ($folder == 'rfp') {
          $projectName .= 'M6_RFPs/';
        }
        else {
          if ($folder_node = node_load($folder)) {
            $projectName .= str_replace(' ','_',$folder_node->title);
            $projectName .= '/';
          }
        }
      }
    }
    $projectName .=  str_replace(' ','_',$project->title);
    $projectName .= '/';
  }

  $childs = m6drive_update_status_child_file_folder($Folderid);

  foreach ($childs as $child) {
    if (isset($child->file) && $fileObj = file_load($child->file)) {
      // Working with files only.
      $destination =  'private://'.$companyName.'/ProjectDocuments/'.$projectName.$newFoldername;
      $fileName = $fileObj->filename;
      file_prepare_directory($destination, FILE_CREATE_DIRECTORY|FILE_MODIFY_PERMISSIONS);
      $moved_file = file_move($fileObj, $destination.'/'.$fileName, FILE_EXISTS_RENAME);
    }
    elseif (isset($child->Id)) {
      // If it is a folder, then getting it's files.
      _move_files_into_new_structure_project($child->Id, $projectnid, $newFoldername);
    }
  }
}

/**
 * Helper function to clear old structure from Amazon S3.
 */
function _clear_old_structure_from_s3_project($Folderid, $projectnid) {
  global $user, $company;
  $companyName = str_replace(' ', '_', $company->title);

  $query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('Id', $Folderid)
    ->execute()
    ->fetchObject();
  if ($query->user_uid != $user->uid) {
    $original_company = node_load($query->company_nid);
    $companyName =  str_replace(' ','_',$original_company->title);
  }

  $bucket = 'dev.repo.m6connect.com';
  if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
  if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
  if(!defined('awsSecretKey')) define('awsSecretKey', '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');
  $s3 = new S3(awsAccessKey, awsSecretKey);

  $Currentfolder = get_folder_name_by_folderid($Folderid);
  if (is_object($Currentfolder)) {
    $Currentfolder = $Currentfolder->foldername;
  }

  $output = m6drive_get_parent_folder($Folderid);
  $Parentfolder = '';
  foreach($output as $key => $values) {
    $shifted = array_shift($values);
    if (is_array($shifted)) {
      // If this entry is array, then this means that it is the node entry.
      // Meaning project name, which we are attaching manually.
      continue;
    }
    $Parentfolder .=  $shifted . "/"; 
  }

  $projectName = '';
  if ($projectnid) {
    $project = node_load($projectnid);
    // First trying to get the main folder of the node.
    $folders_nodes = _get_rfp_project_folders($project);
    if (!empty($folders_nodes)) {
      foreach ($folders_nodes as $folder) {
        if ($folder == 'project') {
          $projectName .= 'M6_Project_Postings/';
        }
        elseif ($folder == 'rfp') {
          $projectName .= 'M6_RFPs/';
        }
        else {
          if ($folder_node = node_load($folder)) {
            $projectName .= str_replace(' ','_',$folder_node->title);
            $projectName .= '/';
          }
        }
      }
    }
    $projectName .=  str_replace(' ','_',$project->title);
    $projectName .= '/';
  }

  if (isset($Currentfolder) && !empty($Currentfolder)) {
    $foldername =  $Parentfolder . $Currentfolder;
    $folder = $companyName.'/ProjectDocuments/'.$projectName.$foldername.'/M6Drive.txt';
  }

  $childs = m6drive_update_status_child_file_folder($Folderid);
  foreach ($childs as $child) {
    if (isset($child->Id)) {
      _clear_old_structure_from_s3_project($child->Id, $projectnid);
    }
  }

  // After dealing with all the childs, clearing the current one here.
  $s3->deleteObject($bucket, 's3fs-private/'. $folder, S3::ACL_PRIVATE);
}

/**
 * Menu callback for shared-folders-drag-drop/%/%.
 */
// function m6drive_shared_folders_drag_drop_callback($folderdrag, $folderdrop = FALSE) {
//   // global $user, $company;
//   $getStatusDrag = explode('-', $folderdrag);
//   if ($getStatusDrag) {
//     $bucket = 'dev.repo.m6connect.com';
//     if(!class_exists('S3')) include_once DRUPAL_ROOT . '/sites/all/libraries/awssdk1/S3.php';
//     if(!defined('awsAccessKey')) define('awsAccessKey', 'AKIAJZCVB5B62KPYTLFA');
//     if(!defined('awsSecretKey')) define('awsSecretKey', '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');
//     $s3 = new S3(awsAccessKey, awsSecretKey);

//     $Currentfolder = get_folder_name_by_folderid($folderdrop);
//     if (is_object($Currentfolder)) {
//       $Currentfolder = $Currentfolder->foldername;
//     }

//     $output = m6drive_get_parent_folder($folderdrop);
//     $Parentfolder = '';
//     foreach($output as $key=>$values){
//       $Parentfolder .=  implode("",$values)."/"; 
//     }

//     $foldername = '';
//     if(isset($Currentfolder) && !empty($Currentfolder)){
//       $foldername =  $Parentfolder.$Currentfolder; 
//     }
    

//     if ($getStatusDrag[1] == 'folder') {
//       if($folderdrop !== FALSE) {
//         $Folderid = $getStatusDrag[0];
//         // This is the case, when the request is made by the owner and we need
//         // to do a lot of things.
//         // First creating new folder structure at S3 Amazon.
//         _create_new_structure_at_amazon($Folderid, $foldername);

//         // After creating the structure, we move files in the new structure.
//         _move_files_into_new_structure($Folderid, $foldername);

//         // After we have successfully created new structure and moved files in
//         // it, we remove the old structure from S3.
//         _clear_old_structure_from_s3($Folderid);

//         // Changing the parent structure in our table.
//         db_update('m6connect_m6drive')
//           ->fields(array(
//             'parent_id' => $folderdrop,
//           ))
//           ->condition('Id', $Folderid,'=')
//           ->execute();
//       }
//     }
//     elseif (($getStatusDrag[1] == 'file')) {
//       $fileId = $getStatusDrag[0];
//       // We need to make certain that the user requesting for change is the 
//       // owner of this file.
//       $query = db_select('m6connect_m6drive_attachment', 'm')
//         ->fields('m')
//         ->condition('file', $fileId,'=')
//         ->execute()
//         ->fetchObject();

//       $company = node_load($query->company_nid);
//       $user = user_load($query->user_uid);

//       $companyName =  str_replace(' ','_',$company->title);
//       $userName = str_replace(' ','_',$user->name);

//       $fileObj = file_load($fileId);
//       if($folderdrop !== FALSE && $fileObj) {
//         if(!empty($fileId) && is_numeric($fileId)) {
//           db_update('m6connect_m6drive_attachment')
//             ->fields(array(
//               'folder_id' => $folderdrop,
//             ))
//             ->condition('file', $fileId)
//             ->execute();
//           $destination =  'private://'.$companyName.'/M6Drive/'.$userName.'/'.$foldername;
//           $fileName = $fileObj->filename;
//           file_prepare_directory($destination, FILE_CREATE_DIRECTORY|FILE_MODIFY_PERMISSIONS);
//           $moved_file = file_move($fileObj, $destination.'/'.$fileName, FILE_EXISTS_RENAME);
//         }
//       }
//     }
//   }
// }

//======= Get all rfp node listing for m6drive

function m6drive_get_all_rfp_node_list(){

  global $user, $company;

  $query = db_select('node', 'n');
  $query->leftjoin('field_data_field_project','fdfp','fdfp.entity_id=n.nid');
  $query->fields('n', array('nid'));
  $query->condition('n.type', 'rfp', '=');
  $query->condition('n.status', 1, '=');
  $query->condition('fdfp.field_project_target_id');
  $query->groupBy('n.nid');
  $result = $query->execute()->fetchAll();
  $return = array();
  foreach ($result as $vlaue) {
    $node = node_load($vlaue->nid);
    $nodeBelongToCurrentCompany = (is_numeric($company->nid) && $company->nid == _get_company_nid_by_group_content($node));
    $cmpcall = in_array($user->uid, _get_company_users_by_group_content($node)) ;
    $cmpcall2 = in_array($user->uid, m6connect_projects_uids_from_list($node));

    if((($nodeBelongToCurrentCompany && $cmpcall) || $cmpcall2) && (!(is_rfp_expired($vlaue->nid)))){
      $return[] = $vlaue->nid;
    }
    if((is_rfp_invited_company($vlaue->nid,'rfp', TRUE)) && !(is_rfp_expired($vlaue->nid))){
      $return[] = $vlaue->nid;
    }
  }
  return array_unique($return);
}

/**
 * Helper function to get project/RFP folders for breadcrumbs.
 */
function _get_rfp_project_folders($node) {
  $return = array();
  if ($node->type == 'project') {
    $return[] = 'project';
    // $return[] = $node->nid;
  }
  if ($node->type == 'rfp') {
    if (!empty($node->field_project['und'][0]['target_id'])) {
      $return[] = 'project';
      $return[] = $node->field_project['und'][0]['target_id'];
    }
    else {
      $return[] = 'rfp';
    }
  }
  return $return;
}

function _get_all_rfp_document_images_project_drive($RfpNid) {
  $output = array();
  if (!empty($RfpNid) && is_numeric($RfpNid)) {
    $node = node_load($RfpNid);
    $fcid = $node->field_rfp_documents['und'][0]['value'];
    $fieldCollection = field_collection_item_load($fcid);
    if (isset($fieldCollection->field_rfp_document['und']) && !empty($fieldCollection->field_rfp_document['und'])) {
        foreach ($fieldCollection->field_rfp_document['und'] as $index => $fileArr) {
          $output[] = $fileArr;
        }
     }
  }
  return $output;
}

function personal_drive_progress_bar(){
 global $user, $company; 

  $divprogress = '';
  $totalSpaceInDrive = _get_m6drive_total_space_user_uid($user->uid, TRUE);
  $totalSpaceInDrive = $totalSpaceInDrive / 1048576;
  $user_allocatespace = user_personal_drive_total_space_count($user->uid);
  //if(!empty($totalSpaceInDrive)){
    
    $sum = $totalSpaceInDrive / 100;
    $weight = number_format($sum, 2);
    //$weight = 95; 
    if($weight <= 70 ){
     $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:'.$weight.'%"></div>';
    }
    if($weight > 70 && $weight <= 90){
      $classdiff = $weight - 70;
      $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:70%"></div><div class="progress-bar progress-bar-warning" role="progressbar" style="width:'. $classdiff.'%"></div>';
    }
    if($weight > 90){
      $classdiffdanger = $weight -90;
      $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:70%"></div><div class="progress-bar progress-bar-warning" role="progressbar" style="width:20%"></div><div class="progress-bar progress-bar-danger" role="progressbar" style="width:'.$classdiffdanger.'%"></div>';
    }
    $output .= '<div class="relative clearfix"><div class="clearfix text-center m6-drive-progress">'.$weight.' % of '.$user_allocatespace.' GB used</div>
                <div class="progress clearfix">
                   '.$divprogress.'
                </div></div>';

  //}
  return $output; 
}
function company_project_drive_progress_bar(){

 global $user, $company; 
  $divprogress = '';
  $totalProjectSpace = _get_total_space_project_drive_by_uid($user->uid, TRUE);
  $totalProjectSpace = $totalProjectSpace/1048576;
  $company_allocatespace = user_company_drive_total_space_count($company->nid);
  //if(!empty($totalProjectSpace)){
    
    $sum = $totalSpaceInDrive / 100;
    $weight = number_format($sum, 2);
    if($weight <= 70 ){
     $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:'.$weight.'%"></div>';
    }
    if($weight > 70 && $weight <= 90){
      $classdiff = $weight - 70;
      $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:70%"></div><div class="progress-bar progress-bar-warning" role="progressbar" style="width:'. $classdiff.'%"></div>';
    }
    if($weight > 90){
      $classdiffdanger = $weight -90;
      $divprogress .= '<div class="progress-bar progress-bar-success" role="progressbar" style="width:70%"></div><div class="progress-bar progress-bar-warning" role="progressbar" style="width:20%"></div><div class="progress-bar progress-bar-danger" role="progressbar" style="width:'.$classdiffdanger.'%"></div>';
    }
    $output .= '<div class="relative clearfix"><div class="clearfix text-center m6-drive-progress">'.$weight.' % of '.$company_allocatespace.' GB used</div>
                <div class="progress clearfix">
                   '.$divprogress.'
                </div></div>';
    
  //}
  return $output; 
}

// Check condition Company project Drive for according Global company

function m6drive_check_parent_folder_addto_mydrive($folderorfid){
 global $user, $company;
  $return = FALSE;
  $query = db_select('m6connect_m6drive_addto_mydrive', 'm')
    ->fields('m')
    ->condition(db_or()->condition('folder_id', $folderorfid)->condition('file', $folderorfid))
    ->execute()
    ->rowCount();

  if ($query > 0) {
    $return = TRUE;
  }
  else {
    $parents = m6drive_get_parent_folder($folderorfid);
    if (!empty($parents)) {
      foreach ($parents as $key => $value) {
        foreach ($value as $key1 => $value1) {
          $query = db_select('m6connect_m6drive_addto_mydrive', 'm')
            ->fields('m')
            ->condition('folder_id', $value1)
            ->execute()
            ->rowCount();
          if ($query > 0) {
            $return = TRUE;
          }
        }
      }
    }
  }
  
  return $return;
}

// === start here For personal drive Filter using chosen search form====

function personal_m6drive_filter_form($form, &$form_state ,$folder = 0, $folderid =0){

 drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
 
 global $user, $company;

 $FolArr = array();

     if(!empty($folderid) && is_numeric($folderid)) {
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.parent_id', $folderid);
      $query->condition('m6d.trash_status',0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.parent_id', $folderid);
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);

      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.folder_id', $folderid);
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    else {
      $query = db_select('m6connect_m6drive', 'm6d');    
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.user_uid', $user->uid);
      $query->condition('m6d.company_nid', $company->nid);
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.parent_id',0,'=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.root', 1);
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);

      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.user_uid', $user->uid);
      $querysub->condition('att.company_nid', $company->nid);
      $querysub->condition('att.folder_id', 0,'=');
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $query->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    $FolArr = array();
    foreach($complteresult as $key=>$value){
           if ($value->foldername){
             $FolArr[$value->Id.'-folder'] = ucwords(str_replace('_',' ',$value->foldername));
           }
           if ($value->file &&  $filevalue = file_load($value->file)) {
             $FolArr[$filevalue->fid.'-file'] = $filevalue->filename; 
           }
    }
  /*if($key == 'byOwner'){
    $UserFnameLname = '';
    foreach($complteresult as $key=>$value){
       if ($value->user_uid){
         $UserFnameLname =_get_user_data_by_uid($value->user_uid);
         $FolArr[$value->user_uid] = $UserFnameLname['realname'];
       }
    } 
  }*/

 //print "<pre>"; print_r($FolArr); die;

$form['folder_name'] = array(
  '#type' => 'select',
  //'#empty_option' => '- Select Folders Or Files -',
  '#options' => $FolArr,
  '#chosen' => TRUE,
  '#multiple' => TRUE,
  '#attributes' => array('class' => array('folder_name_filter_select')),
  '#ajax' => array(
    'callback'=> 'personal_m6drive_filter_callback',
    'wrapper' => 'm6-drive-datacontainer-main-cust',
    'event' => 'change',
    'effect' => 'fade',
    //'method' => 'replace',
  ),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div>',
);

  return $form;
}
function personal_m6drive_filter_callback($form, &$form_state){

drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $user, $company;  
  $commands = array();
  $filefolder = $form_state['values'];
 // print "<pre>"; print_r($filefolder); die;
  $complteresult = array();

  if(!empty($filefolder['folder_name'])) {
      foreach ($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
        if($getStatus[1] == 'folder') {
            $folderIdMul = $getStatus[0];
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.Id', $folderIdMul);
                $query->condition('m6d.trash_status',0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
                $record_1 = $query->execute()->fetchAll();
                // Getting add to my drive content.
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.services','m6drive','=');
                $query->condition('m6d.trash_status', 0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                $query->condition('m6ad.user_uid', $user->uid, '=');
                $query->condition('m6ad.Id', $folderIdMul);
                $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
                $record_2 = $query->execute()->fetchAll();
                $record = array_merge($record_1, $record_2);
                foreach ($record as $key => $value) {
                  $complteresult[] = $value;
                }
        }
        else if($getStatus[1] == 'file') {
            $fileIdMul = $getStatus[0];
            $querysub = db_select('m6connect_m6drive_attachment','att');    
            $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
            $querysub->condition('att.file', $fileIdMul);
            $querysub->condition('att.trash_status', 0,'=');
            $querysub->condition('att.archive_status', 0,'=');
            $querysub->orderBy('att.created_date', 'DESC'); //ORDER BY created Desc
            $recordsub = $querysub->execute()->fetchAll();
            foreach($recordsub as $key => $value) {
              $complteresult[] = $value;
            }
           
        }
      }
    $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, 0, $complteresult, TRUE));
    //$commands[] = ajax_command_invoke('#my-radio-button-id', 'val', array(array('checked' => FALSE)));
   }
   else {
      $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, 0, array(), FALSE));
   }
  
  //print "<pre>"; print_r($complteresult); die;
  return array('#type' => 'ajax', '#commands' => $commands); 


}
// === start here For personal Shared drive Filter using chosen search form====

function personal_share_m6drive_filter_form($form, &$form_state ,$folder = 0, $folderid =0){

  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $user, $company;
  
  $foldericon = '';
  $companyusersdetail = '';
  $companyusersfullname = '';
  $FolArr = array();
  if(!empty($folderid) && is_numeric($folderid)){

    $sharedData =  get_m6drive_share_date_name($user->uid, $folderid);

    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
    $query->condition('m6d.parent_id', $folderid);
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('user_uid','file','created_date'));
    $querysub->condition('att.folder_id', $folderid);
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);


    foreach($complteresult  as $values) {
      if($values->foldername && _check_folder_eligibility_share($values->Id)){
        $FolArr[$values->Id.'-folder'] = ucwords(str_replace('_',' ',$values->foldername));
        
      }
      if($values->file && _check_file_eligibility_share($values->file) && $filevalue = file_load($values->file)){
        $fid =  $values->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        $FolArr[$values->file.'-file'] = $filename; 
      }    
    
   }
 
  }else{ /*========== For root folder shared drive on m6drive shared table==========*/
  $query = db_select('m6connect_m6drive_shared','srd');
  $query->fields('srd',array('id','folder_id','fid','share_by_uid','share_to_uid','shared_date', 'permissions'));
  $query->condition('srd.share_to_uid', $user->uid);
  $query->condition('srd.services', 'm6drive');
  $query->condition('srd.delete_status', 0, '=');
  $query->condition('srd.root', 1, '=');
  $query->orderBy('srd.shared_date', 'DESC');//ORDER BY created
  $record = $query->execute()->fetchAll();
  // Creating table data.
  foreach($record as $result){
    $companyusersdetail = _get_user_data_by_uid($result->share_by_uid);
    $companyusersfullname = $companyusersdetail['realname'];
    if(isset($result->folder_id) && empty($result->fid)){
      $getfoldername = get_folder_name_by_folderid($result->folder_id);
       $FolArr[$result->folder_id.'-folder'] = ucwords(str_replace('_',' ',$getfoldername->foldername));
    }
    
    if(isset($result->fid) && empty($result->folder_id) && $filevalue = file_load($result->fid)){
      $fid =  $result->fid;
      $uri = $filevalue->uri;
      $filename =  $filevalue->filename;
      $FolArr[$result->fid.'-file'] = $filename; 
    }  
    
   }
   // End table structure for root list
  //========== For root folder shared drive on m6drive shared table==========//
   
} 
  //print "<pre>"; print_r($FolArr); die;

$form['folder_name'] = array(
  '#type' => 'select',
  '#options' => $FolArr,
  '#chosen' => TRUE,
  '#multiple' => TRUE,
  '#attributes' => array('class' => array('folder_name_filter_select')),
  '#ajax' => array(
    'callback'=> 'personal_share_m6drive_filter_callback',
    'wrapper' => 'm6drive-share-datacontainer-main-cust',
    'event' => 'change',
    'effect' => 'fade',
  ),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div>',
);

  return $form;
}
function personal_share_m6drive_filter_callback($form, &$form_state){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  global $user, $company; 

  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($filefolder); die;

   if(!empty($filefolder['folder_name'])) {
      foreach ($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
        if($getStatus[1] == 'folder') {
            $folderIdMul = $getStatus[0];
               $query = db_select('m6connect_m6drive', 'm6d');    
               $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
               $query->condition('m6d.Id', $folderIdMul);
               $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
               $record = $query->execute()->fetchAll();
                // Getting add to my drive content.
                foreach ($record as $key => $value) {
                  $complteresult[] = $value;
                }
        }
        else if($getStatus[1] == 'file') {
            $fileIdMul = $getStatus[0];
            $querysub = db_select('m6connect_m6drive_attachment','att');    
            $querysub->fields('att',array('user_uid','file','created_date'));
            $querysub->condition('att.file', $fileIdMul);
            $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
            $recordsub = $querysub->execute()->fetchAll();
            foreach($recordsub as $key => $value) {
              $complteresult[] = $value;
            }
           
        }
      }
     $commands[] = ajax_command_html("#m6drive-share-datacontainer-main-cust", m6drive_share_withme_content(0, 0, $complteresult, TRUE)); 
   }
   else {
       $commands[] = ajax_command_html("#m6drive-share-datacontainer-main-cust", m6drive_share_withme_content(0, 0, array(), FALSE)); 
   }
  
  return array('#type' => 'ajax', '#commands' => $commands); 


}

// === start here For personal Trash drive Filter using chosen search form====

function personal_trash_m6drive_filter_form($form, &$form_state ,$folder = 0, $folderid =0){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  

  global $user, $company;
  $FolArr = array();
  $complteresult = array();
  
  if(!empty($folderid) && is_numeric($folderid)){
    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
    $query->condition('m6d.user_uid', $user->uid);
    $query->condition('m6d.company_nid', $company->nid);
    $query->condition('m6d.parent_id', $folderid);
    $query->condition('m6d.trash_status', 1,'=');
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('file','created_date','trash_status'));
    $querysub->condition('att.user_uid', $user->uid);
    $querysub->condition('att.company_nid', $company->nid);
    $querysub->condition('att.folder_id', $folderid);
    $querysub->condition('att.trash_status', 1,'=');
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);
  }
  else { 
    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
    $query->condition('m6d.user_uid', $user->uid);
    $query->condition('m6d.company_nid', $company->nid);
    $query->condition('m6d.services','m6drive','=');
    $query->condition('m6d.parent_id',0,'=');
    $query->condition('m6d.trash_status', 1,'=');
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('file','created_date','trash_status'));
    $querysub->condition('att.user_uid', $user->uid);
    $querysub->condition('att.company_nid', $company->nid);
    $querysub->condition('att.folder_id', 0,'=');
    $querysub->condition('att.trash_status', 1,'=');
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);
  }

  foreach($complteresult  as $values) {
    if($values->foldername){
      $FolArr[$values->Id.'-folder'] = ucwords(str_replace('_',' ',$values->foldername));
    }
    if($values->file  && $filevalue = file_load($values->file)){
      $fid =  $values->file; 
      $FolArr[$filevalue->fid.'-file'] = $filevalue->filename;    
    }   
  } 

  //print "<pre>"; print_r($FolArr); die;

  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'personal_trash_m6drive_filter_callback',
      'wrapper' => 'm6drive-trash-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function personal_trash_m6drive_filter_callback($form, &$form_state){

 drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
 drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
 drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

 module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

 global $user, $company;

  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($filefolder); die;

   if(!empty($filefolder['folder_name'])) {
      foreach ($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
        if($getStatus[1] == 'folder') {
            $folderIdMul = $getStatus[0];
               $query = db_select('m6connect_m6drive', 'm6d');    
               $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
               $query->condition('m6d.user_uid', $user->uid);
               $query->condition('m6d.company_nid', $company->nid);
               $query->condition('m6d.Id',  $folderIdMul);
               $query->condition('m6d.trash_status', 1,'=');
               $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
               $record = $query->execute()->fetchAll();
                // Getting add to my drive content.
                foreach ($record as $key => $value) {
                  $complteresult[] = $value;
                }
        }
        else if($getStatus[1] == 'file') {
            $fileIdMul = $getStatus[0];
            $querysub = db_select('m6connect_m6drive_attachment','att');    
            $querysub->fields('att',array('file','created_date','trash_status'));
            $querysub->condition('att.user_uid', $user->uid);
            $querysub->condition('att.company_nid', $company->nid);
            $querysub->condition('att.file', $fileIdMul);
            $querysub->condition('att.trash_status', 1,'=');
            $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
            $recordsub = $querysub->execute()->fetchAll();
    
            foreach($recordsub as $key => $value) {
              $complteresult[] = $value;
            }
           
        }
      }
      $commands[] = ajax_command_html("#m6drive-trash-datacontainer-main-cust", m6drive_get_trash_drive_listing_table_data(0, 0, $complteresult, TRUE));
   }
   else{
    $commands[] = ajax_command_html("#m6drive-trash-datacontainer-main-cust", m6drive_get_trash_drive_listing_table_data(0, 0, array(), FALSE));
   }
 
  return array('#type' => 'ajax', '#commands' => $commands); 


}

// ===start here For personal Archive drive Filter using chosen search form===============

function personal_archive_m6drive_filter_form($form, &$form_state ,$folder = 0, $folderid =0){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');

  global $user, $company;
  $FolArr = array();
  $complteresult = array();
  
   if(!empty($folderid) && is_numeric($folderid)){
    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','archive_status'));
    $query->condition('m6d.user_uid', $user->uid);
    $query->condition('m6d.company_nid', $company->nid);
    $query->condition('m6d.parent_id', $folderid);
    $query->condition('m6d.trash_status', 0,'=');
    $query->condition('m6d.archive_status', 1,'=');
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('file','created_date','archive_status'));
    $querysub->condition('att.user_uid', $user->uid);
    $querysub->condition('att.company_nid', $company->nid);
    $querysub->condition('att.folder_id', $folderid);
    $querysub->condition('att.trash_status', 0,'=');
    $querysub->condition('att.archive_status', 1,'=');
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);
  }
  else { 
    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','archive_status'));
    $query->condition('m6d.user_uid', $user->uid);
    $query->condition('m6d.company_nid', $company->nid);
    $query->condition('m6d.services','m6drive','=');
    //$query->condition('m6d.parent_id',0,'=');
    $query->condition('m6d.trash_status', 0,'=');
    $query->condition('m6d.archive_status', 1,'=');
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('file','created_date','archive_status'));
    $querysub->condition('att.user_uid', $user->uid);
    $querysub->condition('att.company_nid', $company->nid);
    //$querysub->condition('att.folder_id', 0,'=');
    $querysub->condition('att.trash_status', 0,'=');
    $querysub->condition('att.archive_status', 1,'=');
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);
  }

  foreach($complteresult  as $values) {
    if($values->foldername){
      $FolArr[$values->Id.'-folder'] = ucwords(str_replace('_',' ',$values->foldername));
    }
    if($values->file  && $filevalue = file_load($values->file)){
      $fid =  $values->file; 
      $FolArr[$filevalue->fid.'-file'] = $filevalue->filename;    
    }   
  } 

  //print "<pre>"; print_r($FolArr); die;

  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'personal_archive_m6drive_filter_callback',
      'wrapper' => 'm6drive-archive-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function personal_archive_m6drive_filter_callback($form, &$form_state){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

 global $user, $company; 
  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];
  
   if(!empty($filefolder['folder_name'])) {
      foreach ($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
        if($getStatus[1] == 'folder') {
            $folderIdMul = $getStatus[0];
               $query = db_select('m6connect_m6drive', 'm6d');    
               $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','archive_status'));
               $query->condition('m6d.user_uid', $user->uid);
               $query->condition('m6d.company_nid', $company->nid);
               $query->condition('m6d.Id', $folderIdMul);
               $query->condition('m6d.trash_status', 0,'=');
               $query->condition('m6d.archive_status', 1,'=');
               $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
               $record = $query->execute()->fetchAll();
                // Getting add to my drive content.
                foreach ($record as $key => $value) {
                  $complteresult[] = $value;
                }
        }
        else if($getStatus[1] == 'file') {
            $fileIdMul = $getStatus[0];
            $querysub = db_select('m6connect_m6drive_attachment','att');    
            $querysub->fields('att',array('file','created_date','archive_status'));
            $querysub->condition('att.user_uid', $user->uid);
            $querysub->condition('att.company_nid', $company->nid);
            $querysub->condition('att.file', $fileIdMul);
            $querysub->condition('att.trash_status', 0,'=');
            $querysub->condition('att.archive_status', 1,'=');
            $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
            $recordsub = $querysub->execute()->fetchAll();
    
            foreach($recordsub as $key => $value) {
              $complteresult[] = $value;
            }
           
        }
      }
     $commands[] = ajax_command_html("#m6drive-archive-datacontainer-main-cust", m6drive_get_archive_drive_listing_table_data(0, 0, $complteresult, TRUE));
   }
   else{
    $commands[] = ajax_command_html("#m6drive-archive-datacontainer-main-cust", m6drive_get_archive_drive_listing_table_data(0, 0, array(), FALSE));
   }
  return array('#type' => 'ajax', '#commands' => $commands); 
}

// ===start here For company project drive Filter using chosen search form===============

function company_project_m6drive_filter_form($form, &$form_state ,$projectnid = 0, $folder_id = 0){
  global $company, $user;


  $projectnid = (isset($form_state['projectnid'])) ? $form_state['projectnid']: $projectnid;
  $form_state['projectnid'] = $projectnid; 

  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id;
  $FolArr = array();
  $check_for_add_to_my_drive = FALSE;
  if (empty($projectnid) && empty($folder_id)) {
    $check_for_add_to_my_drive = TRUE;
  }

  if (empty($folder_id)) {
    if (!empty($projectnid) && is_string($projectnid) && !is_numeric($projectnid)) {
      // Browsing either project documents or RFP folder.

      if ($projectnid == 'project') {
        // query get project
        $CuurCompNid = $company->nid;
        $companyAdminRoleUsers = _get_company_users_by_og_roles($CuurCompNid,'company admin');
        $isCompanyIndividual = is_company_individual_flag($CuurCompNid);
        $userid = $user->uid;

        $type = array('project'); 
        $or = db_or();
        $and = db_and();
        $query = db_select('node', 'n')->extend('PagerDefault');
        $query->fields('n', array('nid'));
        $query->leftJoin('og_membership', 'ogm', 'ogm.etid=n.nid');

        if (in_array($user->uid, $companyAdminRoleUsers)) {
          $company_emails_users = db_select('m6connect_og_membership_email', 'om')->fields('om', array('user_uid','company_email'))->condition('om.entity_id', $CuurCompNid, '=')->execute()->fetchAllKeyed(0,1);
          $company_email = array_map('strtolower',array_values($company_emails_users));
          $company_user = array_keys($company_emails_users);
          
          $query->leftJoin('field_data_field_project_invite_comapnies', 'pic', 'pic.entity_id=n.nid');
          $query->leftJoin('field_data_field_company_nid_mail', 'pcne', 'pcne.entity_id = pic.field_project_invite_comapnies_value');
          $query->leftJoin('field_data_field_comapny_manager', 'pcimu', 'pcimu.entity_id = pic.field_project_invite_comapnies_value');
          //Invited Company Access
          $query->leftJoin('field_data_field_rfp_invite_comapnies', 'ric', 'ric.entity_id=n.nid');
          $query->leftJoin('field_data_field_rfp_company_nid_email', 'rcne', 'ric.field_rfp_invite_comapnies_value = rcne.entity_id');
          $query->leftJoin('field_data_field_co_invite_manager_uid', 'rcimu', 'ric.field_rfp_invite_comapnies_value = rcimu.entity_id');
          
          $query->where('((n.uid IN(:UserUid) and ogm.gid=:ogmid) or (n.status=1 AND (rcne.field_rfp_company_nid_email_value IS NOT NULL) AND
          ((rcne.field_rfp_company_nid_email_value=:companyNid) or(LOWER(rcne.field_rfp_company_nid_email_value) IN(:companyMail)))))', 
          array(':UserUid' => $company_user, ':ogmid' => $CuurCompNid, ':companyNid' => $CuurCompNid, ':companyMail' => $company_email));
        }
        else {
          $company_email = db_select('m6connect_og_membership_email', 'om')->fields('om', array('company_email'))->condition('om.entity_id', $company->nid, '=')->condition('om.user_uid', $userid, '=')->execute()->fetchColumn(0);
          $company_email = (!empty($company_email)) ? $company_email : '';
          $company_email = strtolower($company_email);
          //$company_users = _get_current_company_users($user->uid);
          $company_users = _get_company_users_by_group_company($company);
          $userCmpNid = _get_user_company_nid();
          $query->leftJoin('field_data_field_project_invite_comapnies', 'pic', 'pic.entity_id=n.nid');
          $query->leftJoin('field_data_field_company_nid_mail', 'pcne', 'pcne.entity_id = pic.field_project_invite_comapnies_value');
          $query->leftJoin('field_data_field_comapny_manager', 'pcimu', 'pcimu.entity_id = pic.field_project_invite_comapnies_value');
          //Invited Company Access
          $query->leftJoin('field_data_field_rfp_invite_comapnies', 'ric', 'ric.entity_id=n.nid');
          $query->leftJoin('field_data_field_rfp_company_nid_email', 'rcne', 'ric.field_rfp_invite_comapnies_value = rcne.entity_id');
          $query->leftJoin('field_data_field_co_invite_manager_uid', 'rcimu', 'ric.field_rfp_invite_comapnies_value = rcimu.entity_id');
          $query->where('((n.uid=:UserUid AND ogm.gid=:ogmid) OR (n.status=1 AND ((pcne.field_company_nid_mail_value=:companyNid OR pcne.field_company_nid_mail_value=:companyMail) AND 
           ((pcimu.field_comapny_manager_value IS NULL) OR FIND_IN_SET(:UserUid,pcimu.field_comapny_manager_value)>0))  OR              
          ((rcne.field_rfp_company_nid_email_value=:companyNid) AND FIND_IN_SET(:UserUid,rcimu.field_co_invite_manager_uid_value)>0) OR
          ((rcne.field_rfp_company_nid_email_value IS NOT NULL) AND LOWER(rcne.field_rfp_company_nid_email_value)=:companyMail) OR
          ((pcne.field_company_nid_mail_value=:companyNid) AND FIND_IN_SET(:UserUid,pcimu.field_comapny_manager_value)>0)))', array(':UserUid' => $userid, ':ogmid' => $CuurCompNid, ':companyNid' => $CuurCompNid, ':companyMail' => $company_email));
        }

        $query->condition('n.status', 1, '=');
        $query->condition('n.type', $type, 'IN');
        $query->orderBy('n.created', 'DESC'); 
        $query->groupBy('n.nid');
        $query->limit(15);
        $myproject = $query->execute()->fetchAll();

        if (!empty($company->nid)) {
          $collaborationproject = get_collaboration_project_for_project_m6drive($user->uid, $company->nid);
          $result = array_merge($myproject, $collaborationproject);
        }
        // End project query here
        
        foreach($result as $record) {
          $node = node_load($record->nid);
          $ChkNidInArchive = _get_all_projectnid_in_archive_drive($user->uid, $node->nid);
          if ($ChkNidInArchive != $node->nid) {
            $comprealusername = '';
             $nodeTitletrim = '';
            //$comprealusername = _get_node_company_user_name($node->nid);
             $comprealusername =_get_user_data_by_uid($node->uid);
            //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
            $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
            $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 
            $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE));

            $FolArr['0-'.$node->nid.'-folder'] = $node->title;

          }
        }
      }
      if ($projectnid == 'rfp') {
        // Processing for RFP Documents.
        $RfpNodeList = m6drive_get_all_rfp_node_list();
        foreach($RfpNodeList as $key => $nid) { 
          $node = node_load($nid);
          $ChkNidInArchive = _get_all_projectnid_in_archive_drive($user->uid, $node->nid);
          if ($ChkNidInArchive != $node->nid) {
            $comprealusername = '';
             $nodeTitletrim = '';
            //$comprealusername = _get_node_company_user_name($node->nid);
             $comprealusername =_get_user_data_by_uid($node->uid);
            //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
            $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
            $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 

            $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE)); 

             $FolArr['0-'.$node->nid.'-folder'] = $node->title;
          }
        }
      }
    }
    $foldericon = '';
    if (!empty($projectnid) && is_numeric($projectnid)) {
      $node = node_load($projectnid);
      $companyusersdetail =_get_user_data_by_uid($node->uid);
      $companyusersfullname =  $companyusersdetail['realname'];
      // For project images
      if ($node->type == 'project') {
        $fieldrfpdocumentArr =_get_all_rfp_nid_using_project_nid_project_drive($node->nid, $only_nids = TRUE);
        $uri =  $node->field_images['und'][0]['uri'];
        $fid =  $node->field_images['und'][0]['fid'];
        $filename = $node->field_images['und'][0]['filename'];
        if (!empty($fid)) {
          $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid,  $fid);
          if ($ChkFidInArchive != $fid) {
            $filepath = file_create_url($uri);  
            $Attachment = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
            $share_with_url = m6drive_check_project_folder_shared('file', $projectnid, $fid);

            $FolArr['0-'.$fid.'-file'] = $filename;    
          }
        }
        foreach($fieldrfpdocumentArr as $rfpnids) {
          $node = node_load($rfpnids);
          $comprealusername = '';
          $nodeTitletrim = '';
          //$comprealusername = _get_node_company_user_name($node->nid);
          $comprealusername =_get_user_data_by_uid($node->uid);
          //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
          $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 

          $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE)); 

          $FolArr['0-'.$node->nid.'-folder'] = $node->title; 
          
        }
      }
      else {
        $fieldrfpdocumentArr = _get_all_rfp_document_images_project_drive($node->nid);
        $uri =  $node->field_rfp_logo['und'][0]['uri'];
        $fid =  $node->field_rfp_logo['und'][0]['fid'];
        $filename = $node->field_rfp_logo['und'][0]['filename'];
        if(!empty($fid)) {
          $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid,  $fid);
          if($ChkFidInArchive != $fid) {
            $filepath = file_create_url($uri);  
            $Attachment = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
            $share_with_url = m6drive_check_project_folder_shared('file', $projectnid, $fid);
            $FolArr['0-'.$fid.'-file'] = $filename;
          }
        }
        foreach($fieldrfpdocumentArr as $projectfiles) {
          if(!empty($projectfiles['fid'])) {
            // $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid, $projectfiles['fid']);
            // if($ChkFidInArchive != $projectfiles['fid']){
              $filepath = file_create_url($projectfiles['uri']);  
              $Attachment = l($projectfiles['filename'], $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$projectfiles['fid'])));
              $share_with_url = m6drive_check_project_folder_shared('file', $projectnid, $projectfiles['fid']);

              $FolArr['0-'.$projectfiles['fid'].'-file'] = $projectfiles['filename'];
            // }
          }
        }
      }
    }
    elseif (empty($projectnid)) {
      // ===for Project Folder And RFP Folder Root.
      $comprealusername =_get_user_data_by_uid($user->uid);
      $Projectfoldericon   = $Drive_folder_icon_image. 'M6 Project Postings'; 
      $projectname =  l($Projectfoldericon, 'project-load-drive/project/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));
      $FolArr['0-project-folder'] .= 'M6 Project Postings'; 
      $Projectfoldericongrid   =  $Grid_folder_icon_image. 'M6 Project Postings'; 
      $ProjectnameforGrid =  l($Projectfoldericongrid, 'project-load-drive/project/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));

      // ===for Rfp Folder
      $Rfpfoldericon   = $Drive_folder_icon_image. 'M6 RFP&apos;s'; 
      $Rfpname =  l($Rfpfoldericon, 'project-load-drive/rfp/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));
      $FolArr['0-rfp-folder'] .= 'M6 RFPs';
    }
    if (!empty($projectnid) && is_numeric($projectnid)) {
      $folder_id = $projectnid;
    }
  }

  if ($check_for_add_to_my_drive) {
    // If we are to check the add to my drive table, then we shall get all the
    // stored folder IDs or Project IDs and proceed.
    $query = db_select('m6connect_m6drive_addto_mydrive', 'm')
      ->fields('m')
      ->condition('services', 'm6drive_project')
      ->condition('user_uid', $user->uid)
      ->condition('root', 1)
      ->orderBy('created_date', 'DESC') //ORDER BY created
      ->execute()
      ->fetchAll();
    foreach ($query as $key => $value) {
      if ($value->folder_id) {
        // It is a folder, It may be a folder or a project(node).
        $sub_query = db_select('m6connect_m6drive', 'm')
          ->fields('m')
          ->condition('Id', $value->folder_id)
          ->execute();
        if ($sub_query->rowCount() > 0) {
          // It is a custom uploaded folder.
          $values = $sub_query->fetchObject();

          // In this case, we also need the node id/projectnid of this folder
          // so as to keep the breadcrumbs working.
          $prnid = 0;
          $parents = m6drive_get_parent_folder($values->Id);
          foreach ($parents as $key => $value) {
            foreach ($value as $key1 => $value1) {
              if (is_array($value1)) {
                $prnid = $key1;
              }
            }
          }
          $UserFnameLname =_get_user_data_by_uid($values->user_uid);
          $Follengthtrim = (strlen(ucwords(str_replace('_',' ',$values->foldername))) > 22) ? substr(ucwords(str_replace('_',' ',$values->foldername)), 0, 19).'...' : ucwords(str_replace('_',' ',$values->foldername));
          //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.ucwords(str_replace('_',' ',$values->foldername)).'';
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
          $foldername =  l($foldericon, 'project-load-drive/' . $prnid . '/'.$values->Id.'/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));

          $FolArr[$prnid.'-folder_'.$values->Id.'-folder'] = ucwords(str_replace('_',' ',$values->foldername));
        }
        else {
          // It is a project.
          $node = node_load($value->folder_id);
          $comprealusername =_get_user_data_by_uid($node->uid);
          $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
          //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
          $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE)); 
           $FolArr['0-'.$node->nid.'-folder'] = $node->title;  
        }
      }
      elseif ($value->file  && $filevalue = file_load($value->file)) {
        // File can be uploaded only.
        $file_query = db_select('m6connect_m6drive_attachment', 'f')
          ->fields('f')
          ->condition('file', $value->file)
          ->execute();
        if ($file_query->rowCount() > 0) {
          $values = $file_query->fetchObject();
          $UserFnameLname =_get_user_data_by_uid($values->user_uid);
          
          $fid =  $values->file;
          //$filevalue = file_load($fid);
          $uri = $filevalue->uri;
          $filename =  $filevalue->filename;
          $FolArr['0-'.$fid.'-file'] = $filevalue->filename;       
        }
      }
    }
  }

  // Getting folders and files from add to my drive for inner folders.
  $query = db_select('m6connect_m6drive_addto_mydrive', 'm')
    ->fields('m')
    ->condition('services', 'm6drive_project')
    ->condition('user_uid', $user->uid)
    ->condition('root', 0)
    ->condition('parent_id', $folder_id)
    ->orderBy('created_date', 'DESC') //ORDER BY created
    ->execute()
    ->fetchAll();
  foreach ($query as $key => $value) {
    if ($value->folder_id) {
      // It is a folder, It may be a folder or a project(node).
      $sub_query = db_select('m6connect_m6drive', 'm')
        ->fields('m')
        ->condition('Id', $value->folder_id)
        ->execute();
      if ($sub_query->rowCount() > 0) {
        // It is a custom uploaded folder.
        $values = $sub_query->fetchObject();

        // In this case, we also need the node id/projectnid of this folder
        // so as to keep the breadcrumbs working.
        $prnid = 0;
        $parents = m6drive_get_parent_folder($values->Id);
        foreach ($parents as $key => $value) {
          foreach ($value as $key1 => $value1) {
            if (is_array($value1)) {
              $prnid = $key1;
            }
          }
        }
        $UserFnameLname =_get_user_data_by_uid($values->user_uid);
        //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.ucwords(str_replace('_',' ',$values->foldername)).'';
        $Follengthtrim = (strlen(ucwords(str_replace('_',' ',$values->foldername))) > 22) ? substr(ucwords(str_replace('_',' ',$values->foldername)), 0, 19).'...' : ucwords(str_replace('_',' ',$values->foldername));

        $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
        $foldername =  l($foldericon, 'project-load-drive/' . $prnid . '/'.$values->Id.'/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE)); 

        $FolArr[$values->Id.'-'.$prnid.'-folder'] = ucwords(str_replace('_',' ',$values->foldername)); 
      }
      else {
        // It is a project.
        $node = node_load($value->folder_id);
        $comprealusername =_get_user_data_by_uid($node->uid);
        //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
        $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;

        $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
        $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE));

         $FolArr['0-'.$node->nid.'-folder'] = $node->title; 
      
      }
    }
    elseif ($value->file && $filevalue = file_load($value->file)) {
      // File can be uploaded only.
      $file_query = db_select('m6connect_m6drive_attachment', 'f')
        ->fields('f')
        ->condition('file', $value->file)
        ->execute();
      if ($file_query->rowCount() > 0) {
        $values = $file_query->fetchObject();
        $UserFnameLname =_get_user_data_by_uid($values->user_uid);
        
        $parents = m6drive_get_parent_folder($values->folder_id);
        foreach ($parents as $key => $value) {
          foreach ($value as $key1 => $value1) {
            if (is_array($value1)) {
              $prnid = $key1;
            }
          }
        }

        $fid =  $values->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $FolArr[$values->folder_id.'-'.$fid.'-file'] = $filevalue->filename; 
      }

    }
  }

  $check_company = m6drive_check_parent_folder_addto_mydrive($folder_id);
  // Getting folders and files from drive and attachment tables.
  $drive_query = db_select('m6connect_m6drive', 'm')
    ->fields('m')
    ->condition('services', 'm6drive_project')
    ->condition('parent_id', $folder_id);
  if ($check_for_add_to_my_drive || $projectnid == 'project' || $projectnid == 'rfp') {
    $drive_query->condition('user_uid', $user->uid);
  }
  if ($projectnid === 'project' && empty($folder_id)) {
    $drive_query->condition('root', 2);
  }
  if ($projectnid === 'rfp' && empty($folder_id)) {
    $drive_query->condition('root', 3);
  }
  if ($check_for_add_to_my_drive) {
    $drive_query->condition('root', 1);
  }
  if ($check_company === FALSE) {
    $drive_query->condition('company_nid', $company->nid);
  }
  $drive_query->condition('trash_status', 0);
  $drive_query->condition('archive_status', 0);
  $drive_query->orderBy('created_date', 'DESC'); //ORDER BY created
  $record = $drive_query->execute()->fetchAll();

  $querysub = db_select('m6connect_m6drive_attachment','m');    
  $querysub->fields('m',array('file','created_date','trash_status', 'user_uid'));
  $querysub->condition('m.services', 'm6drive_project');
  $querysub->condition('m.folder_id', $folder_id);
  if($check_for_add_to_my_drive || $projectnid == 'project' || $projectnid == 'rfp') {
    $querysub->condition('user_uid', $user->uid);
  }
  if($projectnid === 'project' && empty($folder_id)) {
    $querysub->condition('root', 2);
  }
  if($projectnid === 'rfp' && empty($folder_id)) {
    $querysub->condition('root', 3);
  }
  if($check_for_add_to_my_drive) {
    $querysub->condition('root', 1);
  }
  if ($check_company === FALSE) {
     $querysub->condition('company_nid', $company->nid);
  }
  $querysub->condition('m.trash_status', 0);
  $querysub->condition('m.archive_status', 0);
  $querysub->orderBy('m.created_date', 'DESC');  //ORDER BY created
  $recordsub = $querysub->execute()->fetchAll();
  $complteresult = array_merge($record, $recordsub);
  $foldericon = '';
  
  foreach ($complteresult as $values) {
    if ($values->foldername) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      $Follengthtrim = (strlen(ucwords(str_replace('_',' ',$values->foldername))) > 22) ? substr(ucwords(str_replace('_',' ',$values->foldername)), 0, 19).'...' : ucwords(str_replace('_',' ',$values->foldername));

      $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
      $foldername =  l($foldericon, 'project-load-drive/'.$projectnid.'/'.$values->Id.'/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));
       $FolArr[$values->Id.'-'.$projectnid.'-folder'] = ucwords(str_replace('_',' ',$values->foldername));
        
    }
    if ($values->file && $filevalue = file_load($values->file)) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      $fid =  $values->file;
      $uri = $filevalue->uri;
      $filename =  $filevalue->filename;
      $FolArr['0-'.$fid.'-file'] = $filevalue->filename; 
    }
  }
 
  //print "<pre>"; print_r($FolArr); die;

  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'company_project_m6drive_filter_callback',
      'wrapper' => 'project-m6drive-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function company_project_m6drive_filter_callback($form, &$form_state){
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');

  global $user, $company;
  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  $ProjectNid = $form_state['projectnid']; 
  $FolderId = $form_state['folder_id'];

  //$return = array();

  $header = array(
    array('data'=>'Drag Name','class'=>array('col-md-1','text-left','hidden','no-sort')),
    array('data'=>'Company Drag Name','class'=>array('col-md-1','text-left','hidden','no-sort')),
    array('data'=>'<input type="checkbox" name="select-m6drive-project-checkbox" class="form-checkbox select-m6drive-project-checkbox">', 'class'=> array('col-md-1','text-center','hidden','no-sort')),
    array('data'=>'Name  &nbsp;<i id="drive_filter_sort" class="fa fa-caret-down filter-sort" aria-hidden="true"></i> <div class="m6drive_filter_sort_form m6drive_filter_sort" style="display:none;">'.render(drupal_get_form('company_project_m6drive_filter_form',$projectnid, $folder_id)).'</div>','class'=>array('col-md-4','text-left','drive_filter_header')),
    array('data'=>'Owner','class'=>array('col-md-2','text-left')),
    array('data'=>'Last Modified','class'=>array('col-md-2','text-left')),
    array('data'=>'File Size','class'=>array('col-md-1','text-left')),
    array('data'=>'Share with','class'=>array('col-md-2','text-left','no-sort')),
    //array('data'=>'Action', 'class'=>array('col-md-2','text-left')),
  );

  $drive_folder_icon = $base_url . '/sites/all/themes/m6connect/images/drive-folder-icon.png';
  $Drive_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:40px;">';

  $Grid_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:50px;">';
   // Getting the data from the m6drive custom tables, to show in tables.
  // Creating div structure.
  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }
  if ($optionview == 'List') {
    $grid_display =  'display:none';
    $list_display =  'display:block';
  }
  else {
    $grid_display =  'display:block';
    $list_display =  'display:none';
  }
  $divstr_arrfol = array();


  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($filefolder); die;

if(!empty($filefolder['folder_name'])) {
  foreach($filefolder['folder_name'] as $multKey => $multVal) { 
    $getStatus = explode('-', $multVal);
    //print "<pre>"; print_r($getStatus); die;
    $folder_id  = $getStatus[0];
    $projectnid = $getStatus[1];
    $type = $getStatus[2];

       if(empty($folder_id) && $type != 'file') { 
        if(!empty($projectnid) && is_string($projectnid) && !is_numeric($projectnid)) {
          if($projectnid == 'project'){
             $comprealusername =_get_user_data_by_uid($user->uid);
             $Projectfoldericon   = $Drive_folder_icon_image. 'M6 Project Postings'; 
             $projectname =  l($Projectfoldericon, 'project-load-drive/project/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));

             $Projectfoldericongrid   =  $Grid_folder_icon_image. 'M6 Project Postings'; 
             $ProjectnameforGrid =  l($Projectfoldericongrid, 'project-load-drive/project/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));

              $rows[] = array(
              'data' => array(
                array('data'=>'Drag Name','class'=>array('text-left','hidden')),
                array('data'=>'<span class="project-drive-nids" style="display:none;">0</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
                array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="M6 Project Postings" name="m6drive-project-project" value="project-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=> $projectname, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                array('data' =>  $comprealusername['realname'],'class' => array('col-md-2','text-left')),
                array('data' => '-','class' => array('col-md-2','text-left')),
                array('data'=>'-','class'=>array('col-md-1','text-left')),
                array('data'=> '-','class'=>array('col-md-2','text-left')),
                //array('data' => project_drive_action_btn('folder',$node->nid),'class' => array('col-md-2','text-left')),           
               ),
              'id' => array('0'), 
              'class' => array('not-shareable-drive','not-trashable-drive','custom-odd','customsearchformydrive','m6drive-project-archive-0-'.$company->nid.'-row'),
            );

          $divprojectstrfol .= '<div class="not-shareable-drive not-trashable-drive grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                               <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="M6 Project Postings" name="m6drive-project-project" value="project-folder" class="form-checkbox m6drive-project-checkbox"></div>
                              <div class="grid-item-anchor clearfix">'. $ProjectnameforGrid.'</div>
                        </div>';
      // ===for Rfp Folder
    
          }
          if($projectnid == 'rfp'){ 
              $Rfpfoldericon   = $Drive_folder_icon_image. 'M6 RFP&apos;s'; 
              $Rfpname =  l($Rfpfoldericon, 'project-load-drive/rfp/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));

              $Rfpfoldericongrid   = $Grid_folder_icon_image. 'M6 RFP&apos;s'; 
              $Rfpnamegrid =  l($Rfpfoldericongrid, 'project-load-drive/rfp/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-0'),'html' => TRUE));

              $rows[] = array(
                'data' => array(
                  array('data'=>'Drag Name','class'=>array('text-left','hidden')),
                  array('data'=>'<span class="project-drive-nids" style="display:none;">0</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
                  array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="M6 RFP&apos;s" name="m6drive-project-rfp" value="rfp-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                  array('data'=> $Rfpname, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                  array('data' => $comprealusername['realname'],'class' => array('col-md-2','text-left')),
                  array('data' => '-','class' => array('col-md-2','text-left')),
                  array('data'=>'-','class'=>array('col-md-2','text-left')),
                  array('data'=> '-','class'=>array('col-md-1','text-left')),
                  //array('data' => project_drive_action_btn('folder',$node->nid),'class' => array('col-md-2','text-left')),           
                 ),
                'id' => array('0'), 
                'class' => array('not-shareable-drive','not-trashable-drive','custom-odd','customsearchformydrive','m6drive-project-archive-0-'.$company->nid.'-row'),
              );
             $divprojectstrfol .= '<div class="not-shareable-drive not-trashable-drive grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                               <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="M6 RFP&apos;s" name="m6drive-project-rfp" value="rfp-folder" class="form-checkbox m6drive-project-checkbox"></div>
                              <div class="grid-item-anchor clearfix">'.$Rfpnamegrid.'</div>
                        </div>';
          }
        }
        if(!empty($projectnid) && is_numeric($projectnid)) {
          $node = node_load($projectnid);
          $comprealusername = '';
          $nodeTitletrim = '';
          //$comprealusername = _get_node_company_user_name($node->nid);
          $comprealusername =_get_user_data_by_uid($node->uid);
          //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
          $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 

          $projectname =  l($foldericon, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE));

          $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim; 
          $ProjectnameforGrid =  l($foldericongrid, 'project-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' => TRUE));

          $share_with_url = m6drive_check_project_folder_shared('folder', $node->nid, 0);
          $rows[] = array(
            'data' => array(
               array('data'=>'Drag Name','class'=>array('text-left','hidden')),
               array('data'=>'<span class="project-drive-nids" style="display:none;">'.$node->nid.'</span>', 'class'=> array('m6drive-display-none-drag')),
               array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$node->title.'" name="m6drive-project-'.$node->nid.'" value="'.$node->nid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
              array('data'=> $projectname, 'class' => array('col-md-4','text-left','drive-getting-folder')),
              array('data' => $comprealusername['realname'],'class' => array('col-md-2','text-left')),
              array('data' => date('F d, Y', $node->created),'class' => array('col-md-2','text-left')),
              array('data'=>'-','class'=>array('col-md-1','text-left')),
              array('data'=> $share_with_url,'class'=>array('col-md-2','text-left')),
              //array('data' => project_drive_action_btn('folder',$node->nid),'class' => array('col-md-2','text-left')),           
             ),
            'id' => array('0'), 
            'class' => array('not-trashable-drive','custom-odd','customsearchformydrive','m6drive-project-archive-'.$node->nid.'-'.$company->nid.'-row'),
          );
          //For dev str row folder
          $divprojectstrfol .='<div class="not-trashable-drive grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                                   <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$node->title.'" name="m6drive-project-'.$node->nid.'" value="'.$node->nid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                  <div class="grid-item-anchor clearfix">'.$ProjectnameforGrid.'</div>
                            </div>';

          //print "<pre>"; print_r($node); die;
          //print "<pre>"; print_r($complteresult); die;

        }
      }
    // Getting folders and files from add to my drive for inner folders.
      if($type == 'folder') {
          $folderIdMul =  $getStatus[0];

          //print "<pre>"; print_r($folderIdMul); die;

          if(!empty($folderIdMul)){  
            $drive_query = db_select('m6connect_m6drive', 'm')
              ->fields('m')
              ->condition('services', 'm6drive_project')
              ->condition('Id',  $folderIdMul);
            $drive_query->condition('trash_status', 0);
            $drive_query->condition('archive_status', 0);
            $drive_query->orderBy('created_date', 'DESC'); //ORDER BY created
            $record = $drive_query->execute()->fetchAll();
            foreach($record as $values) {
               $complteresult[] = $values;
            }
          }
      }
      else if($type == 'file') {

        $fileIdMul = $getStatus[1];
        if(!empty($fileIdMul)){
          $querysub = db_select('m6connect_m6drive_attachment','m');    
          $querysub->fields('m',array('file','created_date','trash_status', 'user_uid'));
          $querysub->condition('m.services', 'm6drive_project');
          $querysub->condition('m.file', $fileIdMul);
          $querysub->condition('m.trash_status', 0);
          $querysub->condition('m.archive_status', 0);
          $querysub->orderBy('m.created_date', 'DESC');  //ORDER BY created
          $recordsub = $querysub->execute()->fetchAll();
          if(!empty($recordsub)){
            foreach($recordsub as $values) {
               $complteresult[] = $values;
            }
          }else{
              $fileObj = file_load($fileIdMul);
              //print "<pre>"; print_r($fileObj); die;
              $fid = $fileIdMul;
              if(!empty($fid)) {
                  $filename = $fileObj->filename;
                  $uri = $fileObj->uri;
                  $filepath = file_create_url($uri); 
                  $comprealusername =_get_user_data_by_uid($fileObj->uid); 
                  $Attachment = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
                  $share_with_url = m6drive_check_project_folder_shared('file', $ProjectNid, $fid);
                  $rows[] = array(
                    'data' => array(
                      array('data'=>'Drag Name','class'=>array('text-left','hidden')),
                      array('data'=> 'Drag name','class'=>array('col-md-1','text-left','hidden')),
                      array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                      array('data'=>   $Attachment, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                      array('data' => $comprealusername['realname'],'class' => array('col-md-2','text-left')),
                      array('data' => date('F d, Y', $fileObj->timestamp),'class' => array('col-md-2','text-left')),
                      array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-1','text-left')),
                      array('data'=> $share_with_url,'class'=>array('col-md-2','text-left')),
                      //array('data' => project_drive_action_btn('file',$fid),'class' => array('col-md-2','text-left')), 
                      ),  
                    'class' => array('not-trashable-drive','custom-odd','customsearchformydrive','m6drive-project-archive-'.$fid.'-'.$company->nid.'-row'),
                  );
                   //For dev str row file ==========
                   $img_url = image_style_url('user_image_large', $uri);
                   $divprojectstrfile .=' <div class="not-trashable-drive grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                             <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>
                               <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                             <img src='.$img_url.'>
                               <div class="clearfix text-blue grid-item-anchor">'.$filename.'</div>
                        </div>';
                   //End dev str row file==========

             
              }
          }
        }
      }
  }
    

//print "<pre>"; print_r($complteresult); die;

  foreach ($complteresult as $values) {
    //$divstr_arrfol[] = $values;
    if($values->foldername) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.ucwords(str_replace('_',' ',$values->foldername)).'';
      $Follengthtrim = (strlen(ucwords(str_replace('_',' ',$values->foldername))) > 22) ? substr(ucwords(str_replace('_',' ',$values->foldername)), 0, 19).'...' : ucwords(str_replace('_',' ',$values->foldername));

      $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
      $foldername =  l($foldericon, 'project-load-drive/'.$projectnid.'/'.$values->Id.'/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));

      $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim;
      $foldernamegrid =  l($foldericongrid, 'project-load-drive/'.$projectnid.'/'.$values->Id.'/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$values->Id),'html' => TRUE));

      $share_with_url = m6drive_check_file_folder_shared('folder', $values->Id);
      $rows[] = array(
       'data' => array(
         array('data'=>'<span class="folder-ids" style="display:none;">'.$values->Id.'-folder</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
        array('data'=>'<span class="project-drive-nids" style="display:none;">'.$projectnid.'</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
         array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.ucwords(str_replace('_',' ',$values->foldername)).'" name="m6drive-folder-'.$values->Id.'" value="'.$values->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
         array('data'=> $foldername, 'class' => array('col-md-4','text-left','m6drive-drag-content-show','drive-getting-folder')),
         array('data' => $UserFnameLname['realname'],'class' => array('col-md-2','text-left')),
         array('data' => date('F d, Y', strtotime($values->created_date)),'class' => array('col-md-2','text-left')),
         array('data'=>'-','class'=>array('col-md-1','text-left')),
         array('data'=> $share_with_url,'class'=>array('col-md-2','text-left')),
         //array('data' => m6drive_folder_action_btn('folder',$values->Id),'class' => array('col-md-2','text-left')),           
        ),
       'id' => array(''.$values->Id.''),     
       'class' => array('custom-odd','customsearchformydrive','project-drive-folder-dragable','project-drive-folder-droppable','m6drive-folderdelete-'.$values->Id.'-'.$company->nid.'-row'),
        );
      //For dev str row folder ==========
        $divprojectstrfol .='<div id="' . $values->Id . '"class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10 project-drive-folder-dragable project-drive-folder-droppable">
                              <div class="m6drive-display-none-drag" style="display: none;"><span class="folder-ids" style="display:none;">' . $values->Id . '-folder</span></div>
                              <div class="m6drive-display-none-drag" style="display: none;"><span class="project-drive-nids" style="display:none;">' . $projectnid. '</span></div>
                                   <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.ucwords(str_replace('_',' ',$values->foldername)).'" name="m6drive-folder-'.$values->Id.'" value="'.$values->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                <div class="grid-item-anchor clearfix m6drive-drag-content-show">'.$foldernamegrid.'</div>
                          </div>';
      //End dev str row==========

    }
    if ($values->file && $filevalue = file_load($values->file)) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      $fid =  $values->file;
      //$filevalue = file_load($fid);
      $uri = $filevalue->uri;
      $filename =  $filevalue->filename;
      $filetype = $filevalue->type;
      $filepath = file_create_url($uri);  
      $Attachment = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$values->Id))); 
      $share_with_url = m6drive_check_file_folder_shared('file', $fid);
      //$img_url = image_style_url('user_image_large', $uri);
      $rows[] = array(
        'data' => array(
          array('data'=>'<span class="folder-ids" style="display:none;">'.$fid.'-file</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
           array('data'=>'<span class="project-drive-nids" style="display:none;">'.$projectnid.'</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
          array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-folder-'.  $fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
          array('data'=>  $Attachment, 'class' => array('col-md-4','text-left','m6drive-drag-content-show','drive-getting-folder')),
          array('data' => $UserFnameLname['realname'],'class' => array('col-md-2','text-left')),
          array('data' => date('F d, Y', strtotime($values->created_date)),'class' => array('col-md-2','text-left')),
          array('data'=> _get_m6drive_total_space_user_fid($fid),'class'=>array('col-md-1','text-left')),
          array('data'=> $share_with_url,'class'=>array('col-md-2','text-left')),
        ),  
        'class' => array('custom-odd','customsearchformydrive','project-drive-folder-dragable','m6drive-folderdelete-'.$fid.'-'.$company->nid.'-row'),
      );
      //For dev str row file ==========
      $fileicondrive = _get_file_icon_m6drive($filevalue->filemime);
      if($fileicondrive) {
         $img_url = $fileicondrive;
      }
      else {
        $img_url = image_style_url('user_image_large', $uri);
        $img_url = '<img src= '.$img_url.'>';
      }

      $divprojectstrfile .='<div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10 project-drive-folder-dragable">
                            <div class="m6drive-display-none-drag" style="display: none;"><span class="folder-ids" style="display:none;">'.$fid.'-file</span></div>
                            <div class="m6drive-display-none-drag" style="display: none;"><span class="project-drive-nids" style="display:none;">' . $projectnid . '</span></div>
                            <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-folder-'.  $fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>
                            <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                            '.$img_url.' 
                            <div class="clearfix text-blue grid-item-anchor m6drive-drag-content-show">'.$filename.'</div>
                            </div>';
      //End dev str row file==========
    }
  }


  $return .= '<div class="list-view" style="'.$list_display.'">';
  $return .= theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No file or folders yet','attributes'=>array('class'=>array('table','m6connect-custom-m6drive-project-drive','table-striped','table-hover','table-bordered','text-center'))));
  $return .= '</div>';
  // End here fir table List view structure========

  // start here for Grid  view structure========
  $return .= '<div class="grid-view" style="'.$grid_display.'">';
  $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Folders') . '</h3></div>';
  $return .= '<div class="grid-view-folders row margin-5">';
  // First handling only Folders.
  if (empty($divprojectstrfol)) {
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No folders yet</strong></div>'; 
  }
  else {
    $return .= $divprojectstrfol; 
  }
  $return .= '</div>'; //end grid-view-folders
  // Then handling only Files.
  $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Files') . '</h3></div>';
  $return .= '<div class="grid-view-files row margin-5">';
  if (empty($divprojectstrfile)) {
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No files yet</strong></div>';
  }
  else {
    $return .= $divprojectstrfile; 
  }
  $return .= '</div>'; // end grid-view-files.
  $return .= '</div>'; // end grid-view.

  //print "<pre>";  print_r($return);  die;
  // End here for Grid  view structure========
     $commands[] = ajax_command_html("#project-m6drive-datacontainer-main-cust", $return);
 }else{
     $commands[] = ajax_command_html("#project-m6drive-datacontainer-main-cust", m6drive_project_drive_listing_table_data($ProjectNid, $FolderId));
 }

  return array('#type' => 'ajax', '#commands' => $commands); 
}

function company_project_share_m6drive_filter_form($form, &$form_state ,$projectnid = 0, $folder_id = 0){
  global $company, $user, $base_url;
  // Creating div structure.
  $projectnid = (isset($form_state['projectnid'])) ? $form_state['projectnid']: $projectnid;
  $form_state['projectnid'] = $projectnid; 

  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id; 

  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id;

  if ($projectnid == 0 && $folder_id == 0) {
    $query = db_select('m6connect_project_drive_shared', 'pds');    
    $query->fields('pds',array('id','share_by_uid','share_to_uid','project_nid','email_id','fid','shared_date', 'permissions'));
    $query->condition('pds.share_to_uid', $user->uid);
    $query->orderBy('pds.shared_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    foreach($record as $key => $value) {
      if (isset($value->project_nid) && is_numeric($value->project_nid) && $value->project_nid != 0) {
        $ProjectNid = $value->project_nid;
        $projectnid_in_trash = _get_all_projectnid_in_trash_drive($user->uid, $ProjectNid);
        if ($ProjectNid != $projectnid_in_trash) {
          $Node = node_load($ProjectNid);
          //$Usersdetail = _get_user_mail_realname_by_uid($Node->uid);
          //$Usersfullname =  $Usersdetail['realname']; 
          $Usersdetail = _get_user_data_by_uid($Node->uid);
          $Usersfullname =  $Usersdetail['realname'];

          $Dateproject = _get_share_date_projectnid_using_rfp_nid($ProjectNid);
          if ($Dateproject) {
            $Usersdetail = _get_user_data_by_uid($Dateproject->share_by_uid);
            $Usersfullname =  $Usersdetail['realname'];
          }

          $Follengthtrim = (strlen($Node->title) > 22) ? substr($Node->title, 0, 19).'...' : $Node->title;
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
          $foldername =  l($foldericon, 'project-share-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE)); 

          $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim;
          $foldernamegrid =  l($foldericongrid, 'project-share-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE)); 
          $FolArr['0-'.$ProjectNid.'-folder'] =   $Node->title;  
 
        }
      }
      if (isset($value->fid) && is_numeric($value->fid) && $value->fid != 0 && $filevalue = file_load($value->fid)) {
        $fid =  $value->fid;
        $projectfid_in_trash = _get_all_projectfid_in_trash_drive($user->uid, $fid);
        if ($fid != $projectfid_in_trash) {
          //$filevalue = file_load($fid);
          $uri = $filevalue->uri;
          $filename =  $filevalue->filename;
          $filetype = $filevalue->type;
          $filepath = file_create_url($uri);
          //$Usersdetail = _get_user_mail_realname_by_uid($filevalue->uid);
          //$Usersfullname =  $Usersdetail['realname'];

          $Usersdetail = _get_user_data_by_uid($value->share_by_uid);
          $Usersfullname =  $Usersdetail['realname'];

          $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
           $FolArr['0-'.$fid.'-file'] =   $filename;  
         }
      }
    }

    // Need to check if any folder is shared withing the projects folder.
    $query = db_select('m6connect_m6drive_shared', 's')
      ->fields('s')
      ->condition('share_to_uid', $user->uid)
      ->condition('services', 'm6drive_project')
      ->condition('root', 1)
      ->orderBy('shared_date', 'DESC'); //ORDER BY created
    $records = $query->execute()->fetchAll();
    if (!empty($records)) {
      foreach ($records as $key => $value) {
        if (isset($value->folder_id)) {
          $parent_folders = m6drive_get_parent_folder($value->folder_id);
          // Getting the nid for this folder.
          foreach($parent_folders as $fldrId => $folderNameVal) {
            if (is_array($folderNameVal)) {
              $keys_arr = array_keys($folderNameVal);
              $projectnid = $keys_arr[0];
              break;
            }
          }
          
          $share_by_uid = $value->share_by_uid;
          $shared_date = $value->shared_date;
          $foldername = get_folder_name_by_folderid($value->folder_id);
          $folderName = $foldername->foldername;

          $Usersdetail = _get_user_data_by_uid($share_by_uid);
          $Usersfullname =  $Usersdetail['realname'];

          $Follengthtrim = (strlen($folderName) > 22) ? substr($folderName, 0, 19).'...' : $folderName;
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
          // $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$folderName)).'';

          $foldername =  l($foldericon, 'project-share-load-drive/'.$projectnid.'/'. $value->folder_id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE)); 

          $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim;
          $foldernamegrid =  l($foldericongrid, 'project-share-load-drive/'.$projectnid.'/'. $value->folder_id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE)); 

          $FolArr[$value->folder_id.'-'.$projectnid.'-folder'] = $folderName;  

        }
        elseif(isset($value->fid) && $filevalue = file_load($value->fid)) {
          $fid = $value->fid;
         // $filevalue = file_load($value->fid);
          $uri = $filevalue->uri;
          $filename =  $filevalue->filename;
          $filename_str = (strlen($filename) > 22) ? substr($filename, 0, 19).'...' : $filename;
          $filetype = $filevalue->type;
          $filepath = file_create_url($uri);
          //$Usersdetail = _get_user_mail_realname_by_uid($filevalue->uid);
          //$Usersfullname =  $Usersdetail['realname'];

          $share_by_uid = $value->share_by_uid;
          $shared_date = $value->shared_date;

          $Usersdetail = _get_user_data_by_uid($share_by_uid);
          $Usersfullname =  $Usersdetail['realname'];  

          $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename_str, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));

          $FolArr['0-'.$fid.'-file'] =  $filename;  

        }
      }
    }
    $projectnid = 0;
  }

  if ($projectnid != 0) {
    if ($folder_id == 0) {
      $query = db_select('m6connect_project_drive_shared', 'pds');
      $query->fields('pds',array('id','share_by_uid','share_to_uid','project_nid','shared_date', 'permissions'));
      $query->condition('pds.share_to_uid', $user->uid);
      $query->condition('pds.project_nid', $projectnid);
      $query->orderBy('pds.shared_date', 'DESC');//ORDER BY created
      $record = $query->execute()->fetchObject();
      $node = node_load($projectnid);
      
      $shared_date =  $record->shared_date;
      $shared_permissions =  $record->permissions;
      $Usersfullname = _get_user_data_by_uid($record->share_by_uid);
  
      if($node->type == 'project'){

        $fieldrfpdocumentArr =_get_all_rfp_nid_using_project_nid_project_drive($node->nid, $only_nids = TRUE);

        $uri =  $node->field_images['und'][0]['uri'];
        $fid =  $node->field_images['und'][0]['fid'];
        $filemime =  $node->field_images['und'][0]['filemime'];
        if (!empty($fid)) {
          $filename = $node->field_images['und'][0]['filename'];
          $filename_str = (strlen($filename) > 22) ? substr($filename, 0, 19).'...' : $filename;
          $filepath = file_create_url($uri);
          $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename_str, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 

          $FolArr[$node->nid.'-'.$fid.'-file'] =  $filename;    
        }
        foreach($fieldrfpdocumentArr as $rfpnids) {
          $node = node_load($rfpnids);
          $Dateproject = _get_share_date_projectnid_using_rfp_nid($rfpnids);
          if ($Dateproject) {
            $shared_date =  $Dateproject->shared_date;
            $shared_permissions =  $Dateproject->permissions;
            $Usersfullname = _get_user_data_by_uid($Dateproject->share_by_uid);
          }
          $comprealusername = '';
          $nodeTitletrim = '';
          //$comprealusername = _get_node_company_user_name($node->nid);
          $comprealusername =_get_user_data_by_uid($node->uid);
          //$foldericon   ='<i class="fa fa-folder padding-5" aria-hidden="true"></i>'.$node->title.'';
          $Follengthtrim = (strlen($node->title) > 22) ? substr($node->title, 0, 19).'...' : $node->title;
          $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 
         
          $projectname  =  l($foldericon, 'project-share-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' =>TRUE)); 

          $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim; 
          $projectnamegrid  =  l($foldericongrid, 'project-share-load-drive/'.$node->nid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$node->nid),'html' =>TRUE)); 

          $FolArr['0-'.$node->nid.'-folder'] = $node->title;  
        }
      }
      else{
        $Dateproject = _get_share_date_projectnid_using_rfp_nid($node->nid);
        if ($Dateproject) {
          $shared_date =  $Dateproject->shared_date;
          $shared_permissions =  $Dateproject->permissions;
          $Usersfullname = _get_user_data_by_uid($Dateproject->share_by_uid);
        }
        $fieldrfpdocumentArr = _get_all_rfp_document_images_project_drive($node->nid);

        $uri =  $node->field_rfp_logo['und'][0]['uri'];
        $fid =  $node->field_rfp_logo['und'][0]['fid'];
        $filename = $node->field_rfp_logo['und'][0]['filename'];
        $filemime = $node->field_rfp_logo['und'][0]['filemime'];
        if(!empty($fid)) {
            $filepath = file_create_url($uri);  
            $Attachment = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
             $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 

          $FolArr[$node->nid.'-'.$fid.'-file'] =  $filename; 
          
        }
        foreach($fieldrfpdocumentArr as $projectfiles) {
          if(!empty($projectfiles['fid'])) {
            // $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid, $projectfiles['fid']);
            // if($ChkFidInArchive != $projectfiles['fid']){
              $filepath = file_create_url($projectfiles['uri']);

              //$Attachment = l($projectfiles['filename'], $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$projectfiles['fid'])));

              $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($projectfiles['filename'], $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
              $FolArr[$node->nid.'-'.$projectfiles['fid'].'-file'] =  $projectfiles['filename']; 
            // }
          }
        }
      }
    }

    if ($folder_id == 0) {
      $folder_id = $projectnid;
    }

    $query = db_select('m6connect_m6drive', 'm6d');
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
    $query->condition('m6d.parent_id', $folder_id);
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');
    $querysub->fields('att',array('user_uid','file','created_date'));
    $querysub->condition('att.folder_id', $folder_id);
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);
    foreach ($complteresult as $value) {
      if (isset($value->foldername) && _check_folder_eligibility_share($value->Id)) {
        $share_by_uid = db_select('m6connect_m6drive_shared', 's')
          ->fields('s', array('share_by_uid', 'shared_date','permissions'))
          ->condition('folder_id', $value->Id)
          ->condition('share_to_uid', $user->uid)
          ->range(0, 1)
          ->execute()
          ->fetchAssoc();

        if ($share_by_uid['share_by_uid'] == 0) {
          $share_by_uid['share_by_uid'] = $value->user_uid;
        }

        $Usersdetail = _get_user_data_by_uid($share_by_uid['share_by_uid']);
        $Usersfullname =  $Usersdetail['realname'];

        $Follengthtrim = (strlen($value->foldername) > 22) ? substr(str_replace('_', ' ', $value->foldername), 0, 19).'...' : str_replace('_', ' ', $value->foldername);
        $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 
        $foldername =  l($foldericon, 'project-share-load-drive/'.$projectnid.'/'. $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE));

        $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim; 
        $foldernamegrid =  l($foldericongrid, 'project-share-load-drive/'.$projectnid.'/'. $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE));

        $FolArr[$value->Id.'-'.$projectnid.'-folder'] = ucwords(str_replace('_',' ',$value->foldername));  
       
      }
      elseif(isset($value->file) && _check_file_eligibility_share($value->file) && $filevalue = file_load($value->file)) {
        $fid = $value->file;
        //$filevalue = file_load($value->file);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filename_str = (strlen($filename) > 22) ? substr($filename, 0, 19).'...' : $filename;

        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        //$Usersdetail = _get_user_mail_realname_by_uid($filevalue->uid);
        //$Usersfullname =  $Usersdetail['realname'];

        $share_by_uid = db_select('m6connect_m6drive_shared', 's')
          ->fields('s', array('share_by_uid', 'shared_date', 'permissions'))
          ->condition('fid', $value->file)
          ->condition('share_to_uid', $user->uid)
          ->range(0, 1)
          ->execute()
          ->fetchAssoc();

        if ($share_by_uid['share_by_uid'] == 0) {
          $share_by_uid['share_by_uid'] = $value->user_uid;
        }

        $Usersdetail = _get_user_data_by_uid($share_by_uid['share_by_uid']);
        $Usersfullname =  $Usersdetail['realname'];  

        $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename_str, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 

        $FolArr['0-'.$fid.'-file'] =  $filename; 
 
      }
    }
  }
  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'company_project_share_m6drive_filter_callback',
      'wrapper' => 'project-drive-share-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function company_project_share_m6drive_filter_callback($form, &$form_state){

  global $user, $company;
  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  $ProjectNid = $form_state['projectnid']; 
  $FolderId = $form_state['folder_id'];


  $rows = array();
  $header = array(
  array('data' =>'','class' => array('col-md-1','text-left','hidden','no-sort')),
  array('data' =>'','class' => array('col-md-1','text-left','hidden','no-sort')),
  array('data'=>'<input type="checkbox" name="select-m6drive-project-checkbox" class="form-checkbox select-m6drive-project-checkbox">', 'class'=> array('col-md-1','text-center','hidden','no-sort')),
  array('data'=>'Name  &nbsp;<i id="drive_filter_sort" class="fa fa-caret-down filter-sort" aria-hidden="true"></i> <div class="m6drive_filter_sort_form m6drive_filter_sort" style="display:none;">'.render(drupal_get_form('company_project_share_m6drive_filter_form', $ProjectNid, $FolderId)).'</div>','class'=>array('col-md-4','text-left','drive_filter_header')),
  array('data'=>'Shared by','class'=>array('col-md-2','text-left')),
  array('data'=>'Shared date','class'=>array('col-md-2','text-left')),
  array('data'=>'File Size','class'=>array('col-md-3','text-left')),
  //array('data'=>'Action', 'class'=>array('col-md-2','text-left')), 
  );

  // Creating div structure.
  $drive_folder_icon = $base_url . '/sites/all/themes/m6connect/images/drive-folder-icon.png';
  $Drive_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:40px;">';
  $Grid_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:50px;">';

  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }
  if ($optionview == 'List') {
    $grid_display =  'display:none';
    $list_display =  'display:block';
  }
  else {
    $grid_display =  'display:block';
    $list_display =  'display:none';
  }
  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($filefolder); die;

  //=====Start for folter query and folder========
  if(!empty($filefolder['folder_name'])) {
   foreach($filefolder['folder_name'] as $multKey => $multVal) { 

        $getStatus = explode('-', $multVal);
        $folder_id  = $getStatus[0];
        $projectnid = $getStatus[1];
        $type = $getStatus[2];
        //====Start query for filter serach 
        if ($projectnid != 0 && $folder_id == 0 &&  $type != 'file') {
           if($projectnid && is_numeric($projectnid) && $projectnid != 0) {
             $query = db_select('m6connect_project_drive_shared', 'pds');    
             $query->fields('pds',array('id','share_by_uid','share_to_uid','project_nid','email_id','fid','shared_date', 'permissions'));
             $query->condition('pds.share_to_uid', $user->uid);
             $query->condition('pds.project_nid',  $projectnid);
             $record = $query->execute()->fetchObject();

             if(!empty($record)){
                $ProjectNid = $record->project_nid;
                $Usersdetail = _get_user_data_by_uid($record->share_by_uid);
                $Usersfullname =  $Usersdetail['realname'];
                $shared_date = $record->shared_date;
                $permissions = $record->permissions;
                
             }else{
                $ProjectNid = $projectnid;
                $Dateproject = _get_share_date_projectnid_using_rfp_nid($ProjectNid);
                $shared_date = $Dateproject->shared_date;
                $permissions = $Dateproject->permissions;
                if($Dateproject) {
                  $Usersdetail = _get_user_data_by_uid($Dateproject->share_by_uid);
                  $Usersfullname =  $Usersdetail['realname'];
                }
             }

             $projectnid_in_trash = _get_all_projectnid_in_trash_drive($user->uid, $ProjectNid);
             if ($ProjectNid != $projectnid_in_trash) {
                $Node = node_load($ProjectNid);
               $Follengthtrim = (strlen($Node->title) > 22) ? substr($Node->title, 0, 19).'...' : $Node->title;
               $foldericon   = $Drive_folder_icon_image . $Follengthtrim;
               $foldername =  l($foldericon, 'project-share-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE)); 

              $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim;
              $foldernamegrid =  l($foldericongrid, 'project-share-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE)); 

              if($value->permissions == 'r-w-o'){
                $attr = 'data="'.$Node->title.'" name="m6drive-project-'.$ProjectNid.'" value="'.$ProjectNid.'-folder" class="form-checkbox m6drive-project-checkbox"';
                 $Dragclass = 'project-drive-folder-dragable';
                 $Dropclass = 'project-drive-folder-droppable';
              } else if($value->permissions == 'r-o'){
                $attr = 'data-attr="permission_denied" name="m6drive-project-'.$ProjectNid.'" class="form-checkbox" disabled readonly';
                $Dragclass = 'project-drive-folder-dragable';
                $Dropclass = 'project-drive-folder-droppable';

              } else { 
                  $attr = 'data-attr="permission_denied" name="m6drive-project-'.$ProjectNid.'" class="form-checkbox" disabled readonly';
              }
              $rows[] = array(
                'data' => array(
                  array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                  array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                  array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" '.$attr.'></div>', 'class'=> array('col-md-1','text-center','hidden')),
                  array('data'=>  $foldername, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                  array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                  array('data' => date('F d, Y', strtotime($shared_date)),'class' => array('col-md-2','text-left')),
                  array('data'=>'-','class'=>array('col-md-3','text-left')),
                  //array('data' => project_drive_share_action_btn('folder',  $ProjectNid),'class' => array('col-md-2','text-left')),           
                 ),  
                'class' => array('custom-odd','customsearchformydrive','m6drive-folderdelete-'.$ProjectNid.'-'.$company->nid.'-row'),
              );
              //For dev str row folder ==========
               $divprojectstrfol .='<div class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                                      <div class="form-item form-type-checkbox hidden"><input type="checkbox" '.$attr.'></div>
                                    <div class="grid-item-anchor clearfix">'.$foldernamegrid.'</div>
                              </div>';
              //End dev str row==========
             }
           }
          
        }
        if($folder_id != 0 &&  $type == 'folder'){

          $query = db_select('m6connect_m6drive', 'm6d');
          $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
          $query->condition('m6d.Id', $folder_id);
          $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
          $record = $query->execute()->fetchAll();
          foreach ($record as $value) {
            if (isset($value->foldername) && _check_folder_eligibility_share($value->Id)) {
             $share_by_uid = db_select('m6connect_m6drive_shared', 's')
               ->fields('s', array('share_by_uid', 'shared_date','permissions'))
               ->condition('folder_id', $value->Id)
              ->condition('share_to_uid', $user->uid)
              ->range(0, 1)
              ->execute()
             ->fetchAssoc();

           if ($share_by_uid['share_by_uid'] == 0) {
             $share_by_uid['share_by_uid'] = $value->user_uid;
           }

           $Usersdetail = _get_user_data_by_uid($share_by_uid['share_by_uid']);
           $Usersfullname =  $Usersdetail['realname'];

           $Follengthtrim = (strlen($value->foldername) > 22) ? substr(str_replace('_', ' ', $value->foldername), 0, 19).'...' : str_replace('_', ' ', $value->foldername);
           $foldericon   = $Drive_folder_icon_image . $Follengthtrim; 
           $foldername =  l($foldericon, 'project-share-load-drive/'.$projectnid.'/'. $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE));

           $foldericongrid   = $Grid_folder_icon_image . $Follengthtrim; 
           $foldernamegrid =  l($foldericongrid, 'project-share-load-drive/'.$projectnid.'/'. $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$projectnid),'html' =>TRUE));  


            if($share_by_uid['permissions'] == 'r-w-o'){
                $attr = 'data="'.$value->foldername.'" name="m6drive-project-'.$projectnid.'" value="'.$value->Id.'-folder" class="form-checkbox m6drive-project-checkbox"';
                  $Dragclass = 'project-drive-folder-dragable';
                 $Dropclass = 'project-drive-folder-droppable';

              } else if($share_by_uid['permissions'] == 'r-o'){
                $attr = 'data-attr="permission_denied" name="m6drive-project-'.$projectnid.'" class="form-checkbox  permission_deniedshare" disabled readonly ';
               $Dragclass = 'project-drive-folder-dragable';
               $Dropclass = 'project-drive-folder-droppable';

            
             } else { 
              $attr = 'data-attr="permission_denied" name="m6drive-project-'.$projectnid.'" class="form-checkbox  permission_deniedshare" disabled readonly';
           
             }

            $rows[] = array(
              'data' => array(
                array('data'=>'<span class="folder-ids" style="display:none;">'.$value->Id.'-folder</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
                 array('data'=>'<span class="project-drive-nids" style="display:none;">'.$projectnid.'</span>', 'class'=> array('m6drive-display-none-drag','hidden')),
                array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" '.$attr.'></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=>  $foldername, 'class' => array('col-md-4','text-left','m6drive-drag-content-show','drive-getting-folder')),
                array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                array('data' => date('F d, Y', strtotime($share_by_uid['shared_date'])),'class' => array('col-md-2','text-left')),
                array('data'=>'-','class'=>array('col-md-3','text-left')),
                //array('data' => project_drive_share_action_btn('folder',  $ProjectNid),'class' => array('col-md-2','text-left')),           
               ),
              'id' => array(''.$value->Id.''),   
              'class' => array('custom-odd', $Dragclass, $Dropclass, 'customsearchformydrive','m6drive-folderdelete-'.$projectnid.'-'.$value->Id.'-row'),
            );
             //For dev str row folder ==========
               $divprojectstrfol .= '<div id="' . $value->Id . '"class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10 ' . $Dragclass . ' ' . $Dropclass . '">
                                  <div class="m6drive-display-none-drag"><span class="folder-ids" style="display:none;">'.$value->Id.'-folder</span></div>
                                  <div class="m6drive-display-none-drag"><span class="project-drive-nids" style="display:none;">'.$projectnid.'</span></div>
                                    <div class="form-item form-type-checkbox hidden"><input type="checkbox" '.$attr.'></div>
                                    <div class="grid-item-anchor clearfix m6drive-drag-content-show">'.$foldernamegrid.'</div>
                              </div>';
              //End dev str row==========
            }
          }

        }
       if($type == 'file'){
            $fid = $projectnid;
            $query = db_select('m6connect_project_drive_shared', 'pds');
            $query->fields('pds',array('id','share_by_uid','share_to_uid','project_nid','fid','shared_date', 'permissions'));
            $query->condition('pds.share_to_uid', $user->uid);
            $query->condition('pds.fid',  $fid);
            $query->orderBy('pds.shared_date', 'DESC');//ORDER BY created
            $recordpro = $query->execute()->fetchAll();

            $querysub = db_select('m6connect_m6drive_shared', 's')
            ->fields('s')
           ->condition('share_to_uid', $user->uid)
           ->condition('services', 'm6drive_project')
           ->condition('fid', $fid)
           ->orderBy('shared_date', 'DESC');
           $recordshare =  $querysub->execute()->fetchAll();
           $record = array_merge($recordpro, $recordshare);
            //print "<pre>"; print_r($record); die;
            if(!empty($record)){
              foreach ($record as $key => $value) {
              if (isset($value->fid) && is_numeric($value->fid) && $value->fid != 0 && $filevalue = file_load($value->fid)) {
                $fid =  $value->fid;
                $projectfid_in_trash = _get_all_projectfid_in_trash_drive($user->uid, $fid);
                 if ($fid != $projectfid_in_trash) {
                 $uri = $filevalue->uri;
                 $filename =  $filevalue->filename;
                 $filetype = $filevalue->type;
                 $filepath = file_create_url($uri);
                 $Usersdetail = _get_user_data_by_uid($value->share_by_uid);
                 $Usersfullname =  $Usersdetail['realname'];

                $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 

                if($value->permissions == 'r-w-o'){
                  $attr = 'data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"';
                    $Dragclass = 'project-drive-folder-dragable';
                   $Dropclass = 'project-drive-folder-droppable';

                } else if($value->permissions == 'r-o'){
                  $attr = 'data="permission_denied" name="m6drive-project-'.$fid.'" class="form-checkbox  permission_deniedshare" disabled readonly ';
                  $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, 'javascript:',  array('external' => TRUE));
                    $Dragclass = 'project-drive-folder-dragable';
                   $Dropclass = 'project-drive-folder-droppable';

                } else { 
                    $attr = 'data="permission_denied" name="m6drive-project-'.$fid.'" class="form-checkbox  permission_deniedshare" disabled readonly';
                    $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, 'javascript:',  array('external' => TRUE));
                }


                $rows[] = array(
                  'data' => array(
                    array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                    array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                    array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" '.$attr.' ></div>', 'class'=> array('col-md-1','text-center','hidden')),
                    array('data'=>  $fileName, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                    array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                    array('data' => date('F d, Y', strtotime($value->shared_date)),'class' => array('col-md-2','text-left')),
                    array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                    //array('data' => project_drive_share_action_btn('file', $fid),'class' => array('col-md-2','text-left')),           
                   ),  
                  'class' => array('custom-odd','customsearchformydrive','m6drive-folderdelete-'.$fid.'-'.$company->nid.'-row'),
                );
                //For dev str row file ==========
                   // $img_url = image_style_url('user_image_large', $uri);
                    $fileicondrive = _get_file_icon_m6drive($filevalue->filemime);
                    if($fileicondrive) {
                       $img_url = $fileicondrive;
                    }
                    else {
                      $img_url = image_style_url('user_image_large', $uri);
                      $img_url = '<img src= '.$img_url.'>';
                    }
                    $divprojectstrfile .=' <div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                        <div class="form-item form-type-checkbox hidden"><input type="checkbox" '.$attr.' ></div>
                             <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                             '.$img_url.'
                             <div class="clearfix text-blue grid-item-anchor">'.$filename.'</div>
                      </div>';
                //End dev str row file========== 

                }
              }
              }
            }else{
                $fid = $projectnid;
                $ProNid =  $folder_id;
                $query = db_select('m6connect_project_drive_shared', 'pds');    
                $query->fields('pds',array('id','share_by_uid','share_to_uid','project_nid','email_id','fid','shared_date', 'permissions'));
                $query->condition('pds.share_to_uid', $user->uid);
                $query->condition('pds.project_nid',  $ProNid);
                $record = $query->execute()->fetchObject();

               if(!empty($record)){
                  $ProjectNid = $record->project_nid;
                  $Usersdetail = _get_user_data_by_uid($record->share_by_uid);
                  $Usersfullname =  $Usersdetail['realname'];
                  $shared_date = $record->shared_date;
                  $permissions = $record->permissions;
                  
               }else{
                  $ProjectNid = $ProNid;
                  $Dateproject = _get_share_date_projectnid_using_rfp_nid($ProjectNid);
                  $shared_date = $Dateproject->shared_date;
                  $permissions = $Dateproject->permissions;
                  if($Dateproject) {
                    $Usersdetail = _get_user_data_by_uid($Dateproject->share_by_uid);
                    $Usersfullname =  $Usersdetail['realname'];
                  }
               }
              if(isset($fid) && $filevalue = file_load($fid)) {
                $uri = $filevalue->uri;
                $filename =  $filevalue->filename;
                $filename_str = (strlen($filename) > 22) ? substr($filename, 0, 19).'...' : $filename;
                $filetype = $filevalue->type;
                $filepath = file_create_url($uri);
               $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename_str, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
               if($permissions == 'r-w-o'){
                $attr = 'data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"';
                  $Dragclass = 'project-drive-folder-dragable';
                 $Dropclass = 'project-drive-folder-droppable';

               } else if($permissions == 'r-o'){
                $attr = 'data="permission_denied" name="m6drive-project-'.$fid.'" class="form-checkbox  permission_deniedshare" disabled readonly ';
                $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, 'javascript:',  array('external' => TRUE));
                 $Dragclass = 'project-drive-folder-dragable';
                 $Dropclass = 'project-drive-folder-droppable';

               } else { 
                  $attr = 'data="permission_denied" name="m6drive-project-'.$fid.'" class="form-checkbox  permission_deniedshare" disabled readonly';
                  $fileName = '<span class="orignal-img" style="display:none;">'.$filepath.'</span>'.l($filename, 'javascript:',  array('external' => TRUE));
               }
               $rows[] = array(
                'data' => array(
                  array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                  array('data' =>'','class' => array('col-md-1','text-left','hidden')),
                  array('data' => '<div class="form-item form-type-checkbox"><input type="checkbox" '.$attr.' ></div>', 'class'=> array('col-md-1','text-center','hidden')),
                  array('data'=>  $fileName, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                  array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                  array('data' => date('F d, Y', strtotime($shared_date)),'class' => array('col-md-2','text-left')),
                  array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                  //array('data' => project_drive_share_action_btn('file', $fid),'class' => array('col-md-2','text-left')),           
                  ),  
                'class' => array('custom-odd','customsearchformydrive','m6drive-folderdelete-'.$fid.'-'.$value->folder_id.'-row'),
                );
                 //For dev str row file ==========
                  //$img_url = image_style_url('user_image_large', $uri);
                 $fileicondrive = _get_file_icon_m6drive($filevalue->filemime);
                  if($fileicondrive) {
                     $img_url = $fileicondrive;
                  }
                  else {
                    $img_url = image_style_url('user_image_large', $uri);
                    $img_url = '<img src= '.$img_url.'>';
                  }
                  $divprojectstrfile .=' <div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                       <div class="form-item form-type-checkbox hidden"><input type="checkbox" '.$attr.' ></div>
                           <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                           '.$img_url.'
                           <div class="clearfix text-blue grid-item-anchor">'.$filename_str.'</div>
                    </div>';
              //End dev str row file========== 
              }
            }
        }

       //====End query for filter search
   }
   $return .= '<div class="list-view" style="'.$list_display.'">';
   $return .= theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No file or folders yet','attributes'=>array('class'=>array('table','m6connect-custom-m6drive-project-drive','table-striped','table-hover','table-bordered','text-center'))));
   $return .= '</div>';
  // End here fir table List view structure========

   // start here for Grid  view structure========
   $return .= '<div class="grid-view" style="'.$grid_display.'">';
   $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Folders') . '</h3></div>';
   $return .= '<div class="grid-view-folders row margin-5">';
  // First handling only Folders.
   if(empty($divprojectstrfol)){
   $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No folders yet</strong></div>'; 
   }
   $return .= $divprojectstrfol; 
   $return .= '</div>'; //end grid-view-folders
  // Then handling only Files.
   $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Files') . '</h3></div>';
   $return .= '<div class="grid-view-files row margin-5">';
   if(empty($divprojectstrfile)){
   $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No files yet</strong></div>';
   }
   $return .= $divprojectstrfile; 
   $return .= '</div>'; // end grid-view-files.
   $return .= '</div>'; // end grid-view.
  // End here for Grid  view structure========
  $commands[] = ajax_command_html("#project-drive-share-datacontainer-main-cust", $return);
 }else{

  $commands[] = ajax_command_html("#project-drive-share-datacontainer-main-cust", m6drive_project_drive_share_listing_content($ProjectNid, $FolderId));
 }

 return array('#type' => 'ajax', '#commands' => $commands); 
}

function company_project_archive_m6drive_filter_form($form, &$form_state ,$projectnid = 0, $folder_id = 0){

  global $company, $user, $base_url;
  
  $projectnid = (isset($form_state['projectnid'])) ? $form_state['projectnid']: $projectnid;
  $form_state['projectnid'] = $projectnid; 
  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id;

  $FolArr = array();

  if($projectnid == 0 && $folder_id == 0) {
    // This is the case, when we are on the root folder.
    $query = db_select('m6connect_project_drive_archive', 'pda');
    $query->fields('pda',array('id','user_uid','project_nid','fid','archive_status'));
    $query->condition('pda.user_uid', $user->uid);
    $query->condition('pda.archive_status', 1,'=');
    $record = $query->execute()->fetchAll();
    foreach($record as $key => $value) {
      if (isset($value->project_nid) && is_numeric($value->project_nid) && $value->project_nid != 0 && _check_folder_eligibility_archive_trash($value->project_nid, 'archive')) {
        $ProjectNid = $value->project_nid;
        $Node = node_load($ProjectNid); 
        //$Usersdetail = _get_node_company_user_name($Node->nid);
        //$Usersfullname =  $Usersdetail['user_name'];
        $Userdetail = _get_user_data_by_uid($Node->uid);
        $Usersfullname = $Userdetail['realname'];

        $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
        $foldername =  l($foldericon, 'project-archive-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

        $FolArr['0-'.$ProjectNid.'-folder'] = $Node->title;
         
      }
      if (isset($value->fid) && is_numeric($value->fid) && $value->fid != 0 && _check_file_eligibility_archive_trash($value->fid, 'archive')  && $filevalue = file_load($value->fid)) {
        $fid =  $value->fid;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        $nodecreated = $filevalue->timestamp;
        $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
        $FolArr[$ProjectNid.'-'.$fid.'-file'] = $filename; 
      }
    }

    // If we are browsing the root, then need to check if any subfolder from
    // a project folder was archived. Meaning only a subfolder from a project
    // folder was archived and not the whole project folder.
    $drive_query = db_select('m6connect_m6drive', 'm')
      ->fields('m')
      ->condition('services', 'm6drive_project')
      ->condition('company_nid', $company->nid)
      ->condition('user_uid', $user->uid)
      ->condition('root', 1)
      ->condition('archive_status', 1)
      ->orderBy('created_date', 'DESC'); //ORDER BY created
    $record = $drive_query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','m');
    $querysub->fields('m',array('file','created_date','trash_status'));
    $querysub->condition('m.user_uid', $user->uid);
    $querysub->condition('m.services', 'm6drive_project');
    $querysub->condition('m.company_nid', $company->nid);
    $querysub->condition('m.archive_status', 1);
    $querysub->condition('m.root', 1);
    $querysub->orderBy('m.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);

    $UserFnameLname =_get_user_data_by_uid($user->uid);
    $Usersfullname = $UserFnameLname['realname'];

    foreach ($complteresult as $value) {
      if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'archive')) {
        // When the very first folder is browsed, then the projectnid or folder_id
        // are 0. But when we are browsing a sub folder in the root of archive,
        // we need a projectnid. So trying to get projectnid here.
        $output = m6drive_get_parent_folder($value->Id);
        foreach($output as $fldrId => $folderNameVal) {
          foreach($folderNameVal as $foldKey => $fldVal) {
            if (is_array($fldVal)) {
              $projectnid = $foldKey;
            }
          }
        }
        $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
        $foldername =  l($foldericon, 'project-archive-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE)); 

        $FolArr[$value->Id.'-'.$projectnid.'-folder'] = ucwords(str_replace('_',' ',$value->foldername));
       
      }
      if (isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'archive') && $filevalue = file_load($value->file)) {
        $fid =  $value->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);  
        $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
        $FolArr['0-'.$fid.'-file'] =  $filename;
       
      }
    }
    // Setting back the projectnid to 0, else the below query would be treated
    // true.
    $projectnid = 0;
  }

  if ($projectnid != 0) {
    // This is the case when we are browsing the project folder in the archive
    // directory.
    if ($folder_id == 0) {
      // As the project node files do not have any entry in the attachment table,
      // only project folder is archived. Project files are not archived, because
      // if a folder is archived, it is not visible in the projects directory.
      // So, here we dynamically get these files.
      $node = node_load($projectnid);
      $Userdetail = _get_user_data_by_uid($node->uid);
      $Usersfullname = $Userdetail['realname'];

      $fid =  $node->field_images['und'][0]['fid'];
      if(!empty($fid)) {
        $uri =  $node->field_images['und'][0]['uri'];
        $filename = $node->field_images['und'][0]['filename'];
        $filemime = $node->field_images['und'][0]['filemime'];
        $filepath = file_create_url($uri);
        $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
        $FolArr[$projectnid.'-'.$fid.'-file'] =  $filename;
         
      }
      $fieldrfpdocumentArr =_get_all_rfp_nid_using_project_nid_project_drive($projectnid);
      foreach($fieldrfpdocumentArr as $projectfiles) {
        if (!empty($projectfiles['fid'])) {
          $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid, $projectfiles['fid']);
          if ($ChkFidInArchive != $projectfiles['fid']) {
            $filepath = file_create_url($projectfiles['uri']);  
            $Attachment = l($projectfiles['filename'], $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$projectfiles['fid']))); 
            $FolArr[$projectnid.'-'.$projectfiles['fid'].'-file'] =  $projectfiles['filename'];
            
          }
        }
      }
    }

    // After we have fetched files for project folder from nodes, we need the
    // folders in the project folder, or sub folders.
    if ($folder_id == 0) {
      $folder_id = $projectnid;
    }

    $drive_query = db_select('m6connect_m6drive', 'm')
      ->fields('m')
      ->condition('services', 'm6drive_project')
      ->condition('company_nid', $company->nid)
      ->condition('user_uid', $user->uid)
      ->condition('parent_id', $folder_id)
      ->condition('archive_status', 1)
      ->orderBy('created_date', 'DESC');  //ORDER BY created
    $record = $drive_query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','m');    
    $querysub->fields('m',array('file','created_date','archive_status'));
    $querysub->condition('m.user_uid', $user->uid);
    $querysub->condition('m.services', 'm6drive_project');
    $querysub->condition('m.company_nid', $company->nid);
    $querysub->condition('m.folder_id', $folder_id);
    $querysub->condition('m.archive_status', 1);
    $querysub->orderBy('m.created_date', 'DESC'); //ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);

    $UserFnameLname =_get_user_data_by_uid($user->uid);
    $Usersfullname = $UserFnameLname['realname'];

    foreach ($complteresult as $value) {
      if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'archive')) {
         $FolArr[$value->Id.'-'.$projectnid.'-folder'] =  ucwords(str_replace('_',' ',$value->foldername));
         
      }
      if (isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'archive')  && $filevalue = file_load($value->file)) {
        $fid =  $value->file;
       // $filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $FolArr['0-'.$fid.'-file'] =   $filename;
      }
    }
  } 

  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'company_project_archive_m6drive_filter_callback',
      'wrapper' => 'project-drive-archive-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function company_project_archive_m6drive_filter_callback($form, &$form_state){

  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $company, $user, $base_url;

  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  $ProjectNid = $form_state['projectnid']; 
  $FolderId = $form_state['folder_id'];

  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];

  $header = array(
  array('data'=>'<input type="checkbox" name="select-m6drive-project-checkbox" class="form-checkbox select-m6drive-project-checkbox">', 'class'=> array('col-md-1','text-center','hidden','no-sort')),
  array('data'=>'Name  &nbsp;<i id="drive_filter_sort" class="fa fa-caret-down filter-sort" aria-hidden="true"></i> <div class="m6drive_filter_sort_form m6drive_filter_sort" style="display:none;">'.render(drupal_get_form('company_project_archive_m6drive_filter_form',$projectnid, $folder_id)).'</div>','class'=>array('col-md-4','text-left','drive_filter_header')),
  array('data'=>'Owner','class'=>array('col-md-2','text-left')),
  array('data'=>'Last Modified','class'=>array('col-md-2','text-left')),
  array('data'=>'File Size','class'=>array('col-md-3','text-left')),
  //array('data'=>'Action', 'class'=>array('col-md-2','text-left')), 
  );
  $drive_folder_icon = $base_url . '/sites/all/themes/m6connect/images/drive-folder-icon.png';
  $Drive_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:40px;">';
  $Grid_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:50px;">';
  // Creating div structure.
  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }
  if ($optionview == 'List') {
    $grid_display =  'display:none';
    $list_display =  'display:block';
  }
  else {
    $grid_display =  'display:block';
    $list_display =  'display:none';
  }
  //print "<pre>"; print_r($filefolder); die;

  //=====Start for folter query and folder========
  if(!empty($filefolder['folder_name'])) {
    foreach($filefolder['folder_name'] as $multKey => $multVal) { 

      $getStatus = explode('-', $multVal);
      $folder_id  = $getStatus[0];
      $projectnid = $getStatus[1];
      $type = $getStatus[2];

      if($projectnid != 0 && $folder_id == 0 &&  $type != 'file') {
        if (isset($projectnid) && is_numeric($projectnid) &&$projectnid != 0 && _check_folder_eligibility_archive_trash($projectnid, 'archive')) {
           $query = db_select('m6connect_project_drive_archive', 'pda');
           $query->fields('pda',array('id','user_uid','project_nid','fid','archive_status'));
           $query->condition('pda.user_uid', $user->uid);
           $query->condition('pda.archive_status', 1,'=');
           $query->condition('pda.project_nid',  $projectnid);
           $record = $query->execute()->fetchObject();
            if(!empty($record)){
                $ProjectNid = $record->project_nid;    
            }else{
                $ProjectNid = $projectnid;
            }
             $Node = node_load($ProjectNid); 
            //$Usersdetail = _get_node_company_user_name($Node->nid);
            //$Usersfullname =  $Usersdetail['user_name'];
            $Userdetail = _get_user_data_by_uid($Node->uid);
            $Usersfullname = $Userdetail['realname'];

           $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
           $foldername =  l($foldericon, 'project-archive-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

           $foldericongrid   = $Grid_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
           $foldernamegrid =  l($foldericongrid, 'project-archive-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

              $rows[] = array(
                'data' => array(
                  array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$Node->title.'" name="m6drive-project-'.$ProjectNid.'" value="'.$ProjectNid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                  array('data'=>  $foldername, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                  array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                  array('data' => date('F d, Y', $Node->created),'class' => array('col-md-2','text-left')),
                  array('data'=>'-','class'=>array('col-md-3','text-left')),
                  //array('data' =>  project_drive_archive_action_btn('folder', $ProjectNid),'class' => array('col-md-2','text-left')),           
                 ),  
                'class' => array('custom-odd','customsearchformydrive','m6drive-project-archive-'.$ProjectNid.'-'.$company->nid.'-row'),
              );
              //For dev str row folder ==========
              $divprojectstrfol .='<div class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                               <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$Node->title.'" name="m6drive-project-'.$ProjectNid.'" value="'.$ProjectNid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                <div class="grid-item-anchor clearfix">'. $foldernamegrid.'</div>
                          </div>';
             //End dev str row==========

        }
      }
      if($folder_id != 0 &&  $type == 'folder'){
         //print "<pre>"; print_r($folder_id); die;

         $drive_query = db_select('m6connect_m6drive', 'm')
            ->fields('m')
            ->condition('services', 'm6drive_project')
            ->condition('company_nid', $company->nid)
            ->condition('user_uid', $user->uid)
            ->condition('Id', $folder_id)
            ->condition('archive_status', 1);
          $record = $drive_query->execute()->fetchAll();
           foreach($record as $value) {

            $UserFnameLname =_get_user_data_by_uid($value->user_uid);
            $Usersfullname = $UserFnameLname['realname'];

            if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'archive')) {
                $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
                $foldername =  l($foldericon, 'project-archive-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE)); 

                $foldericongrid   = $Grid_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
                $foldernamegrid =  l($foldericongrid, 'project-archive-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE)); 


                $rows[] = array(
                  'data' => array(
                    array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$value->foldername.'" name="m6drive-project-'.$value->Id.'" value="'.$value->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                    array('data'=>  $foldername, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                    array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                    array('data' => date('F d, Y', strtotime($value->created_date)),'class' => array('col-md-2','text-left')),
                    array('data'=>'-','class'=>array('col-md-3','text-left')),
                    //array('data' =>  project_drive_archive_action_btn('folder', $ProjectNid),'class' => array('col-md-2','text-left')),           
                   ),  
                  'class' => array('custom-odd','customsearchformydrive','m6drive-project-archive-'.$value->Id.'-'.$company->nid.'-row'),
                );
                  //For dev str row folder ==========
                  $divprojectstrfol .='<div class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                                          <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$value->foldername.'" name="m6drive-project-'.$value->Id.'" value="'.$value->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                        <div class="grid-item-anchor clearfix">'.$foldernamegrid.'</div>
                                  </div>';
                //End dev str row==========
            }
          }
      }
      if($type == 'file'){
        $fid = $projectnid;
        $querysub = db_select('m6connect_m6drive_attachment','m');    
        $querysub->fields('m',array('file','created_date','archive_status'));
        $querysub->condition('m.user_uid', $user->uid);
        $querysub->condition('m.services', 'm6drive_project');
        $querysub->condition('m.company_nid', $company->nid);
        $querysub->condition('m.file',  $fid);
        $querysub->condition('m.archive_status', 1);
        $recordsub = $querysub->execute()->fetchAll();
          if(!empty($recordsub)){
            foreach ($recordsub as $key => $value) {
               if(isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'archive')  && $filevalue = file_load($value->file)) {
                 $fid =  $value->file;
                // $filevalue = file_load($fid);
                $uri = $filevalue->uri;
                $filename =  $filevalue->filename;
                $filetype = $filevalue->type;
                $filepath = file_create_url($uri); 

                $Userdetail = _get_user_data_by_uid($filevalue->uid);
                $Usersfullname = $Userdetail['realname'];

                $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
                  $rows[] = array(
                    'data' => array(
                       array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                      array('data'=>  $fileName, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                      array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                      array('data' => date('F d, Y', $filevalue->timestamp),'class' => array('col-md-2','text-left')),
                      array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                      //array('data' => project_drive_archive_action_btn('file',  $fid),'class' => array('col-md-2','text-left')),           
                     ),  
                    'class' => array('custom-odd','customsearchformydrive','m6drive-project-archive-'.$fid.'-'.$company->nid.'-row'),
                  );

               }
            }
          }else{
             
             $fileObj = file_load($fid);
             $uri =  $fileObj->uri;
             $filename =  $fileObj->filename;
             $filemime =  $fileObj->filemime;
             $filepath = file_create_url($uri);
             $Userdetail = _get_user_data_by_uid($fileObj->uid);
             $Usersfullname = $Userdetail['realname'];
    
             $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 
             $rows[] = array(
              'data' => array(
                array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=>  $fileName, 'class' => array('col-md-4','text-left')),
                array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                array('data' => date('F d, Y', $fileObj->timestamp),'class' => array('col-md-2','text-left')),
                 array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                //array('data' => project_drive_archive_action_btn('file',  $fid),'class' => array('col-md-2','text-left')),           
               ),  
              'class' => array('custom-odd','customsearchformydrive','m6drive-project-archive-'.$fid.'-'.$company->nid.'-row'),
            );
            
             //For dev str row file ==========
              //$img_url = image_style_url('user_image_large',  $uri);
              $fileicondrive = _get_file_icon_m6drive($filemime);
              if($fileicondrive) {
                 $img_url = $fileicondrive;
              }
              else {
                $img_url = image_style_url('user_image_large', $uri);
                $img_url = '<img src= '.$img_url.'>';
              }
             $divprojectstrfile .=' <div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                     <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>
                       <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                       '.$img_url.'
                       <div class="clearfix text-blue grid-item-anchor">'.$filename.'</div>
                </div>';
             //End dev str row file==========

          }

      }

    }

  $return .= '<div class="list-view" style="'.$list_display.'">';
  $return .=theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No file or folders yet','attributes'=>array('class'=>array('table','m6connect-custom-m6drive-project-drive','table-striped','table-hover','table-bordered','text-center'))));
  $return .= '</div>';
  // End here fir table List view structure========
   // start here for Grid  view structure========
   $return .= '<div class="grid-view" style="'.$grid_display.'">';
   $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Folders') . '</h3></div>';
   $return .= '<div class="grid-view-folders row margin-5">';
  // First handling only Folders.
   if(empty($divprojectstrfol)){
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No folders yet</strong></div>'; 
   }
   $return .= $divprojectstrfol; 
   $return .= '</div>'; //end grid-view-folders
  // Then handling only Files.
   $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Files') . '</h3></div>';
   $return .= '<div class="grid-view-files row margin-5">';
   if(empty($divprojectstrfile)){
    $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No files yet</strong></div>';
   }
   $return .= $divprojectstrfile; 
   $return .= '</div>'; // end grid-view-files.
   $return .= '</div>'; // end grid-view.
  // End here for Grid  view structure========
  $commands[] = ajax_command_html("#project-drive-archive-datacontainer-main-cust", $return);

  }
  //===== End here for folder query for archive and folder========
  else{
  $commands[] = ajax_command_html("#project-drive-archive-datacontainer-main-cust", m6drive_project_drive_archive_listing_content($ProjectNid, $FolderId));
  }
 return array('#type' => 'ajax', '#commands' => $commands); 

}

//====== Company project Trash drive filter search using chosen form
function company_project_trash_m6drive_filter_form($form, &$form_state ,$projectnid = 0, $folder_id = 0){

  global $company, $user, $base_url;
  // Creating div structure.
  $projectnid = (isset($form_state['projectnid'])) ? $form_state['projectnid']: $projectnid;
  $form_state['projectnid'] = $projectnid; 

  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id; 

  $folder_id = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folder_id;
  $form_state['folder_id'] = $folder_id;
  $FolArr = array();
  $CreatedArr = array();

  if ($projectnid == 0 && $folder_id == 0) {
    // This is the case, when we are on the root folder.
    $query = db_select('m6connect_project_drive_trash', 'pdt');
    $query->fields('pdt',array('id','user_uid','project_nid','fid','trash_status'));
    $query->condition('pdt.user_uid', $user->uid);
    $record = $query->execute()->fetchAll();

    foreach($record as $key => $value) {
      if (isset($value->project_nid) && is_numeric($value->project_nid) && $value->project_nid != 0 && _check_folder_eligibility_archive_trash($value->project_nid, 'trash')) {
        $ProjectNid = $value->project_nid;
        $Node = node_load($ProjectNid);

        $Userdetail = _get_user_data_by_uid($Node->uid);
        $Usersfullname = $Userdetail['realname'];

        $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
        $foldername =  l($foldericon, 'project-trash-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

        $FolArr['0-'.$ProjectNid.'-folder'] = $Node->title;
        $CreatedArr['0-'.$value->user_uid.'-folder'] = $Usersfullname;
        
      }
      if(isset($value->fid) && is_numeric($value->fid) && $value->fid != 0 && _check_file_eligibility_archive_trash($value->fid, 'trash') &&  $filevalue = file_load($value->fid)) {
        $fid =  $value->fid;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        $FolArr['0-'.$fid.'-file'] = $filename;
        $CreatedArr['0-'.$value->user_uid.'-folder'] = $Usersfullname;
        
      }
    }

    // If we are browsing the root, then need to check if any subfolder from
    // a project folder was trashed. Meaning only a subfolder from a project
    // folder was trashed and not the whole project folder.
    $drive_query = db_select('m6connect_m6drive', 'm')
      ->fields('m')
      ->condition('services', 'm6drive_project')
      ->condition('company_nid', $company->nid)
      ->condition('user_uid', $user->uid)
      ->condition('root', 1)
      ->condition('trash_status', 1)
      ->orderBy('created_date', 'DESC'); //ORDER BY created
    $record = $drive_query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','m');
    $querysub->fields('m',array('file','created_date','trash_status'));
    $querysub->condition('m.user_uid', $user->uid);
    $querysub->condition('m.services', 'm6drive_project');
    $querysub->condition('m.company_nid', $company->nid);
    $querysub->condition('m.trash_status', 1);
    $querysub->condition('m.root', 1);
    $querysub->orderBy('m.created_date', 'DESC'); //ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);

    $UserFnameLname =_get_user_data_by_uid($user->uid);
    $Usersfullname = $UserFnameLname['realname'];

    foreach ($complteresult as $value) {
      if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'trash')) {
        // When the very first folder is browsed, then the projectnid or folder_id
        // are 0. But when we are browsing a sub folder in the root of archive,
        // we need a projectnid. So trying to get projectnid here.
        $output = m6drive_get_parent_folder($value->Id);
        foreach($output as $fldrId => $folderNameVal) {
          foreach($folderNameVal as $foldKey => $fldVal) {
            if (is_array($fldVal)) {
              $projectnid = $foldKey;
            }
          }
        }
        
        $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
        $foldername =  l($foldericon, 'project-trash-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE)); 

        $FolArr[$value->Id.'-'.$projectnid.'-folder'] = ucwords(str_replace('_',' ',$value->foldername));
       
      }
      if (isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'trash') && $filevalue = file_load($value->file)) {
        $fid =  $value->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);  
        $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
        $FolArr['0-'.$fid.'-file'] = $filename;
        
      }
    }
    // Setting back the projectnid to 0, else the below query would be treated
    // true.
    $projectnid = 0;
  }

  if ($projectnid != 0) {
    // This is the case when we are browsing the project folder in the trash
    // directory.

    if ($folder_id == 0) {
      // As the project node files do not have any entry in the attachment table,
      // only project folder is trashed. Project files are not trashed, because
      // if a folder is trashed, it is not visible in the projects directory.
      // So, here we dynamically get these files.
      $node = node_load($projectnid);

      $Userdetail = _get_user_data_by_uid($node->uid);
      $Usersfullname = $Userdetail['realname'];

      $uri =  $node->field_images['und'][0]['uri'];
      $fid =  $node->field_images['und'][0]['fid'];
      if (!empty($fid)) {
        $filename = $node->field_images['und'][0]['filename'];
        $filemime = $node->field_images['und'][0]['filemime'];
        $FolArr[$projectnid.'-'.$fid.'-file'] = $filename;
         
      } 
      $fieldrfpdocumentArr =_get_all_rfp_nid_using_project_nid_project_drive($projectnid);
      foreach ($fieldrfpdocumentArr as $projectfiles) {
        if (!empty($projectfiles['fid'])) {
          $ChkFidInArchive =_get_all_projectfid_in_archive_drive($user->uid, $projectfiles['fid']);
          if ($ChkFidInArchive != $projectfiles['fid']) {
            $filepath = file_create_url($projectfiles['uri']);  
            $Attachment = l($projectfiles['filename'], $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$projectfiles['fid']))); 
            $FolArr[$projectnid.'-'.$projectfiles['fid'].'-file'] = $projectfiles['filename'];
             
          }
        }
      }
    }

    // After we have fetched files for project folder from nodes, we need the
    // folders in the project folder, or sub folders.
    if ($folder_id == 0) {
      $folder_id = $projectnid;
    }

    $drive_query = db_select('m6connect_m6drive', 'm')
      ->fields('m')
      ->condition('services', 'm6drive_project')
      ->condition('company_nid', $company->nid)
      ->condition('user_uid', $user->uid)
      ->condition('parent_id', $folder_id)
      ->condition('trash_status', 1)
      ->orderBy('created_date', 'DESC'); //ORDER BY created
    $record = $drive_query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','m');    
    $querysub->fields('m',array('file','created_date','trash_status'));
    $querysub->condition('m.user_uid', $user->uid);
    $querysub->condition('m.services', 'm6drive_project');
    $querysub->condition('m.company_nid', $company->nid);
    $querysub->condition('m.folder_id', $folder_id);
    $querysub->condition('m.trash_status', 1);
    $querysub->orderBy('m.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);

    $UserFnameLname =_get_user_data_by_uid($user->uid);
    $Usersfullname = $UserFnameLname['realname'];

    foreach ($complteresult as $value) {
      if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'trash')) {
        $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
        $foldername =  l($foldericon, 'project-trash-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE));
         $FolArr[$value->Id.'-'.$projectnid.'-folder'] = ucwords(str_replace('_',' ',$value->foldername));
       
      }
      if (isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'trash') && $filevalue = file_load($value->file)) {
        $fid =  $value->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $FolArr['0-'.$fid.'-file'] =  $filename; 
      }
    }
  }

  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'company_project_trash_m6drive_filter_callback',
      'wrapper' => 'project-drive-trash-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function company_project_trash_m6drive_filter_callback($form, &$form_state){
 
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');

  global $company, $user, $base_url;  
  $header = array(
  array('data'=>'<input type="checkbox" name="select-m6drive-project-checkbox" class="form-checkbox select-m6drive-project-checkbox">', 'class'=> array('col-md-1','text-center','hidden','no-sort')),
  array('data'=>'Name &nbsp;<i id="drive_filter_sort" class="fa fa-caret-down filter-sort" aria-hidden="true"></i> <div class="m6drive_filter_sort_form m6drive_filter_sort" style="display:none;">'.render(drupal_get_form('company_project_trash_m6drive_filter_form',$projectnid, $folder_id)).'</div>','class'=>array('col-md-4','text-left','drive_filter_header'
)),
  array('data'=>'Owner','class'=>array('col-md-2','text-left')),
  array('data'=>'Last Modified','class'=>array('col-md-2','text-left')),
  array('data'=>'File Size','class'=>array('col-md-3','text-left')),
  //array('data'=>'Action', 'class'=>array('col-md-2','text-left')), 
  );

  $drive_folder_icon = $base_url . '/sites/all/themes/m6connect/images/drive-folder-icon.png';
  $Drive_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:40px;">';
  $Grid_folder_icon_image = '<img src="'.$drive_folder_icon.'" class="padding-5" style="width:50px;">';

  // Creating div structure.
  $optionview = 'List';
  if (isset($_SESSION['detailview'])) {
    $optionview =  $_SESSION['detailview'];
  }
  if ($optionview == 'List') {
    $grid_display =  'display:none';
    $list_display =  'display:block';
  }
  else {
    $grid_display =  'display:block';
    $list_display =  'display:none';
  }

  $ProjectNid = $form_state['projectnid']; 
  $FolderId = $form_state['folder_id'];

  $complteresult = array();
  $commands = array();
  $filefolder = $form_state['values'];

  //print "<pre>"; print_r($filefolder); die;

  if(!empty($filefolder['folder_name'])) {
    foreach($filefolder['folder_name'] as $multKey => $multVal) { 
      $getStatus = explode('-', $multVal);

      //print "<pre>"; print_r($getStatus); die;
      $folder_id  = $getStatus[0];
      $projectnid = $getStatus[1];
      $type = $getStatus[2];

      if($projectnid != 0 && $folder_id == 0 &&  $type != 'file') {
        if(isset($projectnid) && is_numeric($projectnid) && $projectnid != 0 && _check_folder_eligibility_archive_trash($projectnid, 'trash')) {
             $query = db_select('m6connect_project_drive_trash', 'pdt');
             $query->fields('pdt',array('id','user_uid','project_nid','fid','trash_status'));
             $query->condition('pdt.user_uid', $user->uid);
             $query->condition('pda.project_nid',  $projectnid);
             $record = $query->execute()->fetchObject();

            if(!empty($record)){
                $ProjectNid = $record->project_nid;    
            }else{
                $ProjectNid = $projectnid;
            }
            $Node = node_load($ProjectNid);

            $Userdetail = _get_user_data_by_uid($Node->uid);
            $Usersfullname = $Userdetail['realname'];

            $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
            $foldername =  l($foldericon, 'project-trash-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

            $foldericongrid   = $Grid_folder_icon_image . ucwords(str_replace('_',' ',$Node->title)).'';
            $foldernamegrid =  l($foldericongrid, 'project-trash-load-drive/'.$ProjectNid.'/0/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$ProjectNid),'html' =>TRUE));

            $rows[] = array(
              'data' => array(
                array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$Node->title.'" name="m6drive-project-'.$ProjectNid.'" value="'.$ProjectNid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=>  $foldername, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                array('data' => date('F d, Y', $Node->created),'class' => array('col-md-2','text-left')),
                 array('data'=>'-','class'=>array('col-md-3','text-left')),
                //array('data' => project_drive_delete_trash_action_btn('folder', $ProjectNid),'class' => array('col-md-2','text-left')),           
               ),  
              'class' => array('custom-odd','customsearchformydrive','project-drive-delete-'.$ProjectNid.'-'.$company->nid.'-row'),
             );
             //For dev str row folder ==========
             $divprojectstrfol .='<div class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                                      <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$Node->title.'" name="m6drive-project-'.$ProjectNid.'" value="'.$ProjectNid.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                    <div class="grid-item-anchor clearfix">'.$foldernamegrid.'</div>
                              </div>';
             //End dev str row==========

        }
      }
      if($folder_id != 0 &&  $type == 'folder'){
          $UserFnameLname =_get_user_data_by_uid($user->uid);
          $Usersfullname = $UserFnameLname['realname'];

          $drive_query = db_select('m6connect_m6drive', 'm')
           ->fields('m')
           ->condition('services', 'm6drive_project')
           ->condition('company_nid', $company->nid)
           ->condition('user_uid', $user->uid)
           ->condition('Id', $folder_id)
           ->condition('trash_status', 1);
          $record = $drive_query->execute()->fetchAll();
         foreach ($record as $value) {
          if (isset($value->foldername) && _check_folder_eligibility_archive_trash($value->Id, 'trash')) {
             $foldericon   = $Drive_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
             $foldername =  l($foldericon, 'project-trash-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE));

            $foldericongrid   = $Grid_folder_icon_image . ucwords(str_replace('_',' ',$value->foldername)).'';
            $foldernamegrid =  l($foldericongrid, 'project-trash-load-drive/'.$projectnid.'/' . $value->Id . '/nojs', array('attributes' => array('class' => array('use-ajax','pointer-events-none'),'id'=>'estimate-td-'.$value->Id),'html' =>TRUE));

            $rows[] = array(
              'data' => array(
                array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$value->foldername.'" name="m6drive-project-'.$value->Id.'" value="'.$value->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=>  $foldername, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                array('data' =>  $Usersfullname,'class' => array('col-md-2','text-left')),
                array('data' => date('F d, Y', strtotime($value->created_date)),'class' => array('col-md-2','text-left')),
                array('data'=>'-','class'=>array('col-md-3','text-left')),
                //array('data' =>  project_drive_archive_action_btn('folder', $ProjectNid),'class' => array('col-md-2','text-left')),           
               ),
              'class' => array('custom-odd','customsearchformydrive','project-drive-delete-'.$value->Id.'-'.$company->nid.'-row'),
            );
            //For dev str row folder ==========
            $divprojectstrfol .='<div class="grid-view-folder-item col-md-4 padding-5 margin-bottom-10">
                                       <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$value->foldername.'" name="m6drive-project-'.$value->Id.'" value="'.$value->Id.'-folder" class="form-checkbox m6drive-project-checkbox"></div>
                                    <div class="grid-item-anchor clearfix">'.$foldernamegrid.'</div>
                              </div>';
             //End dev str row==========
         }
        }
      }
      if($type == 'file'){
        $fid = $projectnid;
        $querysub = db_select('m6connect_m6drive_attachment','m');    
        $querysub->fields('m',array('file','created_date','trash_status'));
        $querysub->condition('m.user_uid', $user->uid);
        $querysub->condition('m.services', 'm6drive_project');
        $querysub->condition('m.company_nid', $company->nid);
        $querysub->condition('m.file',  $fid);
        $querysub->condition('m.trash_status', 1);
        $recordsub = $querysub->execute()->fetchAll();
          if(!empty($recordsub)){
              
              $UserFnameLname =_get_user_data_by_uid($user->uid);
              $Usersfullname = $UserFnameLname['realname'];
            foreach ($recordsub as $key => $value) {

              if (isset($value->file) && _check_file_eligibility_archive_trash($value->file, 'trash') && $filevalue = file_load($value->file)) {
                $fid =  $value->file;
                //$filevalue = file_load($fid);
                $uri = $filevalue->uri;
                $filename =  $filevalue->filename;
                $filetype = $filevalue->type;
                $filepath = file_create_url($uri);  
                $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid)));
                $rows[] = array(
                  'data' => array(
                     array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                    array('data'=>  $fileName, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                    array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                    array('data' => date('F d, Y', strtotime($value->created_date)),'class' => array('col-md-2','text-left')),
                    array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                    //array('data' => project_drive_archive_action_btn('file',  $fid),'class' => array('col-md-2','text-left')),           
                   ),  
                  'class' => array('custom-odd','customsearchformydrive','project-drive-delete-'.$fid.'-'.$company->nid.'-row'),
                );

                //For dev str row file ==========
                $fileicondrive = _get_file_icon_m6drive($filevalue->filemime);
                if($fileicondrive) {
                   $img_url = $fileicondrive;
                }
                else {
                  $img_url = image_style_url('user_image_large', $uri);
                  $img_url = '<img src= '.$img_url.'>';
                }
                $divprojectstrfile .=' <div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                           <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>
                             <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                             '.$img_url.'
                             <div class="clearfix text-blue grid-item-anchor">'.$filename.'</div>
                      </div>';
                //End dev str row file==========
             }
           }

          }
          else{
             $fileObj = file_load($fid);
             $uri =  $fileObj->uri;
             $filename =  $fileObj->filename;
             $filemime =  $fileObj->filemime;
             $filepath = file_create_url($uri);
             $Userdetail = _get_user_data_by_uid($fileObj->uid);
             $Usersfullname = $Userdetail['realname'];
             $fileName = l($filename, $filepath, array('attributes' => array('class' => array(''),'id'=>'estimate-td-'.$fid))); 

            $rows[] = array(
              'data' => array(
                 array('data'=>'<div class="form-item form-type-checkbox"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>', 'class'=> array('col-md-1','text-center','hidden')),
                array('data'=>  $fileName, 'class' => array('col-md-4','text-left','drive-getting-folder')),
                array('data' => $Usersfullname,'class' => array('col-md-2','text-left')),
                array('data' => date('F d, Y', $fileObj->timestamp),'class' => array('col-md-2','text-left')),
                 array('data'=> _get_m6drive_project_filesize_by_fid($fid),'class'=>array('col-md-3','text-left')),
                //array('data' => project_drive_delete_trash_action_btn('file', $fid),'class' => array('col-md-2','text-left')),           
               ),  
              'class' => array('custom-odd','customsearchformydrive','project-drive-delete-'.$fid.'-'.$company->nid.'-row'),
            );
              //For dev str row file ==========
              $fileicondrive = _get_file_icon_m6drive($fileObj->filemime);
              if($fileicondrive) {
                 $img_url = $fileicondrive;
              }
              else {
                $img_url = image_style_url('user_image_large', $uri);
                $img_url = '<img src= '.$img_url.'>';
              }
             $divprojectstrfile .=' <div class="grid-view-folder-item col-md-2 padding-5 margin-bottom-10">
                          <div class="form-item form-type-checkbox hidden"><input type="checkbox" data="'.$filename.'" name="m6drive-project-'.$fid.'" value="'.$fid.'-file" class="form-checkbox m6drive-project-checkbox"></div>
                           <span class="orignal-img" style="display:none;">'.$filepath.'</span>
                           '.$img_url.' 
                           <div class="clearfix text-blue grid-item-anchor">'.$filename.'</div>
                    </div>';
             //End dev str row file==========
          }

      }

    }
    $return .= '<div class="list-view" style="'.$list_display.'">';
    $return .= theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No file or folders yet','attributes'=>array('class'=>array('table','m6connect-custom-m6drive-project-drive','table-striped','table-hover','table-bordered','text-center'))));
    $return .= '</div>';
    // End here fir table List view structure========  
    // start here for Grid  view structure========
     $return .= '<div class="grid-view" style="'.$grid_display.'">';
     $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Folders') . '</h3></div>';
     $return .= '<div class="grid-view-folders row margin-5">';
    // ====First handling only Folders.
     if(empty($divprojectstrfol)){
     $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No folders yet</strong></div>'; 
     }
     $return .= $divprojectstrfol; 
     $return .= '</div>'; //==end grid-view-folders
    // ====Then handling only Files.
     $return .= '<div class="grid-title clearfix"><h3 class="text-blue">' . t('Files') . '</h3></div>';
     $return .= '<div class="grid-view-files row margin-5">';
     if(empty($divprojectstrfile)){
     $return .= '<div class="col-md-9 col-sm-9 col-xs-12 empty message text-center"><strong>No files yet</strong></div>';
     }
     $return .= $divprojectstrfile; 
     $return .= '</div>'; //==end grid-view-files.
     $return .= '</div>'; //==end grid-view.
     // End here for Grid  view structure========
     $commands[] = ajax_command_html("#project-drive-trash-datacontainer-main-cust", $return);
  }
  //===== End here for folder query for archive and folder========
  else{
    $commands[] = ajax_command_html("#project-drive-trash-datacontainer-main-cust", m6drive_project_drive_trash_listing_content($ProjectNid, $FolderId));
  }
  return array('#type' => 'ajax', '#commands' => $commands); 
  
}
// End here for company project trash drive filter form//

//===== Start here for personal drive filter using Creted date===========//
function personal_m6drive_filter_using_date_form($form, &$form_state ,$folder = 0, $folderid =0){

 drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
 
 global $user, $company;

 $folderid = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folderid;
 $form_state['folder_id'] = $folderid; 

 $FolArr = array();

     if(!empty($folderid) && is_numeric($folderid)) {
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.parent_id', $folderid);
      $query->condition('m6d.trash_status',0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->addExpression("DATE_FORMAT(m6d.created_date, '%d-%m-%Y')", 'my_timestamp');
      $query->groupBy('my_timestamp');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.parent_id', $folderid);
      $query->addExpression("DATE_FORMAT(m6d.created_date, '%d-%m-%Y')", 'my_timestamp');
      $query->groupBy('my_timestamp');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);

      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.folder_id', $folderid);
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $querysub->addExpression("DATE_FORMAT(att.created_date, '%d-%m-%Y')", 'my_timestamp');
      $querysub->groupBy('my_timestamp');
      $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    else {
      $query = db_select('m6connect_m6drive', 'm6d');    
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.user_uid', $user->uid);
      $query->condition('m6d.company_nid', $company->nid);
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.parent_id',0,'=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->addExpression("DATE_FORMAT(m6d.created_date, '%d-%m-%Y')", 'my_timestamp');
      $query->groupBy('my_timestamp');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.root', 1);
      $query->addExpression("DATE_FORMAT(m6d.created_date, '%d-%m-%Y')", 'my_timestamp');
      $query->groupBy('my_timestamp');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);

      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.user_uid', $user->uid);
      $querysub->condition('att.company_nid', $company->nid);
      $querysub->condition('att.folder_id', 0,'=');
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $querysub->addExpression("DATE_FORMAT(att.created_date, '%d-%m-%Y')", 'my_timestamp');
      $querysub->groupBy('my_timestamp');
      $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    $FolArr = array();
    foreach($complteresult as $key=>$value){
           if (isset($value->foldername)){
             $FolArr[$folderid.'-folder_'.$value->my_timestamp] = date('M, d, Y', strtotime($value->created_date));
           }
           if ($value->file &&  $filevalue = file_load($value->file)) {
             $FolArr[$folderid.'-file_'.$value->my_timestamp] = date('M, d, Y', strtotime($value->created_date));
           }
    }
 //print "<pre>"; print_r($FolArr); die;

  $form['folder_name'] = array(
    '#type' => 'select',
    //'#empty_option' => '- Select Folders Or Files -',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'personal_m6drive_filter_date_callback',
      'wrapper' => 'm6-drive-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
      //'method' => 'replace',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function personal_m6drive_filter_date_callback($form, &$form_state){

  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $user, $company;  
  $commands = array();
  $FolderId = $form_state['folder_id'];
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($FolderId); die;
  $complteresult = array();

  if(!empty($filefolder['folder_name'])) {
       foreach($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('_', $multVal);
        $folderIdMul = $getStatus[0];
        $modifydate = $getStatus[1];
        $modifydatevalue =  date('Y-m-d', strtotime($modifydate));
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.user_uid', $user->uid);
                $query->condition('m6d.trash_status',0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                $query->condition('m6d.parent_id', $FolderId,'=');
                $query->condition('m6d.company_nid', $company->nid);
                $query->condition('m6d.services','m6drive','=');      
                $query->condition('m6d.created_date', '%' . db_like($modifydatevalue).'%', 'LIKE');
                $query->orderBy('m6d.created_date', 'DESC');
                $record_1 = $query->execute()->fetchAll();
                // Getting add to my drive content.
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.services','m6drive','=');
                $query->condition('m6d.trash_status', 0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                $query->condition('m6ad.user_uid', $user->uid, '=');
                $query->condition('m6ad.parent_id', $FolderId,'=');
                $query->condition('m6ad.created_date', '%' . db_like($modifydatevalue).'%', 'LIKE');
                $query->orderBy('m6d.created_date', 'DESC');
                $record_2 = $query->execute()->fetchAll();
                $record = array_merge($record_1, $record_2);

                $querysub = db_select('m6connect_m6drive_attachment','att');    
                $querysub->fields('att',array('file','folder_id','company_nid','user_uid','created_date','trash_status'));
                $querysub->condition('att.user_uid', $user->uid);
                $querysub->condition('att.trash_status', 0,'=');
                $querysub->condition('att.archive_status', 0,'=');
                $querysub->condition('att.folder_id', $FolderId,'=');
                $querysub->condition('att.company_nid', $company->nid);
                $querysub->condition('att.created_date', '%' . db_like($modifydatevalue).'%', 'LIKE');
                $querysub->orderBy('att.created_date', 'DESC');
                $recordsub = $querysub->execute()->fetchAll();
                $complteresults = array_merge($record, $recordsub);
                foreach ($complteresults as $key => $value) {
                  $complteresult[] =  $value;
                }
                //print "<pre>"; print_r($complteresult); die;
    }
      $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, 0, $complteresult, TRUE));
    
   }
   else {
      $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, $FolderId));
   }
  return array('#type' => 'ajax', '#commands' => $commands); 

}
//===== Start here for personal drive filter using owner name===========//
function personal_m6drive_filter_using_owner_form($form, &$form_state ,$folder = 0, $folderid =0){

 drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
 
 global $user, $company;

 $FolArr = array();

  $folderid = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folderid;
  $form_state['folder_id'] = $folderid; 

     if(!empty($folderid) && is_numeric($folderid)) {
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.parent_id', $folderid);
      $query->condition('m6d.trash_status',0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->groupBy('m6d.user_uid');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.parent_id', $folderid);
      $query->groupBy('m6ad.user_uid');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);

      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.folder_id', $folderid);
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $querysub->groupBy('att.user_uid');
      $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    else {
      $query = db_select('m6connect_m6drive', 'm6d');    
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.user_uid', $user->uid);
      $query->condition('m6d.company_nid', $company->nid);
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.parent_id',0,'=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->groupBy('m6d.user_uid');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
      $record_1 = $query->execute()->fetchAll();

      // Getting add to my drive content.
      $query = db_select('m6connect_m6drive', 'm6d');
      $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
      $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
      $query->condition('m6d.services','m6drive','=');
      $query->condition('m6d.trash_status', 0,'=');
      $query->condition('m6d.archive_status', 0,'=');
      $query->condition('m6ad.user_uid', $user->uid, '=');
      $query->condition('m6ad.root', 1);
      $query->groupBy('m6d.user_uid');
      $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created Desc
      $record_2 = $query->execute()->fetchAll();
      $record = array_merge($record_1, $record_2);
      $querysub = db_select('m6connect_m6drive_attachment','att');    
      $querysub->fields('att',array('file','user_uid','created_date','trash_status'));
      $querysub->condition('att.user_uid', $user->uid);
      $querysub->condition('att.company_nid', $company->nid);
      $querysub->condition('att.folder_id', 0,'=');
      $querysub->condition('att.trash_status', 0,'=');
      $querysub->condition('att.archive_status', 0,'=');
      $querysub->groupBy('att.user_uid');
      $query->orderBy('att.created_date', 'DESC');//ORDER BY created Desc
      $recordsub = $querysub->execute()->fetchAll();
      $complteresult = array_merge($record, $recordsub);
    }
    $FolArr = array();
    $UserFnameLname = '';
    foreach($complteresult as $key=>$value){
           if (isset($value->foldername)){
             $UserFnameLname =_get_user_data_by_uid($value->user_uid);
             $FolArr[$folder.'-folder-'.$value->user_uid] = $UserFnameLname['realname'];
           }
           if ($value->file &&  $filevalue = file_load($value->file)) {
             $UserFnameLname =_get_user_data_by_uid($value->user_uid);
             $FolArr[$folder.'-file-'.$value->user_uid] =  $UserFnameLname['realname'];
           }
    }
 //print "<pre>"; print_r($FolArr); die;

  $form['folder_name'] = array(
    '#type' => 'select',
    //'#empty_option' => '- Select Folders Or Files -',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'personal_m6drive_filter_owner_callback',
      'wrapper' => 'm6-drive-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
      //'method' => 'replace',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function personal_m6drive_filter_owner_callback($form, &$form_state){

  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $user, $company;  
  $commands = array();
  $FolderId = $form_state['folder_id'];

  //print "<pre>"; print_r($FolderId); die;
  $filefolder = $form_state['values'];
  $complteresult = array();
  if(!empty($filefolder['folder_name'])) {
    foreach($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
        $UserUid = $getStatus[2];
        $folderIdMul = $getStatus[0];
        //print "<pre>"; print_r($getStatus); die;
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.user_uid', $UserUid);
                //$query->condition('m6d.user_uid', $user->uid);
                $query->condition('m6d.trash_status',0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                $query->condition('m6d.parent_id', $FolderId,'=');
                $query->condition('m6d.company_nid', $company->nid);
                $query->condition('m6d.services','m6drive','=');
                $query->orderBy('m6d.created_date', 'DESC');
                $record_1 = $query->execute()->fetchAll();
                // Getting add to my drive content.
                $query = db_select('m6connect_m6drive', 'm6d');
                $query->join('m6connect_m6drive_addto_mydrive', 'm6ad', 'm6ad.folder_id = m6d.Id');
                $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date','trash_status'));
                $query->condition('m6d.services','m6drive','=');
                $query->condition('m6d.trash_status', 0,'=');
                $query->condition('m6d.archive_status', 0,'=');
                //$query->condition('m6ad.user_uid', $user->uid, '=');
                $query->condition('m6d.user_uid', $UserUid, '=');
                $query->condition('m6ad.parent_id', $FolderId,'=');
                $query->orderBy('m6d.created_date', 'DESC');
                $record_2 = $query->execute()->fetchAll();

                $record = array_merge($record_1, $record_2);

                $querysub = db_select('m6connect_m6drive_attachment','att');    
                $querysub->fields('att',array('file','folder_id','company_nid','user_uid','created_date','trash_status'));
                $querysub->condition('att.user_uid', $UserUid);
                //$querysub->condition('att.user_uid', $user->uid);
                $querysub->condition('att.trash_status', 0,'=');
                $querysub->condition('att.archive_status', 0,'=');
                $querysub->condition('att.folder_id', $FolderId,'=');
                $querysub->condition('att.company_nid', $company->nid);
                $querysub->orderBy('att.created_date', 'DESC');
                $recordsub = $querysub->execute()->fetchAll();
                $complteresults = array_merge($record, $recordsub);
                foreach ($complteresults as $key => $value) {
                  $complteresult[] =  $value;
                }
    }
      //print "<pre>"; print_r($complteresult); die;
      $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, 0, $complteresult, TRUE));
    
   }
   else {
      $commands[] = ajax_command_html("#m6-drive-datacontainer-main-cust", get_drive_listing_table_data(0, $FolderId));
   }
  return array('#type' => 'ajax', '#commands' => $commands); 

}

//=== start here For personal Shared drive Filter owner chosen search form====
function personal_share_m6drive_filter_owner_form($form, &$form_state ,$folder = 0, $folderid =0){

  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  global $user, $company;

  $folderid = (isset($form_state['folder_id'])) ? $form_state['folder_id']: $folderid;
  $form_state['folder_id'] = $folderid; 

  $foldericon = '';
  $companyusersdetail = '';
  $companyusersfullname = '';
  $FolArr = array();
  

  if(!empty($folderid) && is_numeric($folderid)){

    $sharedData =  get_m6drive_share_date_name($user->uid, $folderid);
    $query = db_select('m6connect_m6drive', 'm6d');    
    $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
    $query->condition('m6d.parent_id', $folderid);
    $query->orderBy('m6d.created_date', 'DESC');//ORDER BY created
    $record = $query->execute()->fetchAll();
    $querysub = db_select('m6connect_m6drive_attachment','att');    
    $querysub->fields('att',array('user_uid','file','created_date'));
    $querysub->condition('att.folder_id', $folderid);
    $querysub->orderBy('att.created_date', 'DESC');//ORDER BY created
    $recordsub = $querysub->execute()->fetchAll();
    $complteresult = array_merge($record, $recordsub);


    foreach($complteresult  as $values) {
      $UserFnameLname =_get_user_data_by_uid($values->user_uid);
      if($values->foldername && _check_folder_eligibility_share($values->Id)){
         $FolArr[$folderid.'-folder-'.$values->user_uid] = $UserFnameLname['realname'];
        
      }
      if($values->file && _check_file_eligibility_share($values->file) && $filevalue = file_load($values->file)){
        $fid =  $values->file;
        //$filevalue = file_load($fid);
        $uri = $filevalue->uri;
        $filename =  $filevalue->filename;
        $filetype = $filevalue->type;
        $filepath = file_create_url($uri);
        $FolArr[$folderid.'-file-'.$values->user_uid] = $UserFnameLname['realname'];
      }    
    
   }
 
  }else{ /*========== For root folder shared drive on m6drive shared table==========*/
  $query = db_select('m6connect_m6drive_shared','srd');
  $query->fields('srd',array('id','folder_id','fid','share_by_uid','share_to_uid','shared_date', 'permissions'));
  $query->condition('srd.share_to_uid', $user->uid);
  $query->condition('srd.services', 'm6drive');
  $query->condition('srd.delete_status', 0, '=');
  $query->condition('srd.root', 1, '=');
  $query->groupBy('srd.share_by_uid');
  $query->orderBy('srd.shared_date', 'DESC');//ORDER BY created
  $record = $query->execute()->fetchAll();
  // Creating table data.
  foreach($record as $result){

    $companyusersdetail = _get_user_data_by_uid($result->share_by_uid);
    if(isset($result->folder_id) && empty($result->fid)){

       $getfoldername = get_folder_name_by_folderid($result->folder_id);
       $FolArr[$result->folder_id.'-folder-'.$result->share_by_uid] =  $companyusersdetail['realname'];
    }
    if(isset($result->fid) && empty($result->folder_id) && $filevalue = file_load($result->fid)){
      $fid =  $result->fid;
      $uri = $filevalue->uri;
      $filename =  $filevalue->filename;
      $FolArr[$result->folder_id.'-file-'.$result->share_by_uid] =  $companyusersdetail['realname'];
    }  
    
   }
   // End table structure for root list
  //========== For root folder shared drive on m6drive shared table==========//
   
  } 
  //print "<pre>"; print_r($FolArr); die;
  $form['folder_name'] = array(
    '#type' => 'select',
    '#options' => $FolArr,
    '#chosen' => TRUE,
    '#multiple' => TRUE,
    '#attributes' => array('class' => array('folder_name_filter_select')),
    '#ajax' => array(
      'callback'=> 'personal_share_m6drive_filter_owner_callback',
      'wrapper' => 'm6drive-share-datacontainer-main-cust',
      'event' => 'change',
      'effect' => 'fade',
    ),
    '#prefix' => '<div class="clearfix form-item">',
    '#suffix' => '</div>',
  );

  return $form;
}
function personal_share_m6drive_filter_owner_callback($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'm6connect_m6_drive') . '/js/m6connect_m6_drive.js');
  drupal_add_js(drupal_get_path('theme', 'm6connect') . '/js/jquery.dataTables.min.js');
  drupal_add_css(drupal_get_path('theme', 'm6connect') . '/css/jquery.dataTables.min.css');

  module_load_include('inc', 'm6connect_m6_drive', '/include/drive');
  global $user, $company; 

  $FolderId = $form_state['folder_id'];
  $complteresults = array();
  $commands = array();
  $filefolder = $form_state['values'];
  //print "<pre>"; print_r($FolderId); die;

    if(!empty($filefolder['folder_name'])) {
      foreach ($filefolder['folder_name'] as $multKey => $multVal) { 
        $getStatus = explode('-', $multVal);
            $folderIdMul = $getStatus[0];
            $useruid = $getStatus[2];

            if(!empty($FolderId) && is_numeric($FolderId)){
              $query = db_select('m6connect_m6drive', 'm6d');    
              $query->fields('m6d',array('Id','parent_id','company_nid','user_uid','foldername','created_date'));
              $query->condition('m6d.parent_id', $FolderId);
              $query->orderBy('m6d.created_date', 'DESC');
              $record = $query->execute()->fetchAll();
              $querysub = db_select('m6connect_m6drive_attachment','att');    
              $querysub->fields('att',array('user_uid','file','created_date'));
              $querysub->condition('att.folder_id', $FolderId);
              $querysub->orderBy('att.created_date', 'DESC');
              $recordsub = $querysub->execute()->fetchAll();
              $complteresult = array_merge($record, $recordsub);
              foreach($complteresult  as $values) { 
                 $complteresults[] = $values;
              }    
              
             }
 
             else{ /*========== For root folder shared drive on m6drive shared table==========*/

              $query = db_select('m6connect_m6drive_shared','srd');
              $query->fields('srd',array('id','folder_id','fid','share_by_uid','share_to_uid','shared_date', 'permissions'));
              $query->condition('srd.share_to_uid', $user->uid);
              $query->condition('srd.share_by_uid', $useruid);
              $query->condition('srd.services', 'm6drive');
              $query->condition('srd.delete_status', 0, '=');
              $query->condition('srd.root', 1, '=');
              $query->orderBy('srd.shared_date', 'DESC');
              $record = $query->execute()->fetchAll();
              // Creating table data.
              foreach($record as $result){
                 $complteresults[] = $result;
              }
            } 
           
            print "<pre>"; print_r($complteresult); die;
      }
     $commands[] = ajax_command_html("#m6drive-share-datacontainer-main-cust", m6drive_share_withme_content(0, 0, $complteresults, TRUE)); 
   }
   else {
       $commands[] = ajax_command_html("#m6drive-share-datacontainer-main-cust", m6drive_share_withme_content(0, $FolderId)); 
   }
  
  return array('#type' => 'ajax', '#commands' => $commands); 


}
