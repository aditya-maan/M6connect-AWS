<?php
/*
* Hook implementation for m6connect_misc
*/


/*
* Implemenatation of hook_menu
*/

function m6connect_misc_menu() {
  $items['m6connect/%ctools_js/add/company'] = array(
    'page callback' => 'm6connect_node_add_modal_callback',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
	
	
	$items['admin/regions'] = array(
    'title' => t('Import regions'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('import_regions_form'),
    'access callback' => TRUE,
    'file' => 'includes/m6connect_misc.inc',
  );
	
	
	$items['admin/UNSPSC'] = array(
    'title' => t('Import UNSPSC'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('import_unspsc_form'),
    'access callback' => TRUE,
    'file' => 'includes/m6connect_misc.inc',
  );
  
	
		$items['admin/naics'] = array(
    'title' => t('Import naics'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('import_naics_form'),
    'access callback' => TRUE,
    'file' => 'includes/m6connect_misc.inc',
  );
  
	
  
  return $items;
}


/**
 * mymodule node add modal callback
 */
function m6connect_node_add_modal_callback($js = FALSE) {
  global $user;
  // If people aren't using javascript, then I just boot em. sorry. its 2011.
  if (!$js) return "Javascript required";
  
  // Include your ctools crap here
  ctools_include('node.pages', 'node', '');
  ctools_include('modal');
  ctools_include('ajax');

  // Create a blank node object here. You can also set values for your custom fields here as well.
  $node = (object) array(
    'uid' => $user->uid, 
    'name' => (isset($user->name) ? $user->name : ''), 
    'type' => 'organization',
    'language' => LANGUAGE_NONE,
    );

  $form_state = array(
    'title' => t('Add new organization'),
    'ajax' => TRUE,
  );

  $form_state['build_info']['args'] = array($node);
  // change this to your type node form
  $output = ctools_modal_form_wrapper('organization_node_form', $form_state);

  // This means the form has been exectued
  if (!empty($form_state['executed'])) {
    $output = array();
    // Close the modal
    $output[] = ctools_modal_command_dismiss();
		$output[] = ctools_ajax_command_redirect('user/register');
    // I use this method a lot on pages that have views, so what I do is get the latest view content
    // with the latest node and replace the current view. magic!
  }
	
  
  print ajax_render($output);  
  exit;
}


/*
* Implemenatation of hook_form_alter
*/

function m6connect_misc_form_alter(&$form, &$form_state, $form_id) {
	global $user;
    //print $form_id;
	switch($form_id) {
		case "user_register_form":
		
		  // Load the modal library and add the modal javascript.
			//ctools_include('modal');
			//ctools_modal_add_js();
		//	 $form['#attached']['js'] = array(
			//  drupal_get_path('module', 'm6connect_misc') . '/m6connect.js',
			//);
		 
			//$add_new_company = '<div class="add-new-link">' . l(t("Quick add your company"), 'm6connect/nojs/add/company', array('attributes' => array('class' =>  'ctools-use-modal'))) . '</div>';
			//$add_new_company = '<div class="add-new-link">Quick add your company</div>';
			//$form['og_user_node']['#suffix'] = $add_new_company;
			 //$form['add_company'] = array(
			//	'#type' => 'textfield',
			//	'#title' => 'Company name',
			//);
            
			//$form['#submit'][] = 'user_register_custom_submit'; 
			//pre($form,1);
			$form['og_group_ref']['und'][0]['default']['#multiple'] = 0;
			$form['og_group_ref']['und'][0]['default']['#title'] = 'Company';
			
		 break;
    case "user_profile_form":
			unset($form['account']['current_pass']['#description']);
			unset($form['account']['mail']['#description']);
			unset($form['account']['pass']['#description']);
			//print_r($form);
         break; 
    
    case "organization_node_form":
         //$form['field_legal_name']['#attributes']['title'] = $form['field_legal_name'][LANGUAGE_NONE][0]['#description'];
         /* $form['field_8_a_certificate']['#attributes']['title'] = $form['field_8_a_certificate'][LANGUAGE_NONE]['#description'];
         $form['field_8_a_certificate'][LANGUAGE_NONE]['#description'] = '';
         $form['field_8_a_certificate'][LANGUAGE_NONE]['#options']['_none'] = t('Not Required');
         
         $form['field_small_disadvan_certificate']['#attributes']['title'] = $form['field_small_disadvan_certificate'][LANGUAGE_NONE]['#description'];
         $form['field_small_disadvan_certificate'][LANGUAGE_NONE]['#description'] = '';
         $form['field_small_disadvan_certificate'][LANGUAGE_NONE]['#options']['_none'] = t('Not Required');
         
         $form['field_hubzone_certificate']['#attributes']['title'] = $form['field_hubzone_certificate'][LANGUAGE_NONE]['#description'];
         $form['field_hubzone_certificate'][LANGUAGE_NONE]['#description'] = '';
         $form['field_hubzone_certificate'][LANGUAGE_NONE]['#options']['_none'] = t('Not Required');
         
         $form['field_8_a_certificate_file']['#states']['visible'][':input[name=field_8_a_certificate]'] = array('value' => 1); */
		 
		 //pre($form,1);
		 $form['#attached']['js'] = array(
           drupal_get_path('module', 'm6connect_misc') . '/m6connect.js',
         );
		/* 
		 $tmpform = array();
         $tmpform_state = array();
		 $tmpnode = new stdClass();
         $tmpnode->type = 'credentials';
		 
		 field_attach_form('node', $tmpnode, $tmpform, $tmpform_state);
		 $form['credential_contents'] = array(
            '#type' => 'fieldset',
            '#title' => t('Credentials'),
            //'#description' => t('Credential.'),
         );
         $form['credential_contents'][] = $tmpform['field_accredited_by'];
		 $form['credential_contents'][] = $tmpform['field_cred_start_date'];
		 $form['credential_contents'][] = $tmpform['field_credential_comments'];
		 $form['credential_contents'][] = $tmpform['field_credential_doc'];
		 
         $form_state['field']['field_accredited_by'] = $tmpform_state['field']['field_accredited_by'];
		 $form_state['field']['field_cred_start_date'] = $tmpform_state['field']['field_cred_start_date'];
		 $form_state['field']['field_credential_comments'] = $tmpform_state['field']['field_credential_comments'];
		 $form_state['field']['field_credential_doc'] = $tmpform_state['field']['field_credential_doc']; */
		
		 //pre($form_state,1);
		 
		 //$form['field_diversity_credentials']['und']['#after_build'][] = 'custom_divercity_afterbuild';
		/* $form['field_diversity_credentials']['#ajax'] = array(
           'callback' => 'subform_example_simple_form_select_callback',
		   //'event' => 'check',
           'wrapper' => 'customwrap',
         );	*/
		 /*
		 $form['credential_contents2'] = array(
            '#type' => 'fieldset',
            '#title' => t('Credentials'),
            //'#description' => t('Credential.'),
         );*/
		 $doptions = $form['field_diversity_credentials']['und']['#options'];
		 $form['custom_diversity']= array(
		   '#type'=> 'checkboxes',
		   '#title'=> 'Diversity Credentials',
		   '#options' => $doptions,
		   '#ajax' => array(
             'callback' => 'subform_example_simple_form_select_callback',
		     //'event' => 'check',
             'wrapper' => 'customwrap',
		   ),
         );
		 
		 foreach( $doptions as $k => $val) {
		   $form['custwrap'.$k] = array(
		     '#type' => 'container',
		     '#prefix' => '<div id="customwrap'.$k.'">',
		     '#suffix' => '</div>',
		   );
		 }
		 
		 $form['#submit'][] = 'custom_company_form_submit';
		 //$form['actions']['submit']['#submit'][] ='custom_company_form_submit';
		  
         break;
	}
}

/*
function m6connect_misc_preprocess_link(&$vars) {
  //print_r($vars);
    
 // if ($vars['path'] == 'user') {
  if ((arg(0) == 'user' && !arg(1)) || (arg(0) == 'user' && is_numeric(arg(1)))){      
    //$num_comments = MYMODULE_num_comments();
    $vars['text'] = m6connect_misc_user_menu_title();
  } 
}

function m6connect_misc_menu_alter(&$items) {
  //drupal_Set_message(print_r(arg(), 1)) ;
  
   // die();
  global $user;
  //drupal_Set_message(print_r($user, 1));
  if (user_is_logged_in()) {  
    //$items['user']['title callback'] = $items['user/%user']['title callback'] = 'm6connect_misc_user_menu_title';
  }
}*/



function m6connect_misc_user_menu_title() {
 
  $account = user_load(arg(1));
  $output = '';
  if($account) {
  	
	
	if($account->field_first_name) {
		$output .= $account->field_first_name[LANGUAGE_NONE][0]['value'];
	}
	if($account->field_middle_name) {
		$output .= ' ' . $account->field_middle_name[LANGUAGE_NONE][0]['value'];
	}
	if($account->field_last_name) {
		$output .= ' ' . $account->field_last_name[LANGUAGE_NONE][0]['value'];
	}
  }  
	if($output == '') {
		//$output = user_menu_title($account);		
	}
  
  return $output;
} 

function m6connect_misc_user_insert(&$edit, $account, $category) {
    
}

function user_register_custom_submit($form, &$form_state) {
   
  if ($form_state['values']['add_company'] && $form_state['values']['add_company'] != '') {
    $node = new stdClass();
    $node->type = 'organization';
    $node->title = $form_state['values']['add_company'];
    $node->uid = $form_state['values']['uid'];
    $node->name = $form_state['complete form']['#user']->name;
    $node->comment = 0;
    $node->promote = 0;
 
  //Organic groups fields
    $node->og_description = 'A group managed by ' . $form_state['complete form']['#user']->name;
    $node->og_register = 1;
    $node->og_directory = 0;
    $node->og_private = 0;
    $node->og_selective = 3;
    $node->language = LANGUAGE_NONE;
 
  //create the node
    $node = node_submit($node);
    node_save($node);
    
    $account = user_load($form_state['values']['uid']);
     // Add the user to the group
    og_group('node', $node->nid, array(
      "entity type"       => "user",
      "entity"        => $account,
      "membership type"   => OG_MEMBERSHIP_TYPE_DEFAULT,
    ));
    // Changes the users role in the group (1 = non-member, 2 = member, 3 = administrator member)
    og_role_grant('node', $node->nid, $account->uid, 3);

  
  }
  
}

/**
* Implements hook_block_info().
*/
function m6connect_misc_block_info() {
  $blocks = array();

  $blocks['user_info_link_block'] = array(
    'info' => t('User Info Block'),
  );

  return $blocks;
}

/**
* Implements hook_block_view().
*/
function m6connect_misc_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'user_info_link_block':
      $block['subject'] = '';
      $block['content'] = _user_info_link_block_content();
      break;
  }

  return $block;
}

function _user_info_link_block_content() {
  $output = '';
  global $user, $base_url;
  
  $user_info = user_load($user->uid);
  //print_r($user_info);
  if ($user_info->og_group_ref && isset($user_info->og_group_ref['und'])) {
    $user_gid = $user_info->og_group_ref['und'][0]['target_id'];
    $user_roles = og_get_user_roles('node', $user_gid, $user->uid);
  }else {
    $user_roles = array();
  }
  
  
  //print_R($user_roles);
  if(array_key_exists(5, $user_roles)) {
    $group_edit_url = $base_url.'/node/'.$user_gid;
    //$alias = drupal_get_path_alias('node/'.$user_gid);
    $alias = $base_url . '/node/'.$user_gid . '/edit';
  }
  else {
    $group_edit_url = '';
    $alias = '';
  }
  $upgradelink = $base_url.'/node/36';
  $taskslinks =  $base_url.'/node/37'; 	
  //$output .= l('<i class="fa fa-fw fa-flag"></i>', '', array('html' => TRUE,'attributes' => array('class' => 'app-dashboard')));
  //$output .= l('<i class="fa fa-fw fa-tag"></i>', '', array('html' => TRUE,'attributes' => array('class' => 'app-contracts')));
  $output .= l('<i class="fa fa-fw fa-upload"></i>', $upgradelink, array('html' => TRUE,'attributes' => array('class' => 'app-upgrade')));
  $output .= l('<i class="fa fa-fw fa-tasks"></i>', $taskslinks, array('html' => TRUE,'attributes' => array('class' => 'app-tasks')));
  $output .= l('<i class="fa fa-fw fa-building"></i>', $alias, array('html' => TRUE,'attributes' => array('class' => 'app-companies')));
	
	$account = user_load($user->uid);
	//print_r($account); die;
	if($account->field_user_profile_photo) {
		$config = array(
			"style_name" => "user_pic_32x32",
			"path" =>$account->field_user_profile_photo[LANGUAGE_NONE][0]['uri'],
			"height" => NULL,
			"width" => NULL,
		 );
		$user_picture = theme_image_style($config);
	}
	else {
		
        $variables = array(
         'path' => $base_url . '/sites/default/files/default_profile.jpg', 
         'alt' => '',
         'width' => '32',
         'height' => '32',      
        );
        $user_picture= theme('image', $variables);
	}
	
  $output .= l($user_picture, $base_url .'/user/' .$user->uid .'/edit', array('html' => TRUE,'attributes' => array('class' => 'app-user-edit')));
  $output .= l('<i class="fa fa-fw fa-sign-out"></i>', 'user/logout', array('html' => TRUE,'attributes' => array('class' => 'app-user-logout')));
  
  return $output;
}

function m6connect_misc_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  global $user;
  if (!array_key_exists(3, $user->roles) && $user->uid != 0 && (arg(0) == 'node' && is_numeric(arg(1)))) {
		$node = menu_get_object();
		if($node->type == 'organization') {
			//$data['tabs'][0]['output'][0]['#link']['title'] = t('Overview');
			$data['tabs'][0]['output'][1]['#link']['title'] = t('Company Details');			
		}
  }  
}

function m6connect_misc_init() {
  global $user;
  $user_gid = 0;
  
  if(array_key_exists(2, $user->roles) && !array_key_exists(3, $user->roles)){
  
    $user_info = user_load($user->uid);
    cache_clear_all();
  
    if ($user_info->og_group_ref && isset($user_info->og_group_ref['und'])) {
      $user_gid = $user_info->og_group_ref['und'][0]['target_id'];      
    }
    if ($user_gid) {
      if ((arg(0) == 'node' && arg(1) == "add" && arg(2) == "organization")) {        
        drupal_goto('node/'.$user_gid . '/edit');
      }
			elseif (arg(0) == "user" && arg(1) == "logout") {
      }
			else if(((arg(0) == 'user' && is_numeric(arg(1)) && arg(2) == 'edit' ) || (arg(0) == 'file' && arg(1) == 'ajax' ) || (arg(0) == 'js' && arg(1) == 'shs'  && arg(2) == 'json') || in_array("ajax", arg()))) {
				
			}
			else if(arg(0) == "node" && is_numeric(arg(1))) {
				$node = menu_get_object();
				if($node->type == 'project' ) {
					
				}
				else if(arg(0) == "node" && is_numeric(arg(1)) && arg(2) == 'edit') {
					
				}
				else {
					drupal_goto('node/'.$user_gid . '/edit');
				}
			}
			else {
				drupal_goto('node/'.$user_gid . '/edit');
			}
    }
		else {
			if(arg(0) == "node" && is_numeric(arg(1))) {
				$node = menu_get_object();
				if($node->type == 'project' ) {					
				}
				else if((arg(0) == 'node' && arg(1) == "add" && arg(2) == "organization")) {
					
				}
				else {
					drupal_goto('node/add/organization');
				}
			}
			else if(((arg(0) == 'node' && arg(1) == "add" && arg(2) == "organization") || (arg(0) == "user" && arg(1) == "logout") || (arg(0) == 'file' && arg(1) == 'ajax' )  || (arg(0) == 'js' && arg(1) == 'shs'  && arg(2) == 'json') || in_array("ajax", arg()))) {
				
			}
			else {
				drupal_goto('node/add/organization');
			}
		}
  }
}

function pre($output, $stop = false) {
  print '<pre>';
  print_r($output);
  if($stop)
  die();
  print '</pre>';	
}
	
function m6connect_misc_node_insert($node) {
  if($node->type == 'organization') {
	$nuid = $node->uid;  
    $role = user_role_load_by_name("business administrator");
    user_multiple_role_edit(array($nuid), 'add_role', $role->rid);  	
  }
}

function m6connect_misc_node_update($node) { //pre($node,1);
  if($node->type == 'organization') { //pre($node,1);
	  
  	  	
  }
}

function custom_divercity_afterbuild($form, $form_state){
  $form['field_diversity_credentials']['#ajax'] = array(
           'callback' => 'subform_example_simple_form_select_callback',
		   //'event' => 'check',
           'wrapper' => 'customwrap',
         );	
  return $form;		 
}
/*
function subform_example_simple_form_select_callback($form, $form_state){
  $commands[] = ajax_command_html('#customwrap' , 'hello test');
  return array('#type' => 'ajax', '#commands' => $commands);
}
*/
/*function subform_example_simple_form_select_callback($form, &$form_state){
  $commands = array();
  $val = $form_state['values'];	
  //$commands[] = ajax_command_html('#customwrap22' , 'hello');
  //$commands[] = ajax_command_replace('#customwrap22',render($form['field_diversity_credentials']));
  $commands[] = ajax_command_replace('#customwrap22',$form_state['values']['custom_diversity']);
  //$new_form_array = drupal_rebuild_form('my_ajax_form_id', $new_state);
  //$new_form = drupal_render($new_form_array);
  
  return array('#type' => 'ajax', '#commands' => $commands);
} */

function subform_example_simple_form_select_callback(&$form, $form_state) {
  $values = $form_state['values'];
  //$cust_uname = $values['custom_diversity'];
  $fieldname = $form_state['triggering_element']['#name'];//pre($fieldname);
  $did = $form_state['triggering_element']['#value'];
  //pre($did);
  $node = node_load($did);
  $fields = field_get_items('node', $node, 'field_form_fields'); //pre($fields);
  //$info2 = field_info_instance('node', 'field_accredited_by', 'credentials'); pre($info2);
  $farr =array();
  foreach($fields as $fvar => $fval) { 
    $farr[] = $fval['value'];
  }
  $output = '';
  //$output .= 'Name: <input type="textbox" name="textbx'.$did.'">';
  $output .='<div class="org-diversity-wrapper">';
  
  foreach($fields as $var => $vl) {
	$val = $vl['value'];  
	if($val != 'field_cred_start_date' && $val != 'field_credential_end_date') {  
	  $output .='<div class="form-wrapper">';  
	  $output .= '<div class="form-item">';  
	}
	$finfo = field_info_field($val); 
	$finfo2 = field_info_instance('node', $val, 'credentials'); 
	$label = $finfo2['label']; 
	
    if($finfo['type'] == 'list_text') {
	  $output .= '<label>'.$label.':</label>';	
      $output .= '<select name="'.$val.$did.'">';
      foreach($finfo['settings']['allowed_values'] as $k => $v){
	    $output .= '<option value="'.$k.'">'.$v.'</option>';  
      }
	  $output .='</select>';
    }
	if($finfo['type'] == 'datetime' || $finfo['type'] == 'date' || $finfo['type'] == 'datestamp') {
	  if($val == 'field_cred_start_date') {	
	  $output .='<div class="form-wrapper">';  
	  $output .= '<div class="form-item">';	
	  $output .= '<label>'.$label.':</label>';	
	  $output .='<script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>
                   <script>   
                    jQuery(function() {
                      jQuery( "#calendar" ).datepicker();   
                    }); 
                 </script>';	
	  $output .= '<input type="date" id="calendar" name="'.$val.$did.'">';
	  if(in_array('field_credential_end_date',$farr)) {
		$output .= '<div><label>To:</label></div>';  
	    $output .= '<input type="date" id="calendar" name="field_credential_end_date'.$did.'">';  	  
	  }
	  $output .= '</div>'; //form-item
	  $output .= '</div>'; //form-wrapper
	  }
	}
	if($finfo['type'] == 'text_long') {
	  $output .= '<label>'.$label.':</label>';
	  $output .= '<textarea name="'.$val.$did.'"></textarea>'; 	
	}
	if($finfo['type'] == 'file') {
	  $output .= '<label>'.$label.':</label>';
	  $output .= '<input type="file" name="'.$val.$did.'" accept=".txt,.doc,.pdf,.docx">'; 	
	}
	if($finfo['type'] == 'text') {
	  $output .= '<label>'.$label.':</label>';
	  $output .= '<input type="text" name="'.$val.$did.'">'; 	
	}
	if($val != 'field_cred_start_date' && $val != 'field_credential_end_date') { 
	  $output .= '</div>'; //form-item
	  $output .= '</div>'; //form-wrapper
	}
  }
  
  $output .= '</div>'; //org-diversity-wrapper 
  
  $commands = array();
  $commands[] = ajax_command_html('#customwrap'.$did, $output);
  /*$tmpform = array();
  $tmpform['testt'.$did] = array(
    '#type' => 'textfield',
	'#title' => 'TestT'
  );
  
  $tmpform['ndocs'.$did] = array(
        '#type' => 'file',
        '#name' => 'files[]',
        '#title' => t('Add files'),
        '#description' => t('Use CTRL + Click to choose multiple images! '),
        //'#attributes' => array('multiple' => 'multiple'),
    );
  $tmpform['npdf'.$did] = array(
        '#type' => 'managed_file',
        '#title' => t('Add File'),
		'#descripion' => t("Only pdf format Files are allowed."),
	    //'#upload_location'    => "public://pdf/",
  	    "#upload_validators"  => array("file_validate_extensions" => array("pdf, txt, doc, docx")),
    ); */
  
  //$commands[] = ajax_command_replace('#customwrap'.$did,render($tmpform));
  //$commands[] = ajax_command_html('#customwrap'.$did,render($tmpform));
  
  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
  
  return $tmpform;
  
}


function custom_company_form_submit($form, $form_state){ /* pre($form);pre($form_state['input'],1);
  //pre($form); 
  //pre($form_state,1);
  
  $diversities = $form_state['input']['custom_diversity']; //pre($diversities);
  $diversities = array_filter($diversities); //pre($diversities,1);
  $nid = $form_state['values']['nid'];
  
  foreach($diversities as $k=> $v){
	  
	$node = node_load($v);
    $fields = field_get_items('node', $node, 'field_form_fields');  
	
	$acredby = $form_state['input']['field_accredited_by'.$k];  
    $node = new stdClass();  
    $node->type = 'credentials';
    $node->language = LANGUAGE_NONE;        
    //$node->status = $form_state['values']['published'];
	$tstamp = strtotime(date());
    $node->title =  'Company diversity credential'.$tstamp;
    $node->field_accredited_by['und'][0]['value'] = $acredby;
    $node->field_cred_for_company['und'][0]['target_id'] = $nid;
    $node->field_cred_for_diversity['und'][0]['target_id'] = $k;
  
    node_save($node); 
  }
 */   	
}

function TTTcustom_company_form_submit($form, $form_state){ //pre($form_state['input'],1);
  //pre($form); 
  //pre($form_state,1);
  /*
  $diversities = $form_state['input']['custom_diversity']; //pre($diversities);
  $diversities = array_filter($diversities); //pre($diversities,1);
  $nid = $form_state['values']['nid'];
  
  foreach($diversities as $k=> $v){
	  
	$node = node_load($did);
    $fields = field_get_items('node', $node, 'field_form_fields');  
	
	$acredby = $form_state['input']['field_accredited_by'.$k];  
    $node = new stdClass();  
    $node->type = 'credentials';
    $node->language = LANGUAGE_NONE;        
    //$node->status = $form_state['values']['published'];
    $node->title =  'test1';
    $node->field_accredited_by['und'][0]['value'] = $acredby;
  
    $node->field_cred_for_company['und'][0]['target_id'] = $nid;
    $node->field_cred_for_diversity['und'][0]['target_id'] = $k;
  
    node_save($node); 
  }
  */   	
}