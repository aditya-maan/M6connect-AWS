<?php 
/**
 * Implements hook_menu.
 */

function m6connect_onboarding_menu(){
  $items = array(); 
  $items['login-verification'] = array(
    'title' => t('Login varification'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_login_verification_form'),
    'access callback' => TRUE,
  );
  /* $items['invite-companies-onboarding'] = array(
    'title' => 'Find Companies',
    'page callback' => 'find_companies_onboarding',
    //'access arguments' => array('m6connect_authenticate_user'),
  'access callback' => 'm6_onboarding_manager_access',
  ); */
  $items['onboarding/submit-employees'] = array(
  'title' => 'Request to Submit Employees',
  'page callback' => 'onboarding_submit_employees_callback',
  'access callback' => FALSE, //'check_site_manager_onboarding_manager_access',
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_NORMAL_ITEM,
  );
  
  $items['onboarding/in-process'] = array(
  'title' => 'Roster',
  'page callback' => 'onboarding_in_process_callback',
  'access callback' => 'check_site_manager_onboarding_manager_access',
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_NORMAL_ITEM,
  );
  
  $items['onboarding/settings'] = array(
  'title' => 'Settings',
  'page callback' => 'drupal_get_form',
  'page arguments' => array('onboarding_employee_setting_form'),
  'access callback' => 'check_site_manager_onboarding_manager_access',
  //'file' => 'onbording.phase.inc',
  //'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_NORMAL_ITEM,
  );
  
  $items['onboarding/colleagues'] = array(
  'title' => 'Manage Employees',
  'page callback' => 'onboarding_manage_colleagues_callback',
  'access callback' => 'check_onboarding_manager_access',
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_NORMAL_ITEM,
  );
  
  $items['onb-remove-invited-company/%'] = array(
  'title' => t('Remove Invited Company Callback'),
  'page callback' => 'onb_remove_invited_company_callback',
  'page arguments' => array(1),
  'access arguments' => array('m6connect_authenticate_user'),
  'type' => MENU_CALLBACK,
  );
  
  $items['onboarding-invite-companies'] = array(
    'title' => 'Invite',
  'page callback' => 'drupal_get_form',
    'page arguments' => array('onboarding_company_user_invite_form'),
    'access callback' => 'check_site_manager_onboarding_manager_access',
  );
  
  $items['onboarding/invite-request/%/%node/%ctools_js/%'] = array(
  'page callback' => 'onboarding_new_request_action_callback',
  'page arguments' => array(2,3,4,5),
  'access callback' => TRUE,
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_CALLBACK,
  );
  
  $items['onboarding-requestee-action/%/%/%node/%/%ctools_js'] = array(
    'page callback' => 'onboarding_requestee_employeee_action_callback',
  'page arguments' => array(1,2,3,4,5),
  'access callback' => TRUE,
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_CALLBACK,
  );
  
  $items['onboarding-profile-submit-action/%/%/%/%node/%node/%ctools_js'] = array(
    'title' => t(''),
    'page callback' => 'onboarding_profile_submit_action_callback',
    'page arguments' => array(1,2,3,4,5,6),
    //'access arguments' => array('see full bio of user'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  //in-process message system
  $items['onboarding-message/%/%/%/%/%ctools_js'] = array(
  //'title' => 'Onboarding Feedback',
  'page callback' => 'onboarding_feedback_content_callback',
  'access callback' => 'check_site_manager_onboarding_manager_access',
  'page arguments' => array(1,2,3,4,5), 
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  );
  
  $items['company-obm/autocomplete'] = array(
    'page callback' => 'company_has_onboarding_managers_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['get_onboarding-confirm-sumission-form'] = array(
    'page callback' => '_get_onboarding_confirm_submission_form',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['submit_onboarding-confirm-sumission'] = array(
    'page callback' => 'submit_onboarding_confirm_submission_form',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['onboarding-company-messaging/%node/%user/%ctools_js'] = array(
  //'title' => 'Onboarding Feedback',
  //'page callback' => 'drupal_get_form',
  //'page arguments' => array('onboarding_inter_company_messaging',1,2),
  'page callback' => 'onboarding_inter_company_messaging_callback',
  'page arguments' => array(1,2,3),
  'access callback' => TRUE,//'onboarding_inter_company_messaging_access_callback',
  'access arguments' => array(1,2), 
  'type' => MENU_NORMAL_ITEM,
  );
  
  $items['onboarding-inter-company-message_remove/%/%/%/%ctools_js'] = array(
    'page callback' => 'onboarding_inter_company_message_remove_callback',
  'page arguments' => array(1,2,3,4),
  'access callback' => TRUE,
  'type' => MENU_CALLBACK,
  );
  
  $items['onboarding-inprocess-action/%/%/%ctools_js'] = array(
    'page callback' => 'onboarding_inprocess_action_callback',
  'page arguments' => array(1,2,3),
  'access callback' => TRUE,
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_CALLBACK,
  );
  $items['onboarding/add-projects/%ctools_js'] = array(
    'title' => 'M6ID Project',
  'page callback' => 'onboarding_add_new_project_callback',
    'page arguments' => array(2),
  'access callback' => 'm6_onboarding_manager_access', 
  );
  
  $items['onbording-invited-action/%/%/%ctools_js'] = array(
  'page callback' => 'onbording_invited_action_callback',
    'page arguments' => array(1,2,3),
  'access callback' => 'm6_onboarding_manager_access', 
  );
  
  $items['user-m6id-info/%user/%node/%ctools_js'] = array(
    'title' => 'M6ID',
  'page callback' => 'user_m6id_popup_callback',
    'page arguments' => array(1,2,3),
  'access callback' => TRUE, 
  );
  
  $items['user-m6id-detail-info/%user/%ctools_js'] = array(
    'title' => 'M6ID Information',
  'page callback' => 'user_m6id_detail_popup_callback',
    'page arguments' => array(1,2),
  'access callback' => TRUE, 
  );
  
  $items['onboarding-authorize-request/%/%user/%node/%ctools_js'] = array(
  'page callback' => 'onboarding_authorize_request_action',
    'page arguments' => array(1,2,3,4),
  'access callback' => TRUE, 
  );
  
  $items['m6id-invite-employee/%ctools_js'] = array(
    'title' => 'M6ID Invite Employee',
  'page callback' => 'onboarding_invite_employee_callback',
    'page arguments' => array(1),
  'access callback' => TRUE, 
  );
  
  $items['m6id-project-invite/%node/%ctools_js'] = array(
    'title' => 'Invite Companies To Project',
    'page callback' => 'onboarding_invite_companies_to_project_callback',
    'page arguments' => array(1,2),
    'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
  
  $items['m6id-project-submit-employee/%node/%ctools_js'] = array(
    'title' => 'Submit Employee To Project',
  'page callback' => 'onboarding_submit_employee_to_project_callback',
    'page arguments' => array(1,2),
  'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
  
  $items['m6id-reject-project-invitation/%node'] = array(
    'title' => 'Reject Project Invitation',
  'page callback' => 'onboarding_reject_project_invitation_callback',
    'page arguments' => array(1),
  'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
  
  $items['m6id/project-invite/revoke/%/%node/%ctools_js/%node'] = array(
    'title' => 'Revoke Project Invitation',
  'page callback' => 'onboarding_revoke_project_invitation_callback',
    'page arguments' => array(3,4,5,6),
  'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
  
  $items['m6id-remove-invited-employee/%/%ctools_js'] = array(
    'title' => 'Revoke Project Invitation',
  'page callback' => 'm6id_remove_invited_employee_callback',
    'page arguments' => array(1,2),
  'access callback' => 'check_site_manager_onboarding_manager_access',
  'file' => 'onbording.phase.inc',
  'file path' => drupal_get_path('module', 'm6connect_onboarding') . '/includes',
  'type' => MENU_CALLBACK, 
  );
  
  $items['m6id-project-worker/%ctools_js'] = array(
    'title' => 'M6ID Add Worker To Project',
  'page callback' => 'onboarding_add_project_worker_callback',
    'page arguments' => array(1),
  'access callback' => TRUE, 
  );
  
  $items['game-page'] = array(
    'title' => 'Games',
  'page callback' => 'games_callback',
  'access callback' => TRUE, 
  );
  
  $items['roster-m6id-print'] = array(
  'page callback' => 'm6id_roster_m6id_print',
  'access callback' => TRUE, 
  );
  
  $items['m6id-employee-badge-print'] = array(
  'page callback' => 'm6id_employee_badge_print_callback',
  'access callback' => TRUE, 
  );
  
  $items['roster-m6id-info/%/%ctools_js'] = array(
    'title' => 'M6ID',
  'page callback' => 'user_m6id_print_callback',
    'page arguments' => array(1,2),
  'access callback' => TRUE, 
  );
  
  $items['roster-m6id-popup-print/%'] = array(
  'page callback' => 'roster_m6id_print_popup',
    'page arguments' => array(1),
  'access callback' => TRUE, 
  );
  
  $items['delete-employee-type/%/%ctools_js'] = array(
  'page callback' => 'm6id_delete_employee_type',
    'page arguments' => array(1,2),
  'access callback' => TRUE, 
  );
  
  /*********************************************/
  $items['user/%user/m6id-info'] = array(
    'title' => 'M6ID',
  'page callback' => 'user_profile_tab_callback',
    'page arguments' => array(1,2),
  'access callback' => 'user_profile_tab_access',
  'access arguments' => array(1),
  'type' => MENU_LOCAL_TASK, 
  );
  $items['user/%user/member-info'] = array(
    'title' => 'Member Status',
  'page callback' => 'user_profile_tab_callback',
    'page arguments' => array(1,2),
  'access callback' => 'user_profile_tab_access',
  'access arguments' => array(1),
  'type' => MENU_LOCAL_TASK, 
  );
  $items['user/%user/company-info'] = array(
    'title' => 'Companies',
  'page callback' => 'user_profile_tab_callback',
    'page arguments' => array(1,2),
  'access callback' => 'user_profile_tab_access',
  'access arguments' => array(1),
  'type' => MENU_LOCAL_TASK, 
  );
  
  $items['user/%user/opt-out-email'] = array(
    'title' => 'Opt Out Email',
  'page callback' => 'user_profile_tab_callback',
    'page arguments' => array(1,2),
  'access callback' => 'user_profile_tab_access',
  'access arguments' => array(1),
  'type' => MENU_LOCAL_TASK, 
  );
   //************** For Resend Invite company*******/
   $items['m6id/project-resendinvite/revoke/%/%node/%ctools_js/%node'] = array(
    //'title' => 'Resend Invitation',
    'page callback' => 'onboarding_revoke_project_resend_invitation_callback',
    'page arguments' => array(3,4,5,6),
    'access callback' => 'check_site_manager_onboarding_manager_access', 
  );

   $items['m6id/project-invite/revoke/%/%node/%ctools_js/%node'] = array(
    'title' => 'Revoke Project Invitation',
    'page callback' => 'onboarding_revoke_project_invitation_callback',
    'page arguments' => array(3,4,5,6),
    'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
   $items['m6id-remove-invited-workers-employee/%/%ctools_js'] = array(
    'title' => 'Revoke Project Invitation',
    'page callback' => 'onboarding_remove_invited_workers_employee_callback',
    'page arguments' => array(1,2),
    'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
   $items['resend-m6idnumber-manage-colleagues/%/%ctools_js'] = array(
    //'title' => 'Revoke Project Invitation',
    'page callback' => 'onboarding_resend_m6idnumber_manage_colleagues_callback',
    'page arguments' => array(1,2),
    'access callback' => 'check_site_manager_onboarding_manager_access', 
  );
  
  
  /*********************************************/
  return $items;
}


//hook_node_delete********************/
function m6connect_onboarding_node_delete($node){
  if($node->type == 'organization'){
    db_delete('m6connect_onboarding_employee_types')->condition('company_nid',$node->nid)->execute();
  }
  
}
//end hook node delete********************/

function m6connect_onboarding_preprocess_page(&$variables) {
  if (in_array(current_path(),array('onboarding/colleagues','onboarding/in-process','onboarding/projectlist','node/add/onboarding','user-m6id-info/2/645/nojs'))) {
  $variables['title'] = '';
  }
  if (arg(0)=='user' && is_numeric(arg(1)) && !empty(arg(2)) && in_array(arg(2),array('edit','m6id-info','member-info','company-info','opt-out-email'))) {
  $variables['title'] = '';
  if(isset($variables['tabs'])){
    unset($variables['tabs']);  
  }
  }
}

/**************** User Edit Profile ****************/

function user_profile_tab_access($currentUser){
  global $user;
  if(user_is_logged_in() && ((isset($user->roles[3])) || ($user->uid == $currentUser->uid))){
  return TRUE;  
  }
  return FALSE;
}

function user_profile_company_tab_form($form,&$form_state,$userUid){
  $tempform = array();
  $entity = user_load($userUid);
  field_attach_form('user', $entity, $tempform, $form_state, NULL, array('field_name' => 'field_job_titles'));
  field_attach_form('user', $entity, $tempform, $form_state, NULL, array('field_name' => 'field_user_title'));
  field_attach_form('user', $entity, $tempform, $form_state, NULL, array('field_name' => 'field_responsibilities'));
  
  $form['field_job_titles'] = $tempform['field_job_titles'];
  $form['field_user_title'] = $tempform['field_user_title'];
  $form['field_responsibilities'] = $tempform['field_responsibilities'];
  
  $form['user_uid']= array(
    '#type' => 'value',
  '#value' => $entity->uid,
  );
  
  $form['action_container'] = array(
   '#type' => 'actions',
  );
  
  $form['action_container']['submit'] = array(
   '#type' => 'submit',
   '#value' => t('Save'), 
   '#submit' => array('profile_company_submit_handler'),
  ); 
  return $form;
}


function profile_company_submit_handler(&$form, &$form_state) {
  $values = $form_state['values'];
  $account = user_load($values['user_uid']);
  if(!empty($values['user_uid']) && is_numeric($values['user_uid'])){  
  //$values['field_job_titles']['und'][0]['target_id']; 
  //$values['field_user_title']['und'][0]['value'];
  //$values['field_responsibilities']['und'][0]['value'];
  user_save($account, $values);
  drupal_set_message(t('The changes have been saved.'));
  } 
}

function user_profile_edit_ribbon(){
  $content = '<div class="main_content">
        <div class="box box-with-image">
          <div class="box-header-main box-header">
          <div class="box-image-wrapper"> <a href="javascript:void(0);"> 
            <img src="/sites/all/themes/m6connect/images/icon-m6id-1.png" alt="profile" /></a>
          </div>
          <div class="box-right-entity">
            <div class="row">
            <div class="col-md-8 col-sm-7 col-xs-12">
              <h1>Personal Profile</h1>
              <p>&nbsp;</p>
            </div>
            <div class="col-md-4 col-sm-5 col-xs-12 box-actions text-right">&nbsp;</div>
            </div>
          </div>
          </div>
        </div>
        </div>';
  return $content;  
}

function user_profile_navigation_tab(){
  $content ='';
  $m6idLogo = $m6idNumber ='&nbsp;';
  $activeLinks = array('edit'=>'','m6id-info'=>'','member-info'=>'','company-info'=>'','opt-out-email'=>'');
  
  $userUid = arg(1);
  $activeLinks[arg(2)] = ' class="active"';
  if(arg(2) == 'm6id-info'){
    $currentUser = menu_get_object('user',1);
    $m6idNumber = 'M6ID: '.$currentUser->field_m6id['und'][0]['value'];
    $m6idLogo = l('<img src="/sites/all/themes/m6connect/images/icon-id-card.png" alt="icon-id-card">','/user-m6id-info/'.arg(1).'/645/nojs',array('html'=> TRUE,'attributes'=>array('class'=>array('ctools-use-modal','ctools-modal-onboarding-m6id-popup-style'),'title'=>'M6ID')));
  }
  
  $content  = '<div class="user-profile-navigation-link clearfix">';
  $content .= '  <ul class="list-unstyled list-inline custom-list pull-left">';
  $content .= '    <li'.$activeLinks['edit'].'>'.l('Profile','user/'.$userUid.'/edit').'</li>';
  $content .= '    <li'.$activeLinks['m6id-info'].'>'.l('M6ID','user/'.$userUid.'/m6id-info').'</li>';
  $content .= '    <li'.$activeLinks['member-info'].'>'.l('Member Status','user/'.$userUid.'/member-info').'</li>';
  $content .= '    <li'.$activeLinks['company-info'].'>'.l('Companies','user/'.$userUid.'/company-info').'</li>';
  $content .= '    <li'.$activeLinks['opt-out-email'].'>'.l('Opt-Out Emails','user/'.$userUid.'/opt-out-email').'</li>';
  $content .= '  </ul>';
  $content .= '  <div class="user-profile-m6id-label pull-right">';
  $content .= '    <span class="m6id-logo">'.$m6idLogo.'</span>';
  $content .= '    <span class="m6id-info">'.$m6idNumber.'</span>';
  $content .= '  </div>';
  $content .= '</div>';
  
  return $content;
}

function user_profile_tab_callback($currentUser,$currentTab){
  $content = '';
 // drup_msg($currentUser->uid.'  =>  '.$currentTab);
  switch($currentTab){
  case 'm6id-info':
    module_load_include('inc', 'node', 'node.pages');
    $m6id_node = (object) array(
    'uid' => $currentUser->uid,
    'name' => (isset($currentUser->name) ? $currentUser->name : ''),
    'type' => 'onboarding',
    'language' => LANGUAGE_NONE,
    );
    node_object_prepare($m6id_node);
    $m6id_node->uid = $currentUser->uid;
    if($obnid = get_user_onboarding_nid($currentUser->uid)){
      $m6id_node = node_load($obnid); 
    }
    $m6idform = drupal_get_form('onboarding_node_form', $m6id_node);
    $content =  drupal_render($m6idform);
  break;
  case 'member-info':
    global $user;
    $user_roles = $currentUser->roles; 
    $user_order_product='';    
    $expirePlans = '';                          
    if(isset($user_roles[7])){
      $user_order_product = $user_roles[7];
    }
    else if(isset($user_roles[8])){
      $user_order_product = $user_roles[8];
    }
    else if(isset($user_roles[9])){
      $user_order_product = $user_roles[9];
    }else if(isset($user_roles[14])){
      $user_order_product = $user_roles[14];
    }else if(isset($user_roles[4])){
      $user_order_product = "Free Plan";
    }else{
      $user_order_product = "Free Plan";
    }
    if($user_order_product != "Free Plan"){
      $can_account = $currentUser;
      $rebill_expiration = array();
      $last_pg_field = field_get_items('user', $can_account, 'usr_last_pg');
      $last_pg =  $last_pg_field[0]['value'];
      if($last_pg == 'bluepay'){
        $bluepay_field = field_get_items('user', $can_account, 'user_bluepay_rec_cancel_status');
        $rebill_cancel_status = $bluepay_field[0]['value'];
        $bluepay_field2 = field_get_items('user', $can_account, 'user_bluepay_rec_expiration');
        $rebill_expiration = explode(" ",$bluepay_field2[0]['value']);
      }elseif($last_pg == 'authorizenet'){
        $authnet_field = field_get_items('user', $can_account, 'user_authorizenet_rc_cncl_stat');
        $rebill_cancel_status = $authnet_field[0]['value'];
        $authnet_field2 = field_get_items('user', $can_account, 'user_authorizenet_rec_expiration');
        $rebill_expiration = explode(" ",$authnet_field2[0]['value']);
      }
      if($rebill_cancel_status == '1'){
        $expirePlans ='<div class="clearfix">Plan Expiry Date : '.$rebill_expiration[0].' (Subscription has been canceled and will NOT automatically renew)</div>';
      }else{
        $expirePlans = '<a class="subscribe"  data-toggle="modal"  data-target="#myModal" href="#">Unsubscribe</a>';
      } 
    } 
    $query_payment = db_select('uc_orders', 'uco');
    $query_payment->join('uc_order_products','ucop','ucop.order_id=uco.order_id');
    $query_payment->fields('uco', array('order_id','uid','order_status','order_total','created','modified'));
    $query_payment->fields('ucop', array('title'));
    $query_payment->condition('uco.uid',  $currentUser->uid, '=');
    $result_payment = $query_payment->execute()->fetchAll();
    $paymentRows = array();
    if(!empty($result_payment)){
    foreach($result_payment as $delta => $item_payment){
      $created_date = date('m/d/Y', $item_payment->created);
      $modified_date = date('m/d/Y', $item_payment->modified);
      $modified_date = (!empty($modified_date))?$modified_date:$created_date;
      $paymentRows[$delta]  = '<tr>'; 
      $paymentRows[$delta] .= '<td>'.$modified_date.'</td>'; 
      $paymentRows[$delta] .= '<td>'.$item_payment->order_id.'</td>'; 
      $paymentRows[$delta] .= '<td>'.$item_payment->title.'</td>'; 
      $paymentRows[$delta] .= '<td>'.substr($item_payment->order_total, 0, -3).'</td>'; 
      $paymentRows[$delta] .= '<td>'.$item_payment->order_status.'</td>'; 
      $paymentRows[$delta] .= '</tr>';
    }
    }
    
    $content  = '<div class="personal-profile-member-section personal_information_border margin-bottom-10">';
    $content .= '<div class="m6_top_current clearfix">';
      $content .= '<div class="left_m6_top_curr clearfix">';
      $content .= '<h1>Current Plan</h1>';
    $content .= '<p>'.$user_order_product.'</p>';
    $content .= $expirePlans;
      $content .= '</div>';
      $content .= '<div class="right_m6_top_curr clearfix"><a class="un-subscribe" href="/upgrade-your-membership-subscription">Upgrade Your Plan</a> </div>';
    $content .= '</div>';
    
    $content .= '<div id="page-wrap" class="clearfix"><h1>Payment History</h1>';
    $content .= '<table class="table table-bordered table-hover table-striped">';
    $content .= '<thead><tr><th>Date</th> <th>Order</th><th>Membership plan</th><th>Total</th><th>Status</th></tr></thead>';
    $content .= '<tbody>'.implode('',$paymentRows).'</tbody>';
    $content .= '</table></div>';
    if($user->uid == $currentUser->uid){
    $content .= '<div class="clearfix text-right orders">'.l('View your order history', 'user/'.$currentUser->uid.'/orders').'</div>';  
    }
    $content .= '</div>';
  break;
  case 'company-info':
    drupal_add_js(drupal_get_path('module', 'm6connect_common') . '/js/m6connect_common.js'); 
    $userprofilecompanytab = module_invoke('m6connect_onboarding', 'block_view', 'personal-profile-companies-edit');
    $companyEmailBlock = module_invoke('m6connect_common', 'block_view', 'user_company_email_block');
    $delegateUserDataBlock = views_embed_view('delegate_user_data', 'block');
    $delegateUserDataBlockNext = views_embed_view('delegate_user_data', 'block_1');
    $content  = '<div class="userprofilecompanytab personal-profile-field-section personal_information_border margin-bottom-10">';
    $content .=   render($userprofilecompanytab['content']);
    $content .= '</div>';
    $content .= '<div class="personal-profile-company-section personal_information_border margin-bottom-10">';
    $content .=   '<div class="clearfix user-company-email-section">';
    $content .=     '<div id="revoke-company-access-dialog" class="clearfix"></div>';
    $content .=     '<div id="edit-company-email-dialog" class="clearfix"></div>';
    $content .=      render($companyEmailBlock['content']);
    $content .=   '</div>';
    $content .= '</div>';
    $content .= '<div class="personal-profile-deledation-section personal_information_border margin-bottom-10">';
    $content .=   '<div class="clearfix user-delegate-section">';
    $content .=     '<div id="revoke-delegation-access-dialog" class="clearfix"></div>';
    $content .=     $delegateUserDataBlock.$delegateUserDataBlockNext;
    $content .=   '</div>';
    $content .= '</div>';
  break; 
  case 'opt-out-email':
    $optoutform = drupal_get_form('user_opt_out_email_form', $currentUser);
    $content =  drupal_render($optoutform);
  break; 
  }
  return $content;
}

/**************** End User Edit Profile ****************/

function m6connect_onboarding_node_view($node, $view_mode, $langcode) {
  global $user;
  if($node->type=='onboarding_project'){
  drupal_set_title('Invitation - '.$node->title); 
  $flag = flag_get_flag('m6id_project_seen');
  if ($flag && !$flag->is_flagged($node->nid,$user->uid)) {
      $flag->flag('flag', $node->nid, $user, TRUE); 
    } 
  }
}

/**
 * Implements hook_forms().
 */
function m6connect_onboarding_forms($form_id, $args) {
  $forms = array();
  if (strpos($form_id,'onboarding_roster_user_submitter_form_')!==FALSE) {
  module_load_include('inc', 'm6connect_onboarding', 'onbording.phase');
    $dataObj = $args[0];
    $forms['onboarding_roster_user_submitter_form_'.$dataObj->id] = array('callback' => 'onboarding_roster_user_submitter_form');
  }
  return $forms;
}

/**
 * Popup’s setings function.
 */
function onboarding_message_ctools_popup_style() {
    static $onboarding_message_popup = FALSE;
    if ($onboarding_message_popup == FALSE) {
        $onboarding_message_popup = TRUE;
        ctools_include('modal');
        ctools_include('ajax');
        ctools_modal_add_js();
        $onboarding_message_popup_style = array(
            'onboarding-message-popup-style' => array(
                'modalSize' => array(
                    'type' => 'fixed',
                    'width' => 700,
                    'height' => 'auto',
                ),
                'modalOptions' => array(
                    'opacity' => (float) 0.85,
                    'background-color' => '#000000',
                ),
                'closeText' => '',
                'loadingText' => '',
                'animation' => 'fadeIn',
                'modalTheme' => 'OnboardingMessagePopup',
                'animationSpeed' => 'fast',
            ),
        );
        drupal_add_js($onboarding_message_popup_style, 'setting');
        ctools_add_js('m6connect_onboarding_message_modal', 'm6connect_onboarding');
    }
}

function onboarding_submit_employees_dashboard_ctools_popup_style() {
    static $onboardingDashboardAdded = FALSE;
    if ($onboardingDashboardAdded == FALSE) {
        $onboardingDashboardAdded = TRUE;
        ctools_include('modal');
        ctools_include('ajax');
        ctools_modal_add_js();
        $m6id_submit_employee_popup_style = array(
            'm6id-submit-employee-popup-style' => array(
                'modalSize' => array(
                    'type' => 'fixed',
                    'width' => 680,
                    'height' => 'auto',
                ),
                'modalOptions' => array(
                    'opacity' => (float) 0.85,
                    'background-color' => '#000000',
                ),
                'closeText' => '',
                'loadingText' => '',
                'animation' => 'fadeIn',
                'modalTheme' => 'M6CtoolPopup',
                'animationSpeed' => 'fast',
        'modalClass' => 'm6id-submit-employee-popup',
            ),
        );
        drupal_add_js($m6id_submit_employee_popup_style, 'setting');
        ctools_add_js('m6connect_ctools_popup_style_modal', 'm6connect_common');
    }
}

function onboarding_inter_company_messaging_access_callback($cmpNode,$userObj){
  global $user;
  $companyNid = ($cmpNode->type=='organization')?$cmpNode->nid:'';
  if(is_numeric($companyNid)){
    $query = db_select('users','u');
    $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:entityType',array(':entityType'=>'user'));
    $query->join('node','n','n.uid=u.uid AND n.type=:nodeType',array(':nodeType'=>'onboarding'));
    $query->join('field_data_field_allow_onboarding_companies','fac','fac.entity_id=n.nid AND fac.field_allow_onboarding_companies_nid=:companyNid',array(':companyNid'=>$companyNid));
    $query->fields('n',array('nid','uid'));
    $query->condition('og.gid',$companyNid,'=');
    $query->condition('og.state',1,'=');
  $query->condition('u.uid',$userObj->uid,'=');
  $onboardingNode = $query->execute()->fetchObject();
  if($onboardingNode && is_object($onboardingNode)){
    if($user->uid == $onboardingNode->uid){
    return TRUE;  
    }else if(in_array($user->uid,_get_company_users_by_og_roles($companyNid,'M6ID Manager'))){
    return TRUE;  
    }
  }
  }
  return FALSE; 
}

function check_onboarding_manager_access(){
  global $user;
  $companyNid = $_SESSION['company'];
  if(is_numeric($companyNid)){
    $currentUserObj = user_load($user->uid);
    $currentUserComapny = node_load($companyNid);
    $currentUserComapnyType = $currentUserComapny->field_type_of_company['und'][0]['value'];
  $userOnboardingAccess = (isset($currentUserObj->field_allow_onboarding_access['und']) && $currentUserObj->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
    $CompanyOnboardingAccess = (isset($currentUserComapny->field_allow_onboarding_access['und']) && $currentUserComapny->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
  if(($userOnboardingAccess && $currentUserComapnyType == 'individual') || ($CompanyOnboardingAccess && $currentUserComapnyType == 'company')){
    $CurrentUserRoles = og_get_user_roles('node', $companyNid, $user->uid);
    $isValidAccess = array_intersect(array_values($CurrentUserRoles),array('administrator member','company admin','M6ID Manager'));
    if(!empty($isValidAccess)){
    return TRUE;  
    }
  }
  }
  return FALSE;
}

function check_site_manager_access(){
  global $user;
  $companyNid = $_SESSION['company'];
  if(is_numeric($companyNid)){
    $currentUserObj = user_load($user->uid);
    $currentUserComapny = node_load($companyNid);
    $currentUserComapnyType = $currentUserComapny->field_type_of_company['und'][0]['value'];
  $userOnboardingAccess = (isset($currentUserObj->field_allow_onboarding_access['und']) && $currentUserObj->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
    $CompanyOnboardingAccess = (isset($currentUserComapny->field_allow_onboarding_access['und']) && $currentUserComapny->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
  if(($userOnboardingAccess && $currentUserComapnyType == 'individual') || ($CompanyOnboardingAccess && $currentUserComapnyType == 'company')){
    $CurrentUserRoles = og_get_user_roles('node', $companyNid, $user->uid);
    $isValidAccess = array_intersect(array_values($CurrentUserRoles),array('administrator member','company admin','Site Manager'));
    if(!empty($isValidAccess)){
    return TRUE;  
    }
  }
  }
  return FALSE;
}

function check_site_manager_onboarding_manager_access(){
 global $user;
  $companyNid = $_SESSION['company'];
  if(is_numeric($companyNid)){
    $currentUserObj = user_load($user->uid);
    $currentUserComapny = node_load($companyNid);
    $currentUserComapnyType = $currentUserComapny->field_type_of_company['und'][0]['value'];
  $userOnboardingAccess = (isset($currentUserObj->field_allow_onboarding_access['und']) && $currentUserObj->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
    $CompanyOnboardingAccess = (isset($currentUserComapny->field_allow_onboarding_access['und']) && $currentUserComapny->field_allow_onboarding_access['und'][0]['value']==1)?1:0;
  if(($userOnboardingAccess && $currentUserComapnyType == 'individual') || ($CompanyOnboardingAccess && $currentUserComapnyType == 'company')){
    $CurrentUserRoles = og_get_user_roles('node', $companyNid, $user->uid);
    $isValidAccess = array_intersect(array_values($CurrentUserRoles),array('administrator member','company admin','M6ID Manager','Site Manager'));
    if(!empty($isValidAccess)){
    return TRUE;  
    }
  }
  }
  return FALSE;
}

function m6connect_onboarding_form_alter(&$form, &$form_state, $form_id){ //kpr($form_id);
  global $user;
  if(arg(0) == 'user' && is_numeric(arg(1)) && !arg(2)) { 
  if(isset($_SESSION['onboarding-create-' . $user->uid])) {
      //drupal_add_js('jQuery(document).ready(function(){ jQuery(".profile-tab-open").click(); });', 'inline');
    drupal_add_js('jQuery(window).load(function(){ jQuery(".user-onboarding-tab").click(); });', 'inline');
    unset($_SESSION['onboarding-create-' . $user->uid]);    
  }
  }
  if($form_id=='views_exposed_form' && $form['#id']=='views-exposed-form-onboarding-center-page'){
  $form['#attributes']['class'][] = 'rpf-exposed-filter';
    $form['#attributes']['class'][] = 'routing-slip-exposed-filter';
    $form['combine']['#attributes']['placeholder'] = 'Search...';
  $form['combine']['#attributes']['class'][] ='exposed_title_routing_slip';
    $form['combine']['#title_display'] = 'invisible';
    $form['sort_by']['#title_display'] = 'invisible';
    $form['sort_by']['#attributes']['class'][] ='exposed_sort_routing_slip';
  $form['sort_by']['#attributes']['onchange'] = 'jQuery(".exposed_submit_routing_slip").click();';
  $form['submit']['#attributes']['class'][] ='exposed_submit_routing_slip';  
  }
  if($form_id == 'onboarding_node_form2'){
  //$form['#process'][] = 'onboarding_node_process_callback_handler'; 
  if(isset($form['field_drivers_license_issuance'])){
    $form['field_drivers_license_issuance']['und'][0]['street_block']['#access'] = FALSE;
    $form['field_drivers_license_issuance']['und'][0]['street_block']['thoroughfare']['#required']= FALSE;
    $form['field_drivers_license_issuance']['und'][0]['street_block']['premise']['#required']= FALSE; 
    $form['field_drivers_license_issuance']['und'][0]['locality_block']['dependent_locality']['#required']= FALSE;
    $form['field_drivers_license_issuance']['und'][0]['locality_block']['locality']['#required']= FALSE;
    $form['field_drivers_license_issuance']['und'][0]['locality_block']['administrative_area']['#required']= FALSE;
    $form['field_drivers_license_issuance']['und'][0]['locality_block']['postal_code']['#required']= FALSE; 
  }
  //kpr($form);
  }
  if($form_id == 'onboarding_node_form'){ 
   if(isset($form_state['build_info']['args'],$form_state['build_info']['args'][0]->user_profile_credental) && $form_state['build_info']['args'][0]->user_profile_credental == 1){
       $form['#user_profile_credental']=1;
       $form['field_phone']['#access'] = FALSE;
       $form['field_emergency_first_name']['#access'] = FALSE;
       $form['field_emergency_last_name']['#access'] = FALSE;
       $form['field_emergency_phone_number']['#access'] = FALSE;    
    }
    ////////********************////
     /*$m6Nid = get_user_onboarding_nid($user->uid);
     $M6idnode = node_load($m6Nid);
     $uscitizen  = $M6idnode->field_are_you_a_us_citizen['und'][0]['value'];
     $fieldphone = $M6idnode->field_phone['und'][0]['value'];
     $emergencyfirstname = $M6idnode->field_emergency_first_name['und'][0]['value'];
     $emergencylastname = $M6idnode->field_emergency_last_name['und'][0]['value'];
     $emergencyphonenumber = $M6idnode->field_emergency_phone_number['und'][0]['value'];

     /*if(empty($uscitizen && $fieldphone && $emergencyfirstname && $emergencylastname && $emergencyphonenumber)){
       $form['actions']['submit']['#value'] = 'Submit';
     }
     else{
       $form['actions']['submit']['#value'] = 'Save';
     }*/
    /////*********************////// 

  }
}

function user_login_verification_form($form, &$form_state) {
  $form['name'] = array(
    '#title' => t('<div class = "affi-label">User Name</div>'),
    '#type' => 'textfield',
    '#description' => t(''),
    '#required' => TRUE,
  );
    
  $form['pass'] = array(
    '#type' => 'password',
    '#title' => t('<div class = "affi-label">Password</div>'),
    '#maxlength' => 60,
    '#size' => 15,
    '#required' => TRUE,
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('change'),
  );
  return $form;  
}

/*
 * onboarding submitted step form items
 */
function onboarding_submitted_process($element,&$form_state){//pre($form_state);
  global $user, $base_url;  
  if(isset($form_state['node']->uid) && !empty($form_state['node']->uid)){
  $nuid =  $form_state['node']->uid; 
  $nuser = user_load($nuid);
  } else {
  $nuser = user_load($user->uid);  
  } 
  $element['confirm_onboarding']= array(
  '#markup' => '<div class="confirm-ob-mrkup clearfix margin-bottom-10">Confirm your M6ID profile to be submitted.</div>',
  );
  $imgsrc = image_style_url('user_pic_32x32', isset($nuser->field_user_profile_photo['und']['0']['uri']) ? $nuser->field_user_profile_photo['und']['0']['uri'] : 'public://images_13.png');
  $userdiv = '<div class="ob-submit-user-detail pull-left"><span><img typeof="foaf:Image" src="'.$imgsrc.' alt=""></span><span>'._get_user_full_name($nuser->uid).'</span></div>';
  $element['confirm_onboarding_checkbox']= array(
    '#type' => 'checkbox',
  '#title' => '',
    '#attributes' => array('class'=> array('onboarding-chkbox-option')),
  '#prefix' => '<div class="m6-confrm-ob-chkbx clearfix margin-bottom-10">',
  '#suffix' => $userdiv.'</div><hr class="onboarding-devider" style="margin:5px;border-top: 1px solid #999;"/>',
  '#default_value' => $form_state['confirm_ob_default']['default'],
  );
  
  $element['agree_onboarding_heading']= array(
    '#markup' => '<div class="confirm-ob-mrkup clearfix margin-bottom-5">Agreement to share your information with others.</div>' 
  );
  
  $element['agree_onboarding_checkbox']= array(
    '#type' => 'checkbox',
  '#title' => t('I agree to share my personal and credential information with the company(s) below.'),
    '#attributes' => array('class'=> array('agree-chkbox-option')),
  '#default_value' => $form_state['agree_ob_default']['default'],
  '#prefix' => '<div class="m6-agree-ob-chkbx clearfix margin-bottom-5">',
  '#suffix' => '</div>',
  );
  
  $helpLinik = l('<i class="fa fa-question-circle onboarding-question-help"></i>','#', array('html'=>TRUE,'external'=>TRUE, 'attributes'=> array('class'=> array('onboarding-question-help','own-companies-help-link'))));
  
  $element['allow_your_companies_checkbox']= array(
    '#type' => 'checkbox',
  '#title' => 'Allow your company(s) to represent you for this submission. This allows the company(s) selected below to share your M6ID profile information with other companies that they work with. M6ID approval, whether as an employee or a contractor, may take several days. '.$helpLinik,
    '#attributes' => array('class'=> array('allow-company-chkbox-option')),
  '#default_value' => $form_state['allow_ob_default']['default'],
  '#prefix' => '<div class="m6-allow-company-ob-chkbx clearfix margin-bottom-5">',
  //'#suffix' => '</div><hr class="onboarding-devider" style="margin:5px;border-top: 1px solid #999;"/>',
  '#suffix' => '</div>',
  );
  
  $helpLinik = l('<i class="fa fa-question-circle onboarding-question-help"></i>','#', array('html'=>TRUE,'external'=>TRUE, 'attributes'=> array('class'=> array('onboarding-question-help','company-confidential-help-link'))));
  
  $element['allow_company_confidential_checkbox']= array(
    '#type' => 'checkbox',
  '#title' => 'Company Confidential '.$helpLinik,
    '#attributes' => array('class'=> array('company-confidential-chkbox-option')),
  '#default_value' => $form_state['allow_company_confidential']['default'],
  '#prefix' => '<div class="m6-allow-company-ob-chkbx clearfix margin-bottom-5">',
  '#suffix' => '</div><hr class="onboarding-devider" style="margin:5px;border-top: 1px solid #999;"/>',
  );
  
  $element['allow_your_companies']= array(
  '#markup' => '<div class="allow-your-companies clearfix margin-bottom-10">By checking this box below you agree to allow the respective  M6ID manager to have the access to your information.</div>',
  );
  
  
  $usercompanies = _get_user_companies_without_individual($nuser); //pre($usercompanies);
  foreach($usercompanies as $k=>$cnid) {
  if(!empty($form_state['selected_comp_default']['default']) && count($form_state['selected_comp_default']['default'])>0){
    $defVal = (in_array($cnid, $form_state['selected_comp_default']['default']))?$cnid:'';
  } else {
    $defVal = ''; 
  }
  $CompanyNode = node_load($cnid);  
  $companyLogo = (isset($CompanyNode->field_logo['und'])) ? theme('image_style', array('style_name' => 'user_pic_32x32', 'path' => $CompanyNode->field_logo['und'][0]['uri'], 'getsize' => TRUE)) : '<img src="'.$base_url.'/sites/all/themes/m6connect/images/default_company_profile.jpg" style="height:32; width:32px"/>'; 
    $compdiv = '<div class="ob-submit-user-detail pull-left"><span>'.$companyLogo.'</span><span>'.$CompanyNode->title.'</span></div>';
    $element['allowed_companies_'.$cnid]= array(
      '#type' => 'checkbox',
    '#title' => '',
    '#return_value' => $cnid,
    '#attributes' => array('class'=> array('onboarding-chkbox-option')),
    '#prefix' => '<div class="m6-allowed-comp-ob-chkbx clearfix margin-bottom-10">',
    '#suffix' => $compdiv.'</div>',
    '#default_value' => $defVal,
    );          
  } 
  return $element;
}

function onboarding_additional_companies_submitted_process($element, &$form_state){
  $additionalCompanies = $form_state['allowed_additional_companies_storage'];
  $element['#storage_allowed_additional_companies'] = $additionalCompanies;
  $companyHasOBManagerListing = $form_state['company_having_ob_manager'];
  $ownCompanyListing = $form_state['own_company_listing'];
  
  foreach($additionalCompanies as $uniqueId => $detailes){
    
  $element[$uniqueId]['fcitemid_onboarding_company'] = array(
    '#type' => 'value',
    '#value'=> isset($detailes['id'])?$detailes['id']:'',
    '#parents' => array('additional_companies',$uniqueId,'fcitemid_onboarding_company'),
  );
  
  $element[$uniqueId]['own_onboarding_company'] = array(
    '#type' => 'select',
    '#attributes'=> array('class'=> array('form-control','own-onboarding-company')),
    '#parents' => array('additional_companies',$uniqueId,'own_onboarding_company'),
    '#options' => $ownCompanyListing,
    '#empty_option' => '-Select Company-', 
    '#empty_value' => '',
    '#default_value' => isset($detailes['request_from'])?$detailes['request_from']:'',
  );
  
  $element[$uniqueId]['autocompany_onboarding_company'] = array(
    '#type' => 'textfield',
    '#title' => 'Company Autocomplete',
    '#title_display' => 'invisible',
    '#attributes'=> array('class'=> array('form-control','autocompany-onboarding-company'),'placeholder'=>'Add additional companies'),
    '#parents' => array('additional_companies',$uniqueId,'autocompany_onboarding_company'),
    '#autocomplete_path' => 'company-obm/autocomplete',
    '#default_value' => isset($detailes['request_to'],$companyHasOBManagerListing[$detailes['request_to']])?$companyHasOBManagerListing[$detailes['request_to']]:'',
    '#ajax' => array(
    'callback' => 'autocompany_onboarding_company_callback',
    'event' => 'blur',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    ), 
  );
  
  $element[$uniqueId]['autoselect_onboarding_company'] = array(
    '#type' => 'select',
    '#attributes'=> array('class'=> array('form-control','autoselect-onboarding-company'),'style'=> 'display:none;'),
    '#parents' => array('additional_companies',$uniqueId,'autoselect_onboarding_company'),
    '#options' => $companyHasOBManagerListing,
    '#empty_option' => 'Company', 
    '#empty_value' => '',
    '#default_value' => isset($detailes['request_to'])?$detailes['request_to']:'',
  ); 
  
  $element[$uniqueId]['autoselect_onboarding_project'] = array(
    '#type' => 'select',
    '#attributes'=> array('class'=> array('form-control','autoselect-onboarding-project')),
    '#parents' => array('additional_companies',$uniqueId,'autoselect_onboarding_project'),
    '#options' => $form_state['additional-company-onboarding-project'][$uniqueId],
    '#empty_option' => 'Project(s)', 
    '#empty_value' => '',
    '#default_value' => isset($detailes['request_project'])?$detailes['request_project']:'',
  );
  
  $element[$uniqueId]['autocomplete_onboarding_company_remove']= array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => 'autocomplete_onboarding_company_remove'.$uniqueId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('workflow-remove-submit','rs-type-save-submit','remove-routing-type-'.$uniqueId)),
    '#parents' => array('additional_companies',$uniqueId,'autocomplete_onboarding_company_remove'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('autocomplete_onboarding_company_remove_submit_handler'),
    '#ajax' => array(
    'callback' => 'autocomplete_onboarding_company_remove_ajax_remove_callback',
    'wrapper' => 'allowed-additional-companies-container',
    'method' => 'replace',
    'effect' => 'fade',
    //'event' => 'click',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
     ),
  );
  
  if(isset($detailes['id']) && is_numeric($detailes['id'])){
    $element[$uniqueId]['own_onboarding_company']['#attributes']['class'][]='form-disabled-field';
    $element[$uniqueId]['autocompany_onboarding_company']['#attributes']['class'][]='form-disabled-field';
    $element[$uniqueId]['autoselect_onboarding_company']['#attributes']['class'][]='form-disabled-field';
    $element[$uniqueId]['autoselect_onboarding_project']['#attributes']['class'][]='form-disabled-field';
  }
  }
  return $element;  
}

function autocompany_onboarding_company_callback($form,&$form_state){
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  $identifer = $triggering_element['#parents'][1];
  $companyListing = $form_state['company_having_ob_manager'];
  $companyListing = array_flip($companyListing);
  $commands[] = ajax_command_replace("#allowed-additional-companies-container", render($form['allowed_additional_companies_container']));
  $companyNid='';
  if(isset($companyListing[$triggering_element['#value']])){
    $companyNid = $companyListing[$triggering_element['#value']];
  }
  $commands[] = ajax_command_invoke('select[name="additional_companies['.$identifer.'][autoselect_onboarding_company]"]','val',array($companyNid));
  return array('#type' => 'ajax','#commands' => $commands); 
}

function autocomplete_onboarding_company_remove_ajax_remove_callback($form,&$form_state){
  return $form['allowed_additional_companies_container']; 
}

function autocomplete_onboarding_company_remove_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1];
  if(isset($form_state['allowed_additional_companies_storage'][$identifier])){
    unset($form_state['allowed_additional_companies_storage'][$identifier]);
  }
  $form_state['rebuild'] = TRUE;
}

function theme_onboarding_additional_companies_theme($variables) {
  $element = $variables['form'];
  $output = '';
  $helpLinik = l('<i class="fa fa-question-circle onboarding-question-circle"></i>','javascript:void(0);', array('html'=>TRUE,'external'=>TRUE, 'attributes'=> array('class'=> array('onboarding-question-help','additional-companies-help-link'))));
  $header = array('Request Approval to M6ID '.$helpLinik,'','','');
  $storage = $element['#storage_allowed_additional_companies']; 
  $rows = array();
  foreach($storage as $uniqueId => $companyNid){
    $autocompleteRow = drupal_render($element[$uniqueId]['autocompany_onboarding_company']).drupal_render($element[$uniqueId]['autoselect_onboarding_company']); 
   $rows[] = array(
     'data'=> array(
       array('data'=>drupal_render($element[$uniqueId]['own_onboarding_company']),'class'=> array('own-onboarding-td','autocompany-onboarding-td')),
       array('data'=>$autocompleteRow,'class'=> array('autocompany-onboarding-td')),
     array('data'=>drupal_render($element[$uniqueId]['autoselect_onboarding_project']),'class'=> array('project-onboarding-td','autocompany-onboarding-td')),
       array('data'=>drupal_render($element[$uniqueId]['autocomplete_onboarding_company_remove']),'class'=> array('autocompany-onboarding-action-td','text-right','workflow-remove-td')),
     ),
     'class'=>array('even'), 
   );
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('autocompany-onboarding-table','table','m6connect-custom-table','table-hover','m6connect-table-border'))));
  return $output;
}

/**
 * Implements hook_form_FORM_ID_alter.
 */

function m6connect_onboarding_form_onboarding_node_form_alter(&$form, &$form_state, $form_id){
  global $user, $base_url, $company;
  form_load_include($form_state, 'inc', 'node', 'node.pages');
  if(empty($form_state['onboarding_form_initialize'])){
  $currentUserUid = $form['uid']['#value'];
  $currentUserObj = user_load($form['uid']['#value']);
    $form_state['onboarding_form_initialize']=1;
  $form_state['onboarding_node_user'] = $currentUserObj;
  $userRealName = $form_state['onboarding_node_user']->realname;
  $form['title']['#default_value'] = 'for '.$userRealName;
  $form['title']['#value'] = 'for '.$userRealName;
  if(empty($form['nid']['#value'])){
    if(isset($currentUserObj->field_phone['und']) && !empty($currentUserObj->field_phone['und'][0]['value'])){
      $form['field_cellular_phone']['und'][0]['value']['#default_value'] = $currentUserObj->field_phone['und'][0]['value'];
    }
    if(isset($currentUserObj->field_mobile_phone['und']) && !empty($currentUserObj->field_mobile_phone['und'][0]['value'])){
      $form['field_phone']['und'][0]['value']['#default_value'] = $currentUserObj->field_mobile_phone['und'][0]['value']; 
    }
    if(isset($currentUserObj->field_alt_phone['und']) && !empty($currentUserObj->field_alt_phone['und'][0]['value'])){
      $form['field_alt_phone']['und'][0]['value']['#default_value'] = $currentUserObj->field_alt_phone['und'][0]['value'];  
    }
  }
  }
  $form['#attributes']['autocomplete'] ='off';
  $form['#process'][] = 'onboarding_node_process_callback_handler';
  $form['#after_build'][] = 'custom_onboarding_after_build';
  //print "<pre>"; print_r($form); die;
  unset($form['field_are_you_a_us_citizen']['und']['#options']['_none']);
}


function onboarding_node_process_callback_handler($form,&$form_state){
 global $user;
  //****************************//////////////////////
     $m6Nid = get_user_onboarding_nid($user->uid);
     $M6idnode = node_load($m6Nid);
     $uscitizen  = $M6idnode->field_are_you_a_us_citizen['und'][0]['value'];
     $fieldphone = $M6idnode->field_phone['und'][0]['value'];
     $emergencyfirstname = $M6idnode->field_emergency_first_name['und'][0]['value'];
     $emergencylastname = $M6idnode->field_emergency_last_name['und'][0]['value'];
     $emergencyphonenumber = $M6idnode->field_emergency_phone_number['und'][0]['value'];

     if(empty($uscitizen) && empty($fieldphone) && empty($emergencyfirstname) && empty($emergencylastname) && empty($emergencyphonenumber)){
       $form['actions']['submit']['#value'] = 'Submit your M6ID';
     }
     else{
       $form['actions']['submit']['#value'] = 'Save';
     }
     

  //***************************////////////////////////
  $form['actions']['submit']['#submit'][] = 'custom_onboarding_node_submit_redirection';
  $form['field_vehicle_insurance_statemen']['und'][0]['value']['#attributes']['placeholder'] = t('Company Name');
  if(isset($form['field_drivers_license_issuance']['und'][0]['locality_block'])){
  $form['field_drivers_license_issuance']['und'][0]['locality_block']['locality']['#access'] = FALSE; 
  $form['field_drivers_license_issuance']['und'][0]['locality_block']['administrative_area']['#title'] = 'State of Issuance';
  $form['field_drivers_license_issuance']['und'][0]['country']['#title'] = 'Country of Issuance';
  }
  if(in_array($form_state['storage']['step'], array('step_ob_personal_information'))){
  $form['actions']['delete']['#access']= FALSE;
  $form['actions']['skip']['#access']= FALSE;
  $form['actions']['next']['#access'] = FALSE;
  $form['actions']['previous']['#access']= FALSE; 
  }
  drupal_add_css('.personal_information_title {display:none;}', 'inline');
  /*$js = "jQuery('document').ready(function(){
         jQuery('.form-item-field-are-you-a-us-citizen-und .form-required').hide();
       });";
  drupal_add_js($js, 'inline'); */
  return $form; 
}

function custom_onboarding_after_build($form,&$form_state){
  $form['field_policy_expiration_date']['und'][0]['value']['date']['#attributes']['placeholder'] = t('Policy Expiration Date');
  if(isset($form['field_onbarding_credentials'])){
  if(isset($form['field_onbarding_credentials']['#suffix'])){
    $form['field_onbarding_credentials']['#suffix'] .= '<div id="onboarding-question-credential-type-help"></div>';     
  }else{
    $form['field_onbarding_credentials']['#suffix'] = '<div id="onboarding-question-credential-type-help"></div>';  
  }
  
  }
  return $form; 
}

function custom_onboarding_node_submit_redirection($form, &$form_state){
  global $user, $base_url;
  $values = $form_state['values'];
  $nuid ='';
  if(isset($form_state['node']->uid) && !empty($form_state['node']->uid)){
    $nuid =  $form_state['node']->uid; 
  } else {
  $nuid = $user->uid; 
  }
  if(isset($form_state['build_info']['args'],$form_state['build_info']['args'][0]->user_profile_credental) && $form_state['build_info']['args'][0]->user_profile_credental == 1){
    $form_state['redirect'] = 'user/'.$nuid;
  theme('status_messages');
  }else{
    $form_state['redirect'] = 'user/'.$nuid.'/m6id-info';
  }
}

/*function trigger_add_another_credentials($form,&$form_state){
  $commands = array();
  $commands[] = ajax_command_invoke('input[name="field_onbarding_credentials_add_more"]', 'trigger',array('mousedown'));
  return array('#type' => 'ajax', '#commands' => $commands);    
}*/

/**
 * Implements hook_field_widget_form_alter.
 */
function m6connect_onboarding_field_widget_form_alter(&$element, &$form_state, $context) {
  if(isset($element['#field_name']) && $element['#field_name']=='field_onbarding_credentials' && $context['instance']['bundle']=='onboarding') {
  if(isset($element['field_ob_credential_type']['und'])){
    $helpLink = l('<i class="fa fa-question-circle onboarding-question-help"></i>','#', array('html'=>TRUE,'external'=>TRUE, 'attributes'=> array('class'=> array('onboarding-question-help','credentials-type-help-link'))));
    $element['field_ob_credential_type']['und']['#title'] .= ' '.$helpLink;
  }
  //kpr($element);
  }
}

function m6connect_email_validate($element, &$form_state, $form){
  $value = $element['#value'];
  if (!valid_email_address($value)) {
    form_error($element, t('Please enter your valid email address.'));
  } 
}

function onboarding_login_credential_validate_handler($form, &$form_state){ 
  $values = $form_state['values']; //pre($values,1);
  $nodeUserUid = $values['uid'];
  $usermail = trim($values['user_credendial_email']);
  $userpass = trim($values['user_credendial_password']);
  $nodeUserAccount = user_load($nodeUserUid); 
  //if(!($nodeUserAccount->mail == $usermail && user_check_password($userpass, $nodeUserAccount))){
  if(!(($nodeUserAccount->mail == $usermail || $nodeUserAccount->name == $usermail) && user_check_password($userpass, $nodeUserAccount))){    
  form_set_error('', 'Wrong Login Credential, Please try again');
  }
}

function onboarding_login_credential_submitted_validate_handler($form, &$form_state){
  $values = $form_state['values'];
  $nodeUserUid = $values['uid'];
  $usermail = trim($values['user_credendial_email_submitted']);
  $userpass = trim($values['user_credendial_password_submitted']);
  $nodeUserAccount = user_load($nodeUserUid);
  //if(!($nodeUserAccount->mail == $usermail && user_check_password($userpass, $nodeUserAccount))){
  if(!(($nodeUserAccount->mail == $usermail || $nodeUserAccount->name == $usermail) && user_check_password($userpass, $nodeUserAccount))){    
  form_set_error('', 'Wrong Login Credential, Please try again');
  }
}

/*
 * get user's company without individual
 */

function _get_user_companies_without_individual($account){
  $allcompanies = $companies = array(); 
  $allcompanies = _get_user_companies($account);
  if(!empty($allcompanies) && is_array($allcompanies) && count($allcompanies)>0){
  foreach($allcompanies as $k=>$cnid){
    if(!is_company_individual_flag($cnid))  {
    $companies[] = $cnid;  
    }
  }
  }
  return $companies;
}

/*
 * get onboarding nid for specific user($uid)
 */
function get_user_onboarding_nid($uid){
  $type = 'onboarding'; 
  $query = db_select('node','n');
  $query->fields('n', array('nid'));
  $query->condition('n.uid',$uid,'=');
  $query->condition('n.type', $type, '=');  
  $return = $query->execute()->fetchColumn(0);
  return $return;
}

function is_user_onboarding_company_credential($uid){
  $type = 'onboarding'; 
  $query = db_select('node','n');
  $query->leftjoin('field_data_field_company_confidential','fcc','fcc.entity_id=n.nid');
  $query->fields('fcc', array('field_company_confidential_value'));
  $query->condition('n.uid',$uid,'=');
  $query->condition('n.type', 'onboarding', '='); 
  return $query->execute()->fetchColumn(0);
}


/*
 * render user's onboarding information on user profile.
 */
function custom_onboarding_view_login_form($form, &$form_state, $uid) {
  global $user;
  form_load_include($form_state, 'inc', 'content', 'includes/password');
  $form['user_uid']= array(
    '#type' => 'value',
    '#value'=> $uid,
  );
  $form['onboarding_user_view_container'] = array(
    '#type' => 'container',
    '#prefix' => '<div id="m6-onboarding-user-view" class="m6-onboarding-user-view">',
    '#suffix' => '</div>',
  //'#process' => array('m6_onboarding_user_view_process')
  );
  $form['onboarding_user_view_container']['ob_view_email'] = array(
    '#type' => 'textfield',
  '#title' => 'Email',
  '#attributes' => array('autocomplete'=>'off'),
  '#required' => TRUE,
  '#weight' => 2,
  ); 
  $form['onboarding_user_view_container']['ob_view_password'] = array(
  '#type' => 'password',
  '#title' => 'Password',
  '#attributes' => array('autocomplete'=>'off'),
  '#required' => TRUE,
  '#weight' => 4,
  ); 

  $form['onboarding_user_view_container']['submit'] = array(
    '#type' => 'submit', 
  '#value' => 'Submit',
  '#ajax' => array(
    'callback' => 'onboarding_user_view_callback',
    'event' => 'click',
    'wrapper' => 'm6-onboarding-user-view',
    'method' => 'replace',
  ),
  '#weight' => 6,
  );

   return $form;
}

/*
 * callback function for custom_onboarding_view_login_form.
 */
function onboarding_user_view_callback(&$form, $form_state){
  global $user; 
  
  if (!empty($form_state['values']['ob_view_email']) && !empty($form_state['values']['ob_view_password'])) {
  $values = $form_state['values']; //pre($values,1);
    $usermail = trim($values['ob_view_email']);
    $userpass = trim($values['ob_view_password']);
  $uid = trim($values['user_uid']);
    if(!(($user->mail == $usermail || $user->name == $usermail) && user_check_password($userpass, $user))){   
    $form['onboarding_user_view_container']['empty_mrkp']= array(
      '#markup' => '<div class="messages--error messages error">Wrong Login Credential, Please try again.</div>',
    '#weight' => 0,
      );
    return $form;
    } else {
    $ob_nid = get_user_onboarding_nid($uid);  
    if($ob_nid) {
      $node = node_load($ob_nid); //4989
        $elements = node_view($node, 'full');
        $rendered_node = drupal_render($elements);
        return $rendered_node;
    } else {
    $form['onboarding_user_view_container']['empty_mrkp']= array(
        '#markup' => '<div class="messages--status messages status">M6ID information not created yet.</div>',
      '#weight' => 0,
        );
      return $form;  
    }
  }
  }
  return $form; 
}

/*
 * function return the access for user onboarding information creation.
 */
function onboarding_create_access_callback($uid = null){
  global $user;
  if ($uid == null) {
    $uid = $user->uid;
  } 
  $cmpNid = isset($_SESSION['company'])?$_SESSION['company']:'';
  if(is_company_individual_flag($cmpNid)){
  return FALSE;  
  }
  $query = db_select('users','u');
  $query->leftjoin('field_data_field_allow_onboarding_access','arsa','u.uid=arsa.entity_id');
  $query->fields('arsa',array('field_allow_onboarding_access_value'));
  $query->condition('u.uid',$uid,'=');
  $query->condition('arsa.field_allow_onboarding_access_value',1,'=');
  $result = $query->execute()->fetchColumn(0);
  return $result;   
}

/*
 * function return the access for view onboarding information for user and onboarding manager.
 */
function onboarding_view_access_callback($uid = null){
  global $user, $company;
  $cmpNid = isset($_SESSION['company'])?$_SESSION['company']:'';
  if ($uid == null) {
    $uid = $user->uid;
  } 
  if($uid == $user->uid) {
  if(isset($user->roles[3])) {
    return TRUE;    
  }
  
  $ob_nid = get_user_onboarding_nid($uid);
  
    $query = db_select('users','u');
    $query->leftjoin('field_data_field_allow_onboarding_access','arsa','u.uid=arsa.entity_id');
    $query->fields('arsa',array('field_allow_onboarding_access_value'));
    $query->condition('u.uid',$uid,'=');
    $query->condition('arsa.field_allow_onboarding_access_value',1,'=');
    $result = $query->execute()->fetchColumn(0);
    //return $result;
  if($ob_nid && $result) {
    return TRUE;  
  } else {
    return FALSE; 
  }
  } else {  
  //test
  $CompanyRoles = og_get_user_roles('node', $cmpNid, $user->uid);
    $onboardingManager = (in_array('M6ID Manager', $CompanyRoles))?1:0;  
  $ob_nid = get_user_onboarding_nid($uid);
  if($ob_nid) {
    $query = db_select('node','n');
      $query->leftjoin('field_data_field_confirm_the_m6onboarding','cn','n.nid=cn.entity_id');
      $query->fields('cn',array('field_confirm_the_m6onboarding_value'));
      $query->condition('n.nid',$ob_nid,'=');
      $query->condition('cn.field_confirm_the_m6onboarding_value',1,'=');
      $result = $query->execute()->fetchColumn(0);
    
    $allowed_comp_nids =  _get_onboarding_allowed_companies_by_uid($uid);
    if(is_array($allowed_comp_nids) && !empty($allowed_comp_nids) && count($allowed_comp_nids)>0) {
      if((in_array($cmpNid, $allowed_comp_nids) && $onboardingManager && $result) || isset($user->roles[3])) {
      return TRUE;  
    } 
    return FALSE; 
    } else {
      return FALSE;   
    }
  } else {
    return FALSE; 
  }
  }
} 

/*
 * get user's onboarding allowed companies
 */
function _get_onboarding_allowed_companies_by_uid($uid) {
  $query = db_select('node','n');
  $query->join('field_data_field_allow_onboarding_companies','oc','n.nid=oc.entity_id');
  $query->fields('oc',array('field_allow_onboarding_companies_nid'));
  $query->condition('n.uid',$uid,'=');
  $query->condition('n.type', 'onboarding', '=');
  $result = $query->execute()->fetchAll();
  $nids = array();
  if($result && !empty($result) && count($result)>0){
  foreach($result as $k=>$val) {
    $nids[] = $val->field_allow_onboarding_companies_nid;
  }
  }
  return $nids;
}

/*
 * Implement Hook_node_access
 */
function m6connect_onboarding_node_access($node, $op, $account){
  global $user; 
  
  $type = (is_object($node) && isset($node->type)) ? $node->type : '';  
  $cmpNid = isset($_SESSION['company'])?$_SESSION['company']:'';
  if(empty($type) && in_array($node, array('onboarding')) && in_array($op, array('create'))) {
  if (isset($user->roles[3]) || isset($user->roles[6]) || onboarding_create_access_callback($user->uid)) {  
        return NODE_ACCESS_ALLOW;
    } 
    return NODE_ACCESS_DENY;  
  } 
  if (is_object($node) && in_array($node->type, array('onboarding')) && in_array($op, array('view'))) {
    if (!user_is_logged_in()) {
    return NODE_ACCESS_DENY;
  } 
  if (isset($user->roles[3]) || isset($user->roles[6]) || onboarding_view_access_callback($node->uid)) {  
  //if(onboarding_view_access_callback($node->uid)) {
    if ($node->status == 1) {
    return NODE_ACCESS_ALLOW;
    } else if (isset($user->roles[3]) || isset($user->roles[6]) || (onboarding_view_access_callback($node->uid) && $user->uid == $node->uid)) {
    return NODE_ACCESS_ALLOW;
    }
  } 
    return NODE_ACCESS_DENY;    
  } elseif (is_object($node) && in_array($node->type, array('onboarding')) && in_array($op, array('update','delete'))) {
    if (!user_is_logged_in()) {
    return NODE_ACCESS_DENY;
  } 
  if (isset($user->roles[3]) || isset($user->roles[6]) || ($user->uid == $node->uid)) {
    return NODE_ACCESS_ALLOW;
  } 
    return NODE_ACCESS_DENY;  
  }
  return NODE_ACCESS_IGNORE;
} 

/*
 * onboarding manager and site manager premission for menu
 */
function m6_onboarding_manager_access(){
  return TRUE;  
}

/*
 * Implement HOOK_init
 */
function m6connect_onboarding_init() {
    global $user, $base_url;
    $userid = $user->uid;
    drupal_add_js(drupal_get_path('module', 'm6connect_onboarding') . '/m6connect_onboarding.js'); 
}


function update_user_on_onboarding_update($node){
  $nuser = user_load($node->uid);
  if(isset($node->field_first_name['und'][0]) && isset($node->field_first_name['und'][0]['value']) && !empty($node->field_first_name['und'][0]['value'])) { //pre('fname');
    $nuser->field_first_name['und'][0]['value'] = $node->field_first_name['und'][0]['value']; 
  }
  if(isset($node->field_middle_name['und'][0]) && isset($node->field_middle_name['und'][0]['value']) && !empty($node->field_middle_name['und'][0]['value'])) {
    $nuser->field_middle_name['und'][0]['value'] = $node->field_middle_name['und'][0]['value']; 
  }
  if(isset($node->field_last_name ['und'][0]) && isset($node->field_last_name['und'][0]['value']) && !empty($node->field_last_name['und'][0]['value'])) {
    $nuser->field_last_name['und'][0]['value'] = $node->field_last_name['und'][0]['value']; 
  }
  if(isset($node->field_date_of_birth['und'][0]) && isset($node->field_date_of_birth['und'][0]['value']) && !empty($node->field_date_of_birth['und'][0]['value'])) {
    $nuser->field_date_of_birth['und'][0]['value'] = $node->field_date_of_birth['und'][0]['value']; 
  }
  if(isset($node->field_phone['und'][0]) && isset($node->field_phone['und'][0]['value']) && !empty($node->field_phone['und'][0]['value'])) {
    $nuser->field_phone['und'][0]['value'] = $node->field_phone['und'][0]['value']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['country']) && !empty($node->field_address['und'][0]['country'])) { //pre('country');
    $nuser->field_address['und'][0]['country'] = $node->field_address['und'][0]['country']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['thoroughfare']) && !empty($node->field_address['und'][0]['thoroughfare'])) {//pre('through');
    $nuser->field_address['und'][0]['thoroughfare'] = $node->field_address['und'][0]['thoroughfare']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['premise']) && !empty($node->field_address['und'][0]['premise'])) {
    $nuser->field_address['und'][0]['premise'] = $node->field_address['und'][0]['premise']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['locality']) && !empty($node->field_address['und'][0]['locality'])) {
    $nuser->field_address['und'][0]['locality'] = $node->field_address['und'][0]['locality']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['administrative_area']) && !empty($node->field_address['und'][0]['administrative_area'])) {
    $nuser->field_address['und'][0]['administrative_area'] = $node->field_address['und'][0]['administrative_area']; 
  }
  if(isset($node->field_address['und'][0]) && isset($node->field_address['und'][0]['postal_code']) && !empty($node->field_address['und'][0]['postal_code'])) {
    $nuser->field_address['und'][0]['postal_code'] = $node->field_address['und'][0]['postal_code']; 
  }
  
  if(isset($node->field_organization_mail['und'][0]) && isset($node->field_organization_mail['und'][0]['email']) && !empty($node->field_organization_mail['und'][0]['email'])) {
    //$nuser->mail = $node->field_organization_mail['und'][0]['email']; 
  }
  //pre($nuser,1);
  
  user_save($nuser);  
}


/*
 * Implement HOOK_node_insert
 */
function m6connect_onboarding_node_insert($node){
  
 if($node->type == 'organization'){   
  $companyNid = $node->nid;
  $insertValues = array(
     array('company_nid' =>$companyNid,'employee_type' => 'Employee','default_status' =>1),
     array('company_nid' =>$companyNid,'employee_type' => 'Contractor','default_status' =>1),
     array('company_nid' =>$companyNid,'employee_type' => 'Vendor','default_status' =>1),
     array('company_nid' =>$companyNid,'employee_type' => 'Consultant','default_status' =>1),
    );

  $insertEmpTypeQuery = db_insert('m6connect_onboarding_employee_types')->fields(array('company_nid', 'employee_type', 'default_status'));
  foreach($insertValues as $delta => $fields){
    $insertEmpTypeQuery->values($fields);
  }
  $insertEmpTypeQuery->execute();  
  }
  if($node->type == 'onboarding'  && !isset($node->no_user_update)){
  $account = user_load($node->uid);  
  $edit = array(); 
    if(isset($node->field_cellular_phone['und']) && !empty($node->field_cellular_phone['und'][0]['value'])){
     $edit['field_phone']['und'][0]['value'] = $node->field_cellular_phone['und'][0]['value'];
  }
  if(isset($node->field_phone['und']) && !empty($node->field_phone['und'][0]['value'])){
     $edit['field_mobile_phone']['und'][0]['value'] = $node->field_phone['und'][0]['value'];
  }
  if(isset($node->field_alt_phone['und']) && !empty($node->field_alt_phone['und'][0]['value'])){
     $edit['field_alt_phone']['und'][0]['value'] = $node->field_alt_phone['und'][0]['value'];
  }
  if(!empty($edit)){
    $edit['no_node_update'] = 1;
    user_save($account,$edit);
  }
  }
}

/*
 * Implement HOOK_node_update
 */
function m6connect_onboarding_node_update($node){
  if($node->type == 'onboarding' && !isset($node->no_user_update)){
  $account = user_load($node->uid);  
  $edit = array(); 
    if(isset($node->field_cellular_phone['und']) && !empty($node->field_cellular_phone['und'][0]['value'])){
     $edit['field_phone']['und'][0]['value'] = $node->field_cellular_phone['und'][0]['value'];
  }
  if(isset($node->field_phone['und']) && !empty($node->field_phone['und'][0]['value'])){
     $edit['field_mobile_phone']['und'][0]['value'] = $node->field_phone['und'][0]['value'];
  }
  if(isset($node->field_alt_phone['und']) && !empty($node->field_alt_phone['und'][0]['value'])){
     $edit['field_alt_phone']['und'][0]['value'] = $node->field_alt_phone['und'][0]['value'];
  }
  if(!empty($edit)){
    $edit['no_node_update'] = 1;
    user_save($account,$edit);
  }
  }
}

/*
 * Implement HOOK_user_update
 */
function m6connect_onboarding_user_update(&$edit, $account, $category){
  if(!isset($edit['no_node_update'])){
  $ob_nid = get_user_onboarding_nid($account->uid); 
  $insideUpdate = 0;
  if($ob_nid) {
    $obnode = node_load($ob_nid); 
    if(($edit['mail'] != $account->original->mail) || ($edit['field_first_name']['und'][0]['value'] != $account->original->field_first_name['und'][0]['value']) || ($edit['field_last_name']['und'][0]['value'] != $account->original->field_last_name['und'][0]['value']) || ($edit['field_date_of_birth']['und'][0]['value'] != $account->original->field_date_of_birth['und'][0]['value']) || ($edit['field_phone']['und'][0]['value'] != $account->original->field_phone['und'][0]['value']) || ($edit['field_address']['und'][0]['country'] != $account->original->field_address['und'][0]['country']) || ($edit['field_address']['und'][0]['thoroughfare'] != $account->original->field_address['und'][0]['thoroughfare']) || ($edit['field_address']['und'][0]['premise'] != $account->original->field_address['und'][0]['premise'])
    || ($edit['field_address']['und'][0]['locality'] != $account->original->field_address['und'][0]['locality']) || ($edit['field_address']['und'][0]['administrative_area'] != $account->original->field_address['und'][0]['administrative_area']) || ($edit['field_address']['und'][0]['postal_code'] != $account->original->field_address['und'][0]['postal_code'])) {
    $obnode->field_first_name['und'][0]['value'] = $edit['field_first_name']['und'][0]['value'];
    $obnode->field_last_name['und'][0]['value'] = $edit['field_last_name']['und'][0]['value'];
    $obnode->field_date_of_birth['und'][0]['value'] = $edit['field_date_of_birth']['und'][0]['value'];
    $obnode->field_organization_mail['und'][0]['email'] = $account->mail;
    $obnode->field_address['und'][0]['country'] = $edit['field_address']['und'][0]['country'];
    $obnode->field_address['und'][0]['thoroughfare'] = $edit['field_address']['und'][0]['thoroughfare'];
    $obnode->field_address['und'][0]['premise'] = $edit['field_address']['und'][0]['premise'];
    $obnode->field_address['und'][0]['locality'] = $edit['field_address']['und'][0]['locality'];
    $obnode->field_address['und'][0]['administrative_area'] = $edit['field_address']['und'][0]['administrative_area'];
    $obnode->field_address['und'][0]['postal_code'] = $edit['field_address']['und'][0]['postal_code'];
    $obnode->field_middle_name = $edit['field_middle_name'];
    $obnode->no_user_update = 1;
    $insideUpdate = 1;
    //node_save($obnode);
    }
    if(!isset($edit['no_user_update'])){
    if(isset($edit['field_phone']['und'][0]['value']) && !empty($edit['field_phone']['und'][0]['value'])){
      $obnode->field_cellular_phone['und'][0]['value'] = $edit['field_phone']['und'][0]['value'];
      $obnode->no_user_update = 1;
      $insideUpdate = 1;
    }
    if(isset($edit['field_mobile_phone']['und'][0]['value']) && !empty($edit['field_mobile_phone']['und'][0]['value'])){
      $obnode->field_phone['und'][0]['value'] = $edit['field_mobile_phone']['und'][0]['value'];
      $obnode->no_user_update = 1;
      $insideUpdate = 1;
    }
    if(isset($edit['field_alt_phone']['und'][0]['value']) && !empty($edit['field_alt_phone']['und'][0]['value'])){
      $obnode->field_alt_phone['und'][0]['value'] = $edit['field_alt_phone']['und'][0]['value'];
      $obnode->no_user_update = 1;
      $insideUpdate = 1;
    }
    }
    if(isset($obnode->no_user_update)){
    node_save($obnode);  
    }
  }
  }
}

/****************************************************** Onboarding invitation process start *******************************************/
/*
 * Invite form for onboarding
 */
 
function _get_company_onboarding_projects($companyNid){
  $projectQuery = db_select('node','n');
  $projectQuery->leftjoin('og_membership','og','og.etid=n.nid AND og.entity_type=:entityType', array(':entityType'=>'node'));
  $projectQuery->fields('n', array('nid','title'));
  $projectQuery->condition('n.status',1,'=');
  $projectQuery->condition('n.type','onboarding_project','=');
  $projectQuery->condition('og.gid',$companyNid,'=');
  $projectList=$projectQuery->execute()->fetchAllKeyed(0,1);
  return $projectList;  
}

function  onboarding_company_user_invite_form($form, &$form_state){
  global $company;
  $form['#attributes'] = array('class'=>array('onboarding-invite-form'));
  if(empty($form_state['comapny_listing'])){
    $form_state['comapny_listing'] = _get_all_organigation_mapping();
  $_SESSION['comapny_listing'] = $form_state['comapny_listing'];
  }
  if(empty($form_state['company-onboarding-project'])){
  $form_state['company-onboarding-project'] = _get_company_onboarding_projects($company->nid); 
  }
  
  $companyListing = $form_state['comapny_listing'];
  if(empty($form_state['workflow_storage'])){
  $form_state['workflow_storage'] = array();
  $tempIdentifer = uniqid();
  $form_state['workflow_storage'][$tempIdentifer]= array(
    'type'=>'invite_by_company',
    'projects' => array(),
    );
  }
  
  $form['workflow_container']= array(
  '#type'=>'container',
  '#title' => '',
  '#theme' => 'onboarding_invite_theme',
  '#tree' => TRUE,
  '#attributes' => array('class'=>array('workflow-container-section')),
  '#prefix' => '<div id="workflow-container-section" class="margin-bottom-10"><div class="workflow-container-label routing-table-label"></div>',
  '#suffix' => '</div>',
  '#process' => array('onboarding_workflow_process_callback'),
  );
  $form['workflow_action_container'] = array(
  '#type'=> 'container',
  '#prefix' => '<div id="action-container-section" class="action-container-section pull-left margin-bottom-10">',
  '#suffix' => '</div>',
  '#process' => array('onboarding_action_process_callback'),
  );
  
  $form['workflow_invited_data'] = array(
  '#type'=> 'container',
  '#prefix' => '<div id="onboarding-invited-data-section" class="onboarding-invited-data-section">',
  '#suffix' => '</div>',
  );
  
  $header = array('Company ID','Request Type','Company/Email','Project','Status','Action');
  $rows = _get_onboarding_invited_company_email_rows();
  $form['workflow_invited_data']['onboarding_invited_data'] = array(
  '#markup' => theme('table',array('header'=>$header,'rows'=>$rows,'empty'=>'No Invitation','attributes'=> array('class'=> array('onboarding-invited-table','table','table-hover','m6connect-custom-table','m6connect-table-border')))),
  );
  
  return $form; 
}

function _get_onboarding_invited_company_email_rows(){
  global $company;
  $rows = array();
  $db_or = db_or()->condition('moi.requester_company',$company->nid)->condition('moi.requestee_company',$company->nid);
  $query = db_select('m6connect_onboarding_invite','moi');
  $query->leftjoin('node','rn','rn.nid=moi.requestee_company');
  $query->leftjoin('node','sn','sn.nid=moi.requester_company');
  $query->leftjoin('node','pn','pn.nid=moi.invite_for_projects');
  $query->fields('moi');
  $query->addExpression('IF(moi.requester_company=:RequesterCompanyNid,:Requester,:Requestee)','request_type', array(':RequesterCompanyNid'=>$company->nid,':Requester'=>'Submitted',':Requestee'=>'Received'));
  $query->addField('rn','title','requestee_company_title');
  $query->addField('sn','title','requester_company_title');
  $query->addField('pn','title','project_title');
  $query->condition($db_or);
  $query->condition('moi.invite_status',1);
  $result = $query->execute()->fetchAll();
  
  if($result && !empty($result)){
  foreach($result as $index => $dataobj){
    $approverStatus = ($dataobj->approval_status==1)?'Accepted':(($dataobj->approval_status==2)?'Rejected':'Pending');
    $companyOrEmail = ($dataobj->request_type=='Received')?($dataobj->requester_company_title):((!empty($dataobj->requestee_company))?$dataobj->requestee_company_title:$dataobj->requestee_email);
    $companyNid = ($dataobj->request_type=='Received')?$dataobj->requester_company:$dataobj->requestee_company;
    $inviteAction = get_onboarding_invite_action_button($dataobj);
        
    $sendreminderLink = l('<input type="button" value="Send Reminder" class="form-submit">','onbording-invited-action/reminder/'.$dataobj->id.'/nojs',array('html'=>TRUE,'attributes'=> array('class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style'))));
    $removeLink= l('<i class="fa fa-trash-o onboarding-invitee-trash" style="font-size:22px;"></i>','onbording-invited-action/remove/'.$dataobj->id.'/nojs',array('html'=>TRUE,'attributes'=> array('class'=>array('use-ajax','onboarding-invitee-trash-link'))));
    
    $rows[] = array(
      'data'=>array($companyNid,$dataobj->request_type,$companyOrEmail,$dataobj->project_title,$approverStatus,$inviteAction),
    'class'=> array('custom-odd'),
    );  
  }
  }
  return $rows;
}

function get_onboarding_invite_action_button($dataObj){
  $reminderCm = '';
  if(!empty(arg(0)) && arg(0) == 'onboarding-invite-companies'){
    if(!empty(arg(1))){
      $reminderCm = '/'.arg(1);
    }
  }
  $button =  '<div class="btn-group">
          <div class="dropdown">
            <button id="request_invite_action_'.$dataObj->id.'" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Actions</button>
            <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="request_invite_action_'.$dataObj->id.'">';
  if($dataObj->request_type=='Received'){
    if($dataObj->approval_status==0){
      $button .=    '<li>'.l('Accept','onbording-invited-action/accept-requester/'.$dataObj->id.'/nojs/', array('attributes'=> array('class'=>array('use-ajax','onboarding-invite-accept-link')))).'</li>
             <li>'.l('Reject','onbording-invited-action/reject-requester/'.$dataObj->id.'/nojs/', array('attributes'=> array('class'=>array('use-ajax','onboarding-invite-reject-link')))).'</li>';
    }else if($dataObj->approval_status==1){
      $button .=    '<li>'.l('Accept','javascript:void(0);', array('external'=>TRUE,'attributes'=> array('class'=>array('action-link-disable')))).'</li>
             <li>'.l('Reject','onbording-invited-action/reject-requester/'.$dataObj->id.'/nojs/', array('attributes'=> array('class'=>array('use-ajax','onboarding-invite-reject-link')))).'</li>';
    }else if($dataObj->approval_status==2){
      $button .=    '<li>'.l('Accept','onbording-invited-action/accept-requester/'.$dataObj->id.'/nojs/', array('attributes'=> array('class'=>array('use-ajax','onboarding-invite-accept-link')))).'</li>
             <li>'.l('Reject','javascript:void(0);', array('external'=>TRUE,'attributes'=> array('class'=>array('action-link-disable')))).'</li>';
    }
  }else{
    $button .= '<li>'.l('Send Reminder','onbording-invited-action/reminder-requestee/'.$dataObj->id.'/nojs'.$reminderCm, array('attributes'=> array('class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style')))).'</li>
    <li>'.l('Revoke','onbording-invited-action/remove-requestee/'.$dataObj->id.'/nojs'.$reminderCm, array('attributes'=> array('class'=>array('use-ajax','onboarding-invitee-trash-link')))).'</li>';  
  }       
  $button .=      '</ul>
           </div>
           </div>';      
  return $button;        
}

function onbording_invited_action_callback($action,$dataId,$ajax=NULL){
  $commands = array();
  ctools_include('ajax');
  ctools_include('modal');
  if($action =='reminder-requestee'){
    if($ajax){
      $form_state = array(
      'ajax' => TRUE,
      'dataId' => $dataId,
      );
      $output = ctools_modal_form_wrapper('onboarding_invite_send_reminder', $form_state);
      if (!empty($form_state['ajax_commands'])) {
        $output = $form_state['ajax_commands'];
      }
      print ajax_render($output);
      drupal_exit();
    }else{
      return drupal_get_form('onboarding_invite_send_reminder',$dataId); 
    } 
  }elseif(in_array($action, array('remove-requestee','accept-requester','reject-requester'))){
    if($dataId && is_numeric($dataId)){
      if($action == 'remove-requestee'){
        db_update('m6connect_onboarding_invite')->fields(array('invite_status'=>0))->condition('id',$dataId)->execute();
      }else if($action == 'accept-requester'){
      db_update('m6connect_onboarding_invite')->fields(array('approval_status'=>1))->condition('id',$dataId)->execute(); 
      }else if($action == 'reject-requester'){
      db_update('m6connect_onboarding_invite')->fields(array('approval_status'=>2))->condition('id',$dataId)->execute(); 
      }
    }
    $header = array('Company Id','Request Type','Company/Email','Project','Status','Action');
    $rows = _get_onboarding_invited_company_email_rows();
    $tableHtml = theme('table',array('header'=>$header,'rows'=>$rows,'empty'=>'No Invitation','attributes'=> array('class'=> array('onboarding-invited-table','table','table-hover','m6connect-custom-table','m6connect-table-border'))));
    $commands[] = ajax_command_html('#onboarding-invited-data-section div.form-wrapper',$tableHtml);
  }
  print ajax_render($commands);
  drupal_exit(0); 
}

function onboarding_workflow_process_callback($element, &$form_state){
  $storage = $form_state['workflow_storage'];
  $element['#storage']= $storage;
  $companyListing = $form_state['comapny_listing'];
  $companyProjects = $form_state['company-onboarding-project'];
  foreach($storage as $uniqueId => $dataObj){
  if($dataObj['type'] =='invite_by_company'){
    /*$element['email_company'][$uniqueId]= array(
    '#type' => 'select',
    '#title' => $uniqueId,
    '#title_display' => 'invisible',
    '#options' => $companyListing,
    '#attributes'=> array('class'=> array('form-control','routing-company','onboarding-email-company'),'style'=>'display:none;'),
    '#parents' => array('invited_data',$uniqueId,'email_company'),
    '#empty_option' => 'Select Company',
    '#empty_value' =>'',
    );*/
    
    $element['email_company'][$uniqueId]= array(
    '#type' => 'textfield',
    '#title' => 'Company Autocomplete',
    '#title_display' => 'invisible',
    '#attributes'=> array('class'=> array('form-control','workflow-auto'),'placeholder'=>'Enter the company name'),
    '#parents' => array('invited_data',$uniqueId,'email_company'),
    '#autocomplete_path' => 'routing-company/autocomplete',
    /*'#ajax' => array(
      'callback' => 'onboarding_autocomplete_callback',
      'event' => 'blur',
      'wrapper' => 'workflow-container-section',
      'method' => 'replace',
      'effect' => 'fade',
    ),*/ 
    );
  }else{
    $element['email_company'][$uniqueId]= array(
    '#type' => 'textfield',
      '#title' => 'Email',
      '#title_display' => 'invisible',
    '#attributes'=> array('class'=> array('form-control','onboarding-email-company'),'placeholder'=>'Enter the Email'),
    '#parents' => array('invited_data',$uniqueId,'email_company'),
    );
  }
  
  $element['project'][$uniqueId]= array(
    '#type' => 'select',
    '#title' => 'Project',
    '#title_display' => 'invisible',
    '#options' => $companyProjects,
    '#empty_option' => '- SELECT -',
    '#empty_value' =>'',
    '#attributes'=> array('class'=> array('form-control','workflow-projects')),
    '#parents' => array('invited_data',$uniqueId,'project'),
  );  
  
  $element['remove'][$uniqueId]= array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => $uniqueId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('workflow-remove-submit')),
    '#parents' => array($uniqueId,'remove'),
    "#limit_validation_errors" => array(),
    '#submit'=> array('onboarding_remove_invited_submit_handler'),
    '#ajax' => array(
    'callback' => 'onboarding_remove_invited_callback',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
     ),
  );
  
  }
  return $element;  
}

function theme_onboarding_invite_theme($variables) {
  $element = $variables['form'];
  $output = '';
  $header = array('Company/Email','Project','');
  $storage = $element['#storage'];
  foreach($storage as $uniqueId => $dataObj){
  $autocompleteRow = '';
  if($dataObj['type'] == 'invite_by_company'){
   // $autocompleteRow = drupal_render($element['autocompany'][$uniqueId]); 
  }
  $rows[] = array(
    'data'=> array(
    array('data'=>$autocompleteRow.drupal_render($element['email_company'][$uniqueId]),'class'=> array('workflow-company-td','onboarding-invite-td')),
    array('data'=>drupal_render($element['project'][$uniqueId]),'class'=> array('workflow-user-td','onboarding-invite-td')),
    array('data'=>drupal_render($element['remove'][$uniqueId]),'class'=> array('workflow-remove-td')),
    ),
    //'class'=>array('even'),
  );  
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('onboarding-invite-workflow-table','table','table-hover','m6connect-custom-table','m6connect-table-border'))));
  $output .= drupal_render_children($element);
  return $output;
}

function onboarding_action_process_callback($element, &$form_state){
  
  $element['workflow_add_company'] = array(
    '#type'=>'submit',
  '#value' => 'Add by Company',
  '#name' => 'workflow_add_company',
  '#attributes'=> array('class'=>array('routing-workflow-action','routing-workflow-action-add-company'),'title'=>'Add M6 User by Company'),
  "#limit_validation_errors" => array(),
  '#submit'=> array('onboarding_workflow_add_company_email_submit_handler'),
  '#ajax' => array(
    'callback' => 'onboarding_workflow_action_callback',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
   ),
  );
  
  $element['workflow_add_email'] = array(
    '#type'=>'submit',
  '#value' => 'Add by Email',
  '#name' => 'workflow_add_email',
  '#attributes'=> array('class'=>array('routing-workflow-action','routing-workflow-action-add-email')),
  "#limit_validation_errors" => array(),
  '#submit'=> array('onboarding_workflow_add_company_email_submit_handler'),
  '#ajax' => array(
    'callback' => 'onboarding_workflow_action_callback',
    'wrapper' => 'workflow-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
   ),
  );
  
  $element['onboarding_invite_submit'] = array(
    '#type' => 'submit',
  '#value' => 'Invite',
  '#validate' => array('onboarding_invited_company_validate_handler'),
  '#submit' => array('onboarding_invited_company_submit_handler'),
  );
  
  return $element;  
}

function onboarding_invited_company_validate_handler(&$form, &$form_state){  
  $values = $form_state['values'];
  $storage = $form_state['workflow_storage'];
  $comapnyListing = array_flip($form_state['comapny_listing']);
  $errorCount = array('invite_by_company'=>0,'invite_by_email'=>0);
  foreach($values['invited_data'] as $uniqueId => $dataObj){
  $email_company = trim($dataObj['email_company']);
  if(isset($storage[$uniqueId])){
    $inviteType = $storage[$uniqueId]['type'];
    if($storage[$uniqueId]['type'] == 'invite_by_company'){
    if(!isset($comapnyListing[$email_company])){
      $message = ($errorCount['invite_by_company']==0)?'Choose valid Company from autocomplete':'';
      $errorCount['invite_by_company']++;
      form_set_error('invited_data]['.$uniqueId.'][email_company',$message);    
    }
    }else if($storage[$uniqueId]['type'] == 'invite_by_email'){
    if(empty($email_company) || !valid_email_address($email_company)){
      $message = ($errorCount['invite_by_email']==0)?'Enter valid Email Address':'';
      $errorCount['invite_by_email']++;
      form_set_error('invited_data]['.$uniqueId.'][email_company',$message);    
    }
    }
  }
  }
}

function onboarding_invited_company_submit_handler(&$form, &$form_state){ 
  global $user,$company, $base_url, $base_path;
  $mailarray = array();
  $currentUser = user_load($user->uid);
  $values = $form_state['values'];
  $storage = $form_state['workflow_storage'];
  $comapnyListing = array_flip($form_state['comapny_listing']);
  $count = 0;
  $cm = '';
  if(!empty(arg(1))){
    $cm = arg(1);
  }
  $mailSubject = 'M6Connect M6ID Request from [Onboarding:RequesterCompanyName] [Onboarding:RequesterCompanyCityState]';
  $mailBody = '[Onboarding:InvitedManagerName],<p>You have been invited to M6Connect M6ID.<br /><p>Please [Onboarding:LoginLink] to M6Connect signup for M6ID if you are not already a member.  If you are a member of M6 then select M6ID to manage this request.</p><p>Thank you for working with M6Connect for your M6ID needs.<br />Welcome to M6Connect and thank you for using M6 for your M6ID needs.</p>
<p>Sincerely,</br>[Onboarding:RequesterManagerName],</br>[Onboarding:RequesterCompanyName]</p>';

  $RequesterCompanyName = ucwords($company->title);
  $RequesterCompanyCityState = '';
  if(isset($company->field_org_address['und'],$company->field_org_address['und'][0])){
  $RequesterCompanyCityState = !empty($company->field_org_address['und'][0]['locality'])?$company->field_org_address['und'][0]['locality']:'';
  $RequesterCompanyCityState .= (!empty($RequesterCompanyCityState) && !empty($company->field_org_address['und'][0]['administrative_area']))?' ,'.$company->field_org_address['und'][0]['administrative_area']:''; 
  }
  $mail_replace =  array(
   '[Onboarding:RequesterCompanyName]' => $RequesterCompanyName,
   '[Onboarding:RequesterCompanyCityState]' => $RequesterCompanyCityState,
   '[Onboarding:LoginLink]' => l('Login',$base_url.$base_path, array('external'=> TRUE)),
   '[Onboarding:RequesterManagerName]' => $currentUser->realname,
  );
  $mailSubject = str_replace(array_keys($mail_replace), array_values($mail_replace),$mailSubject);
  
  $mail_params = array(
    'subject' => str_replace(array_keys($mail_replace), array_values($mail_replace),$mailSubject),
    'body' => $mailBody,
    'sender' => $user->mail,
    'language' => language_default(),
    'module' => 'm6connect_misc',
    'key' => 'm6id_mail___m6id_company_email_invite',
    'build' => TRUE,
  );

  foreach($values['invited_data'] as $uniqueId => $dataObj){
  $fields = array();
  $email_company = trim($dataObj['email_company']);
  $project = trim($dataObj['project']);
  
  $inviteType = $storage[$uniqueId]['type'];
  if($storage[$uniqueId]['type'] == 'invite_by_company'){
    $fields = array(
      'requester_uid' => $user->uid,
      'requester_company' => $company->nid,
      'requestee_company' => $comapnyListing[$email_company],
      'requestee_email' => NULL,
      'invite_for_projects' => $project,
      'timestamp' => time(),
      'approval_status' => 0,
      'invite_status' => 1,
      'cm_type' => $cm,
    ); 
  }else if($storage[$uniqueId]['type'] == 'invite_by_email'){
    $fields = array(
      'requester_uid' => $user->uid,
      'requester_company' => $company->nid,
      'requestee_company' => NULL,
      'requestee_email' => $email_company,
      'invite_for_projects' => $project,
      'timestamp' => time(),
      'approval_status' => 0,
      'invite_status' => 1,
      'cm_type' => $cm,
    ); 
  }
  if(!empty($fields)){
    $insertID = db_insert('m6connect_onboarding_invite')->fields($fields)->execute();
    if($insertID){
      if(is_numeric($fields['requestee_company'])){
      $comapnyManageres =  _get_company_users_email_by_onboarding_roles($fields['requestee_company'],array('M6ID Manager','Site Manager','administrator member','company admin'));
      $sendToManagers = array();
      if(isset($comapnyManageres['M6ID Manager']) && !empty($comapnyManageres['M6ID Manager'])){
      $sendToManagers = $comapnyManageres['M6ID Manager'];
      }else if(isset($comapnyManageres['company admin']) && !empty($comapnyManageres['company admin'])){
      $sendToManagers = $comapnyManageres['M6ID Manager'];
      }else if(isset($comapnyManageres['administrator member']) && !empty($comapnyManageres['administrator member'])){
      $sendToManagers = $comapnyManageres['M6ID Manager'];  
      }
      if(!empty($sendToManagers)){
      foreach($sendToManagers as $index => $mgrDetail){
        $replace = $mail_replace;
        $params = $mail_params;
        $replace['[Onboarding:InvitedManagerName]'] = ucwords($mgrDetail->realname);
        $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
        $mailarray[] = drupal_mail($params['module'], $params['key'], $mgrDetail->company_email, $params['language'], $params); 
      }
      }
    }else if(!empty($fields['requestee_email'])){
       $replace = $mail_replace;
       $params = $mail_params;
       $userObject = _get_user_details_by_og_email($fields['requestee_email']);
       $replace['[Onboarding:InvitedManagerName]']  = ($userObject && is_object($userObject))?ucwords($userObject->realname):$fields['requestee_email'];
       $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
       $mailarray[] = drupal_mail($params['module'], $params['key'], $fields['requestee_email'], $params['language'], $params);
    }
    }
    $count++;
  }
  }
  if($count > 0){
  drupal_set_message('Successfully invited '.$count);  
  }
  //drup_msg($mailarray);
}


function theme_onboarding_company_theme($variables) {
  $element = $variables['form'];
  $output = '';
  $header = array('Company','');
  $storage = $element['#storage'];
  foreach($storage as $uniqueId => $companyUsers){
  $orderRow = drupal_render($element['item_id'][$uniqueId]).drupal_render($element['order'][$uniqueId]);
  $companyRow = drupal_render($element['autocompany'][$uniqueId]).drupal_render($element['company'][$uniqueId]);
  
  $rows[] = array(
    'data'=> array(
    array('data'=>$companyRow,'class'=> array('workflow-company-td')),
    array('data'=>drupal_render($element['user'][$uniqueId]),'class'=> array('workflow-user-td')),
    //array('data'=>drupal_render($element['action'][$uniqueId]),'class'=> array('workflow-action-td')),
    //array('data'=>drupal_render($element['remove'][$uniqueId]),'class'=> array('workflow-remove-td')),
    ),
    'class'=>array('even'),
  );  
  
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('routing-workflow-table'))));
  $output .= drupal_render_children($element);
  return $output;
}

function m6connect_onboarding_theme() {
    return array(
    'onboarding_invite_theme'=> array(
      'render element' => 'form',
    ),  
    'onboarding_company_theme'=> array(
      'render element' => 'form',
    ),
    'onboarding_additional_companies_theme'=> array(
      'render element' => 'form',
    ),
    'm6id_invite_employees_container_template'=> array(
      'render element' => 'form',
    ),
    'm6id_project_invite_companies_template'=> array(
      'render element' => 'element',
    ),
    'm6id_worker_to_project_template'=> array(
      'render element' => 'element',
    ),
    );
}

function onboarding_autocomplete_callback($form,&$form_state){
  $commands = array();
  $companyListing = $form_state['comapny_listing'];
  $companyListing = array_flip($companyListing);
  $triggering_element = $form_state['triggering_element'];
  $identifer = $triggering_element['#parents'][1];
  $commands[] = ajax_command_replace("#workflow-container-section", render($form['workflow_container']));
  $companyNid='';
  if(isset($companyListing[$triggering_element['#value']])){
    $companyNid = $companyListing[$triggering_element['#value']];
  }
  $commands[] = ajax_command_invoke('select[name="invited_data['.$identifer.'][email_company]"]', 'val' ,array($companyNid));
  return array('#type' => 'ajax','#commands' => $commands);
}

function onboarding_workflow_add_company_email_submit_handler(&$form, &$form_state){
  $triggerElement = $form_state['triggering_element'];
  if($triggerElement['#name'] =='workflow_add_company'){
    $tempIdentifer = uniqid();
  $form_state['workflow_storage'][$tempIdentifer]= array(
    'type'=>'invite_by_company',
    'projects' => array(),
  );
  }else if($triggerElement['#name'] =='workflow_add_email'){
    $tempIdentifer = uniqid();
  $form_state['workflow_storage'][$tempIdentifer]= array(
    'type'=>'invite_by_email',
    'projects' => array(),
  );
  }
  $form_state['rebuild'] = TRUE;
}


function onboarding_workflow_action_callback(&$form, &$form_state){
  return $form['workflow_container'];
}

function onboarding_remove_invited_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][0]; 
  if(isset($form_state['workflow_storage'][$identifier])){
    unset($form_state['workflow_storage'][$identifier]); 
  //$form_state['storage_order'] = array_diff($form_state['storage_order'], array($identifier));
  }
  $form_state['rebuild'] = TRUE;
}

function onboarding_remove_invited_callback(&$form,&$form_state){
  return $form['workflow_container'];  
}

/****************************************************** Onboarding invitation process end *********************************************/

function onboarding_in_process_callback2(){
  return '';  
}


function _get_user_m6id_tab_content($cuser,$companyNid=''){
  global $company, $base_url, $base_path;
  $cuser = user_load($cuser->uid);
  $CheckForCompany = $company;
  if(!empty($companyNid) && is_numeric($companyNid)){
  $CheckForCompany = node_load($companyNid);  
  }
  $checkCompanyDetail = array(
    'nid'=>$CheckForCompany->nid,
  'title'=>$CheckForCompany->title,
  'logo'=> (isset($CheckForCompany->field_logo['und']) && !empty($CheckForCompany->field_logo['und'][0]['uri']))?theme_image_style(array('style_name'=>'pic_40x40','path' =>$CheckForCompany->field_logo['und'][0]['uri'])):'<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="width:40px; height=40px;" />',
  'status'=>'Not Submitted'
  );
  
  $header = array(
  array('data'=>'Company Name', 'class'=> array('text-left')),
  array('data'=>'Status', 'class'=> array('text-center')),
  );
  $rows = array();
  $ob_nid = get_user_onboarding_nid($cuser->uid);
  $entity = node_load($ob_nid);
  //if(isset($entity->field_allow_onboarding_companies['und']) && count($entity->field_allow_onboarding_companies['und'])>0){
  if(is_numeric($ob_nid)){
  /*$query = db_select('node','n');
  $query->distinct();
  $query->join('field_data_field_allow_onboarding_companies','fac','fac.entity_id=n.nid');
  $query->join('field_data_field_allow_onboarding_companies','fac','fac.entity_id=n.nid');
  $query->join('node','cnode','cnode.nid=fac.field_allow_onboarding_companies_nid');
  $query->condition('n.nid',$entity->nid);*/
  
  $query = db_select('node','cnode');
  $query->join('og_membership','og','og.gid=cnode.nid AND og.entity_type=:EntityType AND og.group_type=:GroupType',array(':EntityType'=>'user',':GroupType'=>'node'));
  $query->join('field_data_field_type_of_company','ind','ind.entity_id=cnode.nid');
  $query->leftjoin('m6connect_onboarding_colleagues_status','ocs','ocs.company_nid=cnode.nid AND ocs.user_uid=:UserUid', array(':UserUid'=>$cuser->uid));
  $query->leftjoin('field_data_field_logo','flo','flo.entity_id=cnode.nid');
  $query->leftjoin('file_managed','fm','fm.fid=field_logo_fid');
  $query->fields('cnode',array('nid','title'));
  $query->fields('ocs',array('status'));
  $query->fields('fm',array('uri'));
  $query->condition('og.etid',$entity->uid);
  $query->condition ( 'ind.field_type_of_company_value','company','=');
  $query->condition( 'ocs.authorize',1,'=');
  $query->orderBy('cnode.nid');
  $result = $query->execute()->fetchAll();
  foreach($result as $delta => $dataObj){
    $statusText= 'Pending';
    $status =$dataObj->status;
    if(is_numeric($status)){
    if($status == 1){
      $statusText = 'Approved'; 
    }else if($status == 2){
      $statusText = 'Pending';  
    }else{
      $statusText = 'Rejected'; 
    }
    }
    $companyLogo = (!empty($dataObj->uri)) ? theme('image_style', array('style_name' => 'user_pic_32x32', 'path' => $dataObj->uri, 'getsize' => TRUE)) : '<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="height:32; width:32px"/>';
    $statusClasses = array('Approved'=>'bg-success','Pending'=>'bg-warning','Rejected'=>'bg-danger');
    
    $allStatusclasses = array('text-center');
    if(isset($statusClasses[$statusText])){
    $allStatusclasses[] = $statusClasses[$statusText];
    $allStatusclasses[] = 'text-white';  
    }
    $rows[] = array(
    'data' => array(
      array('data'=>'<span>'.$companyLogo.'</span><span>&nbsp;'.$dataObj->title.'</span>','class'=> array('text-left')),
      array('data'=>$statusText,'class'=> $allStatusclasses),     
    ),
    );
    if($dataObj->nid == $checkCompanyDetail['nid']){
    $checkCompanyDetail['status'] = $statusText; 
    }
  }
  }
  $Obcomp =  theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'Onboarding not submitted to company yet','attributes'=>array('class'=>array('table','m6connect-custom-table','m6connect-onboarding-user-submit-table','table-hover','table-bordered','text-center')),'sticky'=>FALSE)); 
  $user_picture ='';
  if (isset($cuser->field_user_profile_photo['und'])) {
  $config = array(
    "style_name" => "thumbnail",
    "path" => $cuser->field_user_profile_photo[LANGUAGE_NONE][0]['uri'],
    "height" => NULL,
    "width" => NULL,
  );
  $user_picture = theme_image_style($config);
  } else {
    $variables = array(
      'path' => $base_url . '/sites/default/files/default_profile.jpg',
      'alt' => '',
      'width' => '100',
      'height' => '100',
    );
    $user_picture = theme('image', $variables);
  } 
  $jobtitle ='';
  $jobtitletid = (isset($cuser->field_job_titles['und']) &&  isset($cuser->field_job_titles['und']['0']['target_id']) && !empty($cuser->field_job_titles['und']['0']['target_id']))?  $cuser->field_job_titles['und']['0']['target_id']:'';
  if(!empty($jobtitletid)) {
  $jobterm = taxonomy_term_load($jobtitletid);
  $jobtitle = $jobterm->name;
  }
  
  $status_class = ' bg-primary';
  if(isset($statusClasses[$checkCompanyDetail['status']])){
  $status_class = ' '.$statusClasses[$checkCompanyDetail['status']];  
  }
  $output = ''; 
  $output .='
  <div class="dashboard-block-darkgray">
    <div class="dashboard-block-heading text-center clearfix"><span class="m6certified">M6ID: '.$cuser->field_m6id['und'][0]['value'].'</span> </div>
    <div class="dashboard-block-content">
    <div class="padding-10 text-center margin-bottom-10">'.$user_picture.'</div>
    <div class="padding-10 text-center">
      <div class="user-m6iddetail user-m6id-title">'.ucwords($cuser->realname).'</div>
    <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
    <div class="user-m6iddetail user-m6id-cname">'.ucwords($checkCompanyDetail['title']).'</div>
    </div>
    <!--<div class="row margin-10">
        <div class="col-md-6 col-sm-6 col-xs-6 padding-10 text-center">'.$user_picture.'</div>
      <div class="col-md-6 col-sm-6 col-xs-6 padding-10">
        <div class="user-m6iddetail user-m6id-title">'.ucwords($cuser->realname).'</div>
      <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
      <div class="user-m6iddetail user-m6id-cname">'.ucwords($checkCompanyDetail['title']).'</div>
      <div class="user-m6iddetail user-m6id-clogo">'.$checkCompanyDetail['logo'].'</div>
      </div>
    </div>-->
    </div>
    <div class="dashboard-block-content clearfix text-center margin-bottom-10 text-white'.$status_class.'">
      <div class="user-m6id-status">'.$checkCompanyDetail['status'].'</div>
    </div>
    <div class="clearfix text-center">';
      $output .= $Obcomp; 
      $output .='    
    </div>
  </div>';
  return $output; 
}


 //*********** Start M6ID POPUP Functionality ***********//
function user_m6id_popup_callback ($requestUser,$CheckForCompany,$ajax=NULL) {
  $output = array();
  $m6idPopupContent = _get_user_m6id_popup_content($requestUser,$CheckForCompany,$ajax);
  if (!$ajax) {
    return $m6idPopupContent;
  //drupal_exit(0);
  }
  ctools_include('modal');
  ctools_include('ajax');
  $output[] = ctools_modal_command_display('', $m6idPopupContent);
  $output[] = $commands[] = array('command'=>'InitializeCyclePugin');
  print ajax_render($output);
  drupal_exit();
}

function m6id_employee_badge_print_callback(){
  global $base_url, $base_path;
  $printData = '';
  $output ='';
  $modulePath = drupal_get_path('module', 'm6connect_onboarding') . '/print_popup';
  $script = '';
  $css = array(
  '<link rel="stylesheet" type="text/css" href="/sites/all/themes/m6connect/css/fonts.css"/>',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/screen.css" media="screen" />',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/print.css" media="print" />'
  );
  $meta = array(
    '<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />',
    '<meta http-equiv="Pragma" content="no-cache" />',
    '<meta http-equiv="Expires" content="0" />',
  );
  if(isset($_REQUEST['print_selected']) && !empty($_REQUEST['print_selected'])){
  $selected = explode(',',$_REQUEST['print_selected']);
  
  //print "<pre>"; print_r($_REQUEST['print_selected']);
  $printed = 0;
  foreach($selected as $delta => $mapped){
    $request = explode('___',$mapped);
    //print "<pre>"; print_r($request); 
    if(count($request)==2 && is_numeric($request[0]) && is_numeric($request[1])){
    $requestUser = user_load($request[0]);
    $CheckForCompany = node_load($request[1]);
    $printData .= _get_user_m6id_popup_content($requestUser,$CheckForCompany,$ajax=TRUE,$print=TRUE);
    $printed++;
    //if($printed%2==0){
      $printData .='<div class="page-break"></div>';  
    //}
    }
  }
  }
  $output = '<html><head>'.implode('',$meta).implode('',$css).$script.'</head><body onload="window.print();">';
  $output .= $printData;
  $output .= '</body></html>';
  print $output;
  drupal_exit(0);
}

function _get_user_m6id_popup_content($requestUser,$CheckForCompany,$ajax,$print=FALSE){
  
 //drupal_add_css(drupal_get_path('module','m6connect_onboarding'). '/css/style.css');
 //drupal_add_js(drupal_get_path('module','m6connect_onboarding'). '/js/jquery.cycle2.js');
 //drupal_add_js(drupal_get_path('module','m6connect_onboarding'). '/js/jquery.cycle2.scrollVert.js');  
  
  global $base_url, $base_path;
  $jobtitle ='';
  $companyCredentialTable = '';
  $rows = array();
  $slider = array();
  $mainClass = '';
  if(!$ajax){
   $mainClass = ' m6id-profile-detail-page'; 
  }
  
  $statusClasses = array('Approved'=>'bg-success','Pending'=>'bg-warning','Rejected'=>'bg-danger');
  $field_m6id = $requestUser->field_m6id['und'][0]['value'];
  $user_picture = (isset($requestUser->field_user_profile_photo['und']))?theme_image_style(array('style_name'=>'custom_thumbnail','path'=>$requestUser->field_user_profile_photo[LANGUAGE_NONE][0]['uri'])):theme('image', array('path' => 'sites/default/files/images_13_0.png','attributes'=> array('style'=>'width:100px;height:100px;')));
  $jobtitletid = (isset($requestUser->field_job_titles['und']) &&  isset($requestUser->field_job_titles['und']['0']['target_id']) && !empty($requestUser->field_job_titles['und']['0']['target_id']))?$requestUser->field_job_titles['und']['0']['target_id']:'';
  if(!empty($jobtitletid)) {
  $jobterm = taxonomy_term_load($jobtitletid);
  $jobtitle = $jobterm->name;
  }

  $checkCompanyDetail = array(
  'nid'=>$CheckForCompany->nid,
  'title'=>$CheckForCompany->title,
  'logo'=> (isset($CheckForCompany->field_logo['und']) && !empty($CheckForCompany->field_logo['und'][0]['uri']))?theme_image_style(array('style_name'=>'pic_50x50','path' =>$CheckForCompany->field_logo['und'][0]['uri'])):'<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="width:50px; height=50px;" />',
  'type' => $CheckForCompany->field_type_of_company['und'][0]['value'],
  );
  $ob_nid = get_user_onboarding_nid($requestUser->uid);
  // for onbarding credentials chk
  $onboardingnode = node_load($ob_nid);
  $m6idcredentials = $onboardingnode->field_onbarding_credentials['und'][0]['value'];
  // end onbarding credentials chk
  $query = db_select('node','cnode');
  $query->join('og_membership','og','og.gid=cnode.nid AND og.entity_type=:EntityType AND og.group_type=:GroupType',array(':EntityType'=>'user',':GroupType'=>'node'));
  $query->join('field_data_field_type_of_company','ind','ind.entity_id=cnode.nid');
  $query->leftjoin('m6connect_onboarding_colleagues_status','ocs','ocs.company_nid=cnode.nid AND ocs.user_uid=:UserUid', array('UserUid'=>$requestUser->uid));
  $query->leftjoin('m6connect_onboarding_employee_types','oet','oet.id=ocs.employee_type');
  $query->leftjoin('field_data_field_logo','flo','flo.entity_id=cnode.nid');
  $query->leftjoin('file_managed','fm','fm.fid=field_logo_fid');
  $query->fields('cnode',array('nid','title'));
  $query->fields('ocs',array('status'));
  $query->fields('fm',array('uri'));
  $query->fields('oet',array('employee_type'));
  $query->fields('ocs',array('employee_id'));
  $query->condition('og.etid',$requestUser->uid);
  $query->condition ( 'ind.field_type_of_company_value','company','=');
  if($print){
  $query->condition ( 'cnode.nid',$CheckForCompany->nid,'=');
  }
  $query->orderBy('cnode.nid');
  $result = $query->execute()->fetchAll();
  if($result && !empty($result) && is_numeric($ob_nid)){
    $statusClasses = array('Approved'=>'bg-success','Pending'=>'bg-warning','Rejected'=>'bg-danger');
    $statusValues = array(0=>'Rejected',1=>'Approved',2=>'Pending');  
    foreach($result as $delta => $dataObj){
      $statusText = (isset($statusValues[$dataObj->status]))?$statusValues[$dataObj->status]:'Pending';
      if($CheckForCompany->nid == $dataObj->nid){
        $checkCompanyDetail['status'] = 'Pending';
        if(is_numeric($dataObj->status) && in_array($dataObj->status, array(0,1,2))){
          $checkCompanyDetail['status'] = $statusValues[$dataObj->status];  
        }  
      }
      $companyLogo = (!empty($dataObj->uri)) ? theme('image_style', array('style_name' => 'pic_50x50', 'path' => $dataObj->uri, 'getsize' => TRUE)) : '<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="height:50px; width:50px"/>';
      
      $slideStatusClass =  $statusClasses[$statusText];
      $sliderFirstActiveClass ='';
      if(empty($slider)){
        $sliderFirstActiveClass = ' active';  
      }
      $employeeType = ($dataObj->employee_type)?$dataObj->employee_type:'EMPLOYEE';
      $emptyJobTitle = empty($jobtitle)?'&nbsp':'';
      $printIcon = l('<i class="fa fa-print" aria-hidden="true"></i>','javascript:void(0);',array('external'=> TRUE,'html'=>TRUE,'attributes' => array('class'=>array('m6id-popup-emp-print','m6id-popup-print-link'),'data-empid'=>$requestUser->uid.'___'.$dataObj->nid)));      
      $paddind_10 = 'padding-10 ';
      $headerFont = '25px;';
      $headerImage = '32px;';
      $margin_bottom_10 = ' margin-bottom-10';
      if($print){
        $paddind_10 = '';
        $headerFont = '16px;';
        $headerImage = '20px;';
        $margin_bottom_10 = '';  
      }
      $m6BadgeID = '';
      $m6BadgeIDClass = '';
      if($dataObj->employee_id){
        $m6BadgeIDClass = 'm6id-badge-id-field'; 
        $m6BadgeID = '<div class="m6id-badge-id">
               <span class="m6id-company-info-logo">Badge ID:</span>
               <span class="m6id-company-info-title">&nbsp;'.$dataObj->employee_id.'</span>
            </div>';
      }      
      $slider[] = '<div class="item'.$sliderFirstActiveClass.'" id="non-vertical">
                     <div class="dashboard-block-heading text-center clearfix">
                 <div class="m6certified" style="font-size:'.$headerFont.'">
                   <img src="/sites/all/themes/m6connect/images/icon-test-m6.png" style="width:'.$headerImage.'vertical-align: sub;" />
                   <span class="m6id-number">ID: '.$field_m6id.'</span>
                 </div>
                 </div>
             
               <div class="dashboard-block-content">
               <span class="m6id-popup-print" style="display:none;">'.$printIcon.'</i></span>
                 <div class="'.$paddind_10.'text-center m6id-info-picture'.$margin_bottom_10.'">'.$user_picture.'</div>
                 <div class="'.$paddind_10.'text-center">
                 <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($requestUser->realname).'</strong></div>
                 <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
                 <div class="user-m6iddetail user-m6id-cname">'.ucwords($dataObj->title).'</div>
               <div class="user-m6iddetail user-m6id-degi">'.$emptyJobTitle.'</div>
                 </div>
               </div>
               <div class="dashboard-block-heading dashboard-block-status dashboard-block-content clearfix text-center text-white '.$slideStatusClass.'">
                 <div class="user-m6id-status">'.$statusText.'</div>
               </div>
             <div class="clearfix m6id-company-info-section">
               <div class="m6id-company-title-logo-section">
                 <span class="m6id-company-info-logo">'.$companyLogo.'</span>
                 <span class="m6id-company-info-title">&nbsp;'.ucwords($dataObj->title).'</span>
               </div>
             </div>
             <div class="dashboard-block-heading dashboard-block-emp-type clearfix text-center text-white bg-primary '.$m6BadgeIDClass.'">
                 <div class="user-m6id-employee-type">'.$employeeType.'</div>
                 '.$m6BadgeID.'
               </div> 
               </div>';   
    }
      //print "<pre>"; print_r($slider); die;
    if(!$print){
      $rosterSlider = onboarding_user_roster_badge($requestUser->uid);
      $slider = array_merge($slider,$rosterSlider);
      $credentialSlide = user_profile_m6id_credentials_popup($requestUser,$jobtitle);
      $skillsetSlide = user_profile_m6id_skillset_popup($requestUser,$jobtitle);
      
      //print "<pre>"; print_r($credentialSlide); die;
      /*if(!empty($credentialSlide)){
      $slider = array_merge($slider,$credentialSlide);  
      }*/
      if(!empty($skillsetSlide) || !empty($credentialSlide)){
        $skillsetContent = '<div class="item vertical-m6-slider" id="vertical-slider">
                            <div class="cycle-slideshow m6-cycle-slider" data-cycle-fx="scrollVert" data-cycle-prev=".vertical-m6-slider .prev" data-cycle-next=".vertical-m6-slider .next" data-cycle-slides="div.cycle2-vertical-m6id-slider">
                  '.implode('',$credentialSlide).implode('',$skillsetSlide).'
                  </div>
                  <div class="center vertical-m6id-slider-arrow custom-arrow-vertical" style="display:none;">
                                  <div class="prev"><a href="#"><i class="fa fa-angle-up" aria-hidden="true"></i></a></div>
                                   <div class="next"><a href="#"><i class="fa fa-angle-down" aria-hidden="true"></i></a></div>
                      </div>
                          </div>';
          $slider = array_merge($slider,array($skillsetContent));               
      }
    }
  }else{
    $userCompanyName = '&nbsp';
    $companyName = '&nbsp';
    $companyLogo = '&nbsp';
    $middleBottom='';
    $printIcon = l('<i class="fa fa-print" aria-hidden="true"></i>','javascript:void(0);',array('external'=> TRUE,'html'=>TRUE,'attributes' => array('class'=>array('m6id-popup-emp-print','m6id-popup-print-link'),'data-empid'=>$requestUser->uid.'___'.$checkCompanyDetail['nid'])));
    $paddind_10 = 'padding-10 ';
    $headerFont = '25px;';
    $headerImage = '32px;';
    $margin_bottom_10 = ' margin-bottom-10';
    if($print){
      $paddind_10 = '';
      $headerFont = '16px;';
      $headerImage = '20px;';
      $margin_bottom_10 = '';  
    }
   
    if(!empty($result) && empty($ob_nid)){
      if($checkCompanyDetail['type']=='company'){
        $userCompanyName = $checkCompanyDetail['title'];
        $companyName = $checkCompanyDetail['title'];
        $companyNid = $checkCompanyDetail['nid'];
        $companyLogo = $checkCompanyDetail['logo'];
        $middleBottom = '<span class="m6id-company-info-logo">'.$companyLogo.'</span><span class="m6id-company-info-title">'.$companyName.'</span>';
        $printAttributes['data-empid'] = $requestUser->uid.'___'.$companyNid;
      }else{
        $companyName = 'Individual'; 
        $middleBottom = '<span class="m6id-company-info-title text-center" style="height:70px;">'.$companyName.'</span>'; 
      }
      $middlePart = '<div class="dashboard-block-heading dashboard-block-content clearfix text-center heading-border-gray bg-white">
                  <div class="user-m6id-status">'.l('Update your M6ID Now','user/'.$requestUser->uid.'/m6id-info').'</div>
                </div>'; 
    }else if(empty($result) && empty($ob_nid)){
      $companyName = 'No Company';
      $middleBottom = '<span class="m6id-company-info-title text-center" style="height:70px;">'.$companyName.'</span>';
      $middlePart = '<div class="dashboard-block-heading dashboard-block-content clearfix text-center text-white bg-success">
                <div class="user-m6id-status"><strong>Approved</strong></div>
              </div>'; 
    }else{
      $companyName = 'No Company';
      $middleBottom = '<span class="m6id-company-info-title text-center" style="height:70px;">'.$companyName.'</span>'; 
      $middlePart = '<div class="dashboard-block-heading dashboard-block-content clearfix text-center text-white bg-success">
                <div class="user-m6id-status"><strong>Approved</strong></div>
              </div>'; 
    }
    $slider[] = '<div class="item active" id="non-vertical">
             <div class="dashboard-block-content">
             <span class="m6id-popup-print" style="display:none;">'.$printIcon.'</i></span>
               <div class="'.$paddind_10.'text-center m6id-info-picture'.$margin_bottom_10.'">'.$user_picture.'</div>
               <div class="'.$paddind_10.'text-center">
               <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($requestUser->realname).'</strong></div>
               <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
               <div class="user-m6iddetail user-m6id-cname">'.$userCompanyName.'</div>
               </div>
             </div>
           '.$middlePart.'
           <div class="clearfix m6id-company-info-section">
             <div class="m6id-company-title-logo-section">
               '.$middleBottom.'
             </div>
           </div>
           <div class="dashboard-block-heading dashboard-block-emp-type clearfix text-center text-white bg-primary">
               <div class="user-m6id-employee-type">EMPLOYEE</div>
             </div>
             </div>'; 
  }
  
    $status_class = ' bg-primary';
    if(isset($statusClasses[$checkCompanyDetail['status']])){
      $status_class = ' '.$statusClasses[$checkCompanyDetail['status']];  
    }
  
    $hideArrowAndSwipeStyle = '';
    if(count($slider)==1 || $print){
      $hideArrowAndSwipeStyle = ' style="display:none"';  
    }
    $output  ='<div class="m6id-profile-detail-data clearfix'.$mainClass.'">';
    /// start here for left right arrow
    $output .='<div class="carousel-m6id-left"><a class="left carousel-control" '.$hideArrowAndSwipeStyle.' href="#carousel-m6id-company" role="button" data-slide="prev">
             <i class="fa fa-angle-left" aria-hidden="true"></i>
           </a>
           <a class="right carousel-control" '.$hideArrowAndSwipeStyle.' href="#carousel-m6id-company" role="button" data-slide="next"> 
             <i class="fa fa-angle-right" aria-hidden="true"></i>  
        </a></div>';
    ///end here for left right arrow
  
    /// start here for up down arrow
    $output .=  '<div class="center vertical-m6id-slider-arrow custom-arrow-vertical-top" style="display:none;">
                      <div class="prev"><a href="#"><i class="fa fa-angle-up" aria-hidden="true" id="prev"></i></a></div>
                      <div class="next"><a href="#"><i class="fa fa-angle-down" aria-hidden="true" id="next"></i></a></div>
         </div>';
    ///start here for up down arrow
   
    $output .='  <div class="dashboard-block-darkgray margin-bottom-10">';
    $output .='    <div class="dashboard-block-drag text-center clearfix margin-bottom-10"><span>&nbsp;</span></div>';
    $output .='    <div id="carousel-m6id-company" class="carousel slide" data-ride="carousel">';
    $output .='      <div class="carousel-inner" role="m6id-company">';
    $output .='        '.implode('',$slider);   
    $output .='      </div>'; 
    /// start here for left right arrow
    $output .='      <div class="carousel-m6id-left" style="display:none;"><a class="left carousel-control" '.$hideArrowAndSwipeStyle.' href="#carousel-m6id-company" role="button" data-slide="prev">
             <i class="fa fa-angle-left" aria-hidden="true"></i>
           </a>
           <a class="right carousel-control" '.$hideArrowAndSwipeStyle.' href="#carousel-m6id-company" role="button" data-slide="next"> 
             <i class="fa fa-angle-right" aria-hidden="true"></i>  
           </a></div>';
    ///end here for left right arrow 
    $output .='    </div>';
    $output .='  </div>';
    $output .='</div>';
    if(empty($hideArrowAndSwipeStyle) && !$print){
      $scriptPath = '/'.drupal_get_path('module','m6connect_onboarding').'/js/carousel_swipe.js';
      $output .= '<script src="'.$scriptPath.'" type="text/javascript"></script>';
    }
    return $output;
}

function user_m6id_detail_popup_callback($requestUser,$ajax=NULL){
  $output = array();
  $ob_nid = get_user_onboarding_nid($requestUser->uid);
  $closeLink = ($ajax)?'javascript:void(0);':url('onboarding/in-process');
  $m6idPopupContent = '<div class"onboarding-not-created"><strong>M6ID information not created yet.<strong></div>';
  if($ob_nid && is_numeric($ob_nid)){
    $m6idNode = node_load($ob_nid);
    $elements = node_view($m6idNode, 'full');
  if(isset($elements['user_submmited_company_info'])){
    $elements['user_submmited_company_info']['#access'] = FALSE;
  }
  
  $profileHtml = drupal_render($elements);
  $profileHtml = str_replace(array('Show M6ID Profile','Show M6ID Status'), array('M6ID Profile','M6ID Status'),$profileHtml);
  $m6idPopupContent = '<div class="popup-m6id-profile-info">';
    $m6idPopupContent .= $profileHtml;
  $m6idPopupContent .= '</div>';
  }
  $m6idPopupContent .= '
    <div class="pull-right">
         <a href="'.$closeLink.'" class="m6id-popup-close-link" onclick="jQuery(&quot;span.popups-close&quot;).click();"><input type="button" class="btn cancel-button" value="Close"></a>
     </div>';
  $m6idPopupContent = '<div class="m6id-detail-information">'.$m6idPopupContent.'</div>';
  if (!$ajax) {
    return $m6idPopupContent;
  }
  ctools_include('modal');
  ctools_include('ajax');
  $output[] = ctools_modal_command_display('', $m6idPopupContent);
  $output[] = ajax_command_html('.horizontal-tab-button-0.first strong','M6ID Profile');
  $output[] = ajax_command_html('.horizontal-tab-button-1.last strong','M6ID Status');
  print ajax_render($output);
  drupal_exit();  
}
//*********** End M6ID POPUP Functionality ***********//

/**
 * Implements hook_block_info().
 */
function m6connect_onboarding_block_info() {
  $blocks['onboarding-top-banner'] = array(
    'info' => t('Onboarding Top Banner'),
  );
  $blocks['onboarding-edit-link'] = array(
    'info' => t('Onboarding Edit Link'),
  );
  $blocks['new-onboarding-project'] = array(
    'info' => t('New Onboarding Project'),
  ); 
  $blocks['onboarding-inprocess-company-tab'] = array(
    'info' => t('Onboarding InProcess Company Tab'),
  );
  $blocks['onboarding-inprocess-project-tab'] = array(
    'info' => t('Onboarding InProcess Project Tab'),
  );
  $blocks['onboarding-profile-status-tab'] = array(
    'info' => t('Onboarding Profile Status'),
  );
  $blocks['m6id-project-invite-list'] = array(
    'info' => t('M6ID Project Invitation'),
  );
  
  
  $blocks['personal-profile-companies-edit'] = array(
    'info' => t('Personal Profile Company Form'),
  );
  $blocks['user-profile-navigation-tab'] = array(
    'info' => t('User Profile Navigation Tab'),
  );
  $blocks['user-profile-edit-ribbon'] = array(
    'info' => t('User Profile Edit Ribbon'),
  );
  $blocks['user-roster-project-details'] = array(
    'info' => t('User Profile Roster Project Detail'),
  );
 
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function m6connect_onboarding_quicktabs_alter(&$info) {
  //drup_msg($info);
  if($info->machine_name =='onboarding_in_process_tabs'){
    //$info->style = 'Excel'; 
  }
}
/**
 * Implements hook_block_view().
 */
function m6connect_onboarding_block_view($delta = '') {
  global $user;
  $block = array();
  $content = '';
  switch ($delta) {
    case 'onboarding-top-banner':
      $block['subject'] = t('');
      $block['content'] = onboarding_top_banner();
    break;
  case 'onboarding-edit-link':
      $block['subject'] = t('');
      $block['content'] = onboarding_edit_link();
    break;
  case 'new-onboarding-project':
      $block['subject'] = t('');
      $block['content'] = new_onboarding_project();
    break;
  case 'onboarding-inprocess-company-tab':
      $block['subject'] = t('');
      $block['content'] = onboarding_inprocess_company_tab();
    break;
  case 'onboarding-inprocess-project-tab':
      $block['subject'] = t('');
      $block['content'] = onboarding_inprocess_project_tab();
    break;
  case 'onboarding-profile-status-tab':
      $block['subject'] = t('');
      $block['content'] = onboarding_profile_status_tab();
    break;
  case 'm6id-project-invite-list':
      $block['subject'] = t('');
      $block['content'] = m6id_project_invitation_content();
    break;
  
  case 'personal-profile-companies-edit':
    $blockContent ='';
    if(arg(0)=='user' && is_numeric(arg(1)) && !empty(arg(2)) && arg(2)=='company-info'){
    $blockContent = drupal_get_form('user_profile_company_tab_form',arg(1));
    }
      $block['subject'] = t('');
      $block['content'] = $blockContent;
    break;
  case 'user-profile-navigation-tab':
      $block['subject'] = t('');
      $block['content'] = user_profile_navigation_tab();
    break;
  case 'user-profile-edit-ribbon':
      $block['subject'] = t('');
      $block['content'] = user_profile_edit_ribbon();
    break;
  case 'user-roster-project-details':
      $block['subject'] = t('');
      $block['content'] = onboarding_submitted_message_tab_content();
    break;
  }
  return $block;
}


function onboarding_top_banner(){
  $onboardingInviteLink = '';
  $current_path =current_path();
  if(in_array($current_path,array('onboarding/submit-employees','onboarding/colleagues','onboarding/in-process'))){
  $onboardingInviteLink = l('<i class="glyphicon glyphicon-plus"></i> Invite Company/Users',url('onboarding-invite-companies'),array('html'=>TRUE,'attributes'=>array('title'=>'Invite Company/Users')));  
  }
  $output = '
  <div class="main_content">
  <div class="box box-with-image">
    <div class="box-header-main box-header">
    <div class="box-image-wrapper"> <a href="#"> <img src="/sites/all/themes/m6connect/images/icon-m6id-1.png" /> </a> </div>
      <div class="box-right-entity">
              
         <div class="row">
         <div class="col-md-6 col-sm-6 col-xs-12">
          <h1>M6ID</h1>
          <p>Create and manage your M6ID profile</p>
         </div>
         <div class="col-md-6 col-sm-6 col-xs-12 box-actions text-right">'.$onboardingInviteLink.'</div>
      </div>
             
      </div>
    </div>
    </div>
  </div>';
  
  return $output; 
}

function new_onboarding_project() {
  $onboardingNewProjectLink = '';
  $nodeType = $cm = '';
  if(arg(0)=='node' && is_numeric(arg(1))){
    $node = menu_get_object('node',1);  
    $nodeType = $node->type;
    $cm = '/'.$node->field_cm_type['und'][0]['value'];  
  }
  
  if(!empty(arg(2))){
    $cm = '/'.arg(2);
  }
  elseif (arg(0) == 'onboarding-invite-companies') {
    $cm = '/'.arg(1);
  }
  if(!(in_array(current_path(), array('onboarding/colleagues'.$cm,'onboarding/in-process'.$cm,'node/add/onboarding')) || in_array($nodeType,array('onboarding'.$cm)))){
  //$onboardingNewProjectLink = l('<i class="glyphicon glyphicon-plus"></i> New M6ID Project',url('onboarding/add-projects/nojs'),array('html'=>TRUE,'attributes'=>array('title'=>'New M6ID Project','class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style'))));
   $onboardingNewProjectLink = l('<i class="glyphicon glyphicon-plus"></i> New M6ID Project',url('onboarding/add-projects/nojs'.$cm),array('html'=>TRUE,'attributes'=>array('data-toggle'=>'popover','data-trigger'=>'hover','data-placement'=>'left','data-content'=>'To Create Projects for M6ID to invite Companies & workers to.','class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style'))));
  }
  
  if(current_path() == 'onboarding/colleagues'.$cm){
  $onboardingNewProjectLink = l('<i class="glyphicon glyphicon-plus"></i> Invite Employee(s)',url('m6id-invite-employee/nojs'.$cm),array('html'=>TRUE,'attributes'=>array('title'=>'Invite employee(s)','class'=>array('ctools-use-modal','ctools-modal-onboarding-message-popup-style')))); 
  } 
  
  if(current_path()=='onboarding/in-process'.$cm){
  $onboardingNewProjectLink = l('<i class="glyphicon glyphicon-plus"></i> Worker To Project',url('m6id-project-worker/nojs'.$cm),array('html'=>TRUE,'attributes'=>array('title'=>'Invite employee(s)','class'=>array('ctools-use-modal','ctools-modal-m6id-submit-employee-popup-style')))); 
  }  
  
  $title = drupal_get_title();
  $title = ($title && !in_array($nodeType,array('onboarding_project')))?' - '.$title:'';
  $output = '
  <div class="main_content">
  <div class="box box-with-image">
    <div class="box-header-main box-header">
    <div class="box-image-wrapper"> <a href="#"> <img src="/sites/all/themes/m6connect/images/icon-m6id-1.png" /> </a> </div>
      <div class="box-right-entity">
              
         <div class="row">
         <div class="col-md-6 col-sm-6 col-xs-12">
          <h1>M6ID'.$title.'</h1>
          <p>Create and manage your M6ID profile</p>
         </div>
         <div class="col-md-6 col-sm-6 col-xs-12 box-actions text-right">'.$onboardingNewProjectLink.'</div>
      </div>
             
      </div>
    </div>
    </div>
  </div>';
  
  return $output; 
}

function onboarding_profile_submit_action_callback($action,$status,$userUid,$node,$requesterComapny,$ajax=NULL){
  global $company;
  ctools_include('ajax');
  $commands = array();
  $cnid = $requesterComapny->nid;
  if(is_numeric($userUid) && $requesterComapny->type=='organization'){
    if($action == 'resubmit'){ 
    if(is_numeric($status) && $status >=0 && $status == 0) {  
      $deleteQuert = db_update('m6connect_onboarding_colleagues_status')
      ->fields(array('health_screen' => NULL, 'background_check' => NULL, 'status' => NULL))
      ->condition('company_nid',$cnid,'=')
      ->condition('user_uid',$userUid,'=')
      ->execute();
    }
  }else if($action=='revoke'){
    $comparr = $node->field_allow_onboarding_companies['und'];
      $temp = array();
      foreach($comparr as $k=>$v){
        if($v['nid'] != $cnid)  {
        $temp[] = array('nid' => $v['nid']); 
        }
      }

      if(count($temp)){
        $node->field_allow_onboarding_companies['und'] = $temp; 
      } else {
        $node->field_allow_onboarding_companies = array();    
      }

      node_save($node);
    //$commands[] = ajax_command_invoke('table.onboarding_submit_employeee_check_'.$requesterComapny->nid.' div.dropdown','removeClass',array('open')); 
    $deleteQuert = db_delete('m6connect_onboarding_colleagues_status')
      ->condition('company_nid',$cnid,'=')
      ->condition('user_uid',$userUid,'=')
      ->execute();
  }
  }
  if($ajax){
  $commands[] = ajax_command_invoke('table.m6connect-onboarding-user-submit-table div.div-onboard-sts','removeClass',array('open'));  
  print ajax_render($commands);
    drupal_exit();  
  }else{
  //drupal_goto('onboarding/submit-employees');
  return '';
  }
}

function onboarding_edit_link(){
  global $user;
  return '<div>hello</div>';
  if(arg(0)=='user' && is_numeric(arg(1)) && !arg(2)){
  $nodeuid = 0;  
  $uid = arg(1);
  $nid = get_user_onboarding_nid($uid);
  $query = db_select('node', 'n');
  $query->fields('n',array('uid'));
  $query->condition('n.type', 'onboarding', '=');
    $query->condition('n.uid', $uid, '=');
  $result = $query->execute()->fetchAll();
  if ($result && !empty($result)) {
    foreach ($result as $delta => $userdata) {
      $nodeuid = $userdata->uid;    
    }
  }
  //if($nodeuid == $user->uid){
    $output = '<div class="cust-pro-edit text-right">'; 
    $output .= '<li>';
    $output .= l('Edit','node/'.$nid.'/edit');
    $output .= '</li>'; 
    $output .= '</div>';
    echo $output;
  //}
  } 
}


function check_onboarding_message_status(){ 
  global $company,$user;  
  $CompanyRoles = og_get_user_roles('node', $company->nid, $user->uid);
  $isonboardingManager = (in_array('M6ID Manager', $CompanyRoles))?1:0; 
  $issiteManager = (in_array('Site Manager', $CompanyRoles))?1:0;
  
  $userDetails = onboarding_in_process_user_details();
  $count = 0;
  if($userDetails && is_array($userDetails)){
  foreach($userDetails as $delta => $dataObj){
    $usertype = (isset($company->nid) && $company->nid == $dataObj->requstee_company)? 2:1;
    if($isonboardingManager){
    $managertype = 'om';
    } elseif($issiteManager) {
    $managertype = 'sm';  
    }
    $is_unread = check_onboarding_unread_message($dataObj->id, $usertype, $managertype);
    if($is_unread){
    $count = $count + $is_unread;  
    }
  }
  }
  return $count;
}

function check_onboarding_unread_message($requestid, $usertype, $managertype){ //pre($requestid);pre($usertype);pre($managertype);
  global $user;
  $query = db_select('m6connect_onboarding_feedback_message','fm');
  $query->fields('fm',array('id'));
  $query->condition('fm.request_id',$requestid,'=');
  $query->condition('fm.user_uid',$user->uid,'!=');
  if($usertype == 2){
  if($managertype == 'om'){ 
      $query->condition('fm.rec_seen_om','0','=');
  } elseif($managertype == 'sm') {
    $query->condition('fm.rec_seen_sm','0','=');  
  }
  } elseif($usertype == 1) {
  if($managertype == 'om'){ 
      $query->condition('fm.sub_seen_om','0','=');
  } elseif($managertype == 'sm') {
    $query->condition('fm.sub_seen_sm','0','=');  
  }  
  }
  $result = $query->execute()->rowCount(0);
  return $result; 
}

function company_has_onboarding_managers_autocomplete($string = ''){
  $matches = array();
  /*if(!empty($string)){
  $comppanyListing = _get_all_organigation_mapping($string,$queryModifyBy='company_has_ob_manager');
    foreach($comppanyListing as $index => $userVal){
      $matches[$userVal] = $userVal; 
    }
  }*/
  if(!empty($string)){
  $comppanyListing = array();
  if(isset($_SESSION['company_having_ob_manager']) && !empty($_SESSION['company_having_ob_manager'])){
    $comppanyListing = $_SESSION['company_having_ob_manager'];
  }
    $matchedOwner = preg_grep("/^{$string}/i",array_values($comppanyListing));
    foreach($matchedOwner as $index => $userVal){
      $matches[$userVal] = $userVal; 
    }
  }
  drupal_json_output($matches); 
}

function onboarding_confirm_submission_form($form, $form_state){
  $form = array();
  $form['#attributes'] = array('class'=> array('onboarding_confirm_submission_form'));
  $form['#prefix'] = '<div class="form-header text-center"><strong>Login to M6Connect</strong></div>';
  
  $form['error_text'] = array(
    '#markup' => '<span class="onboarding-login-form-error" style="color:red;display:none;">Wrong Login Credentials, Please try again.</span>',
  );
  
  $form['user_credendial_email_submitted'] = array(
    '#type' => 'textfield',
  '#title' => 'Email',
  '#attributes' => array('autocomplete'=>'off'),
  //'#element_validate' => array('m6connect_email_validate'),
  '#required' => TRUE,
  ); 
  $form['user_credendial_password_submitted'] = array(
  '#type' => 'password',
  '#title' => 'Password',
  '#attributes' => array('autocomplete'=>'off'),
  '#required' => TRUE,
  );
  return $form;   
}

function _get_onboarding_confirm_submission_form(){
  $output = drupal_render(drupal_get_form('onboarding_confirm_submission_form'));
  drupal_json_output(array('html' => $output));
  drupal_exit(0); 
}

function submit_onboarding_confirm_submission_form(){
  global $user;
  $values = '';
  $usermail = '';
  $userpass ='';
  $return = array('login_status' => 0);
  $currUser = user_load($user->uid);
  module_load_include('inc', 'content', 'includes/password');
  if(isset($_REQUEST['values']) && !empty($_REQUEST['values'])){
    parse_str($_REQUEST['values'], $values); 
  if(isset($values['user_credendial_email_submitted'],$values['user_credendial_password_submitted'])){
    
    $usermail = trim($values['user_credendial_email_submitted']);
      $userpass = trim($values['user_credendial_password_submitted']);  
  }
  }
  if(!empty($usermail) && !empty($usermail) && (($currUser->mail == $usermail) || ($currUser->name == $usermail)) && user_check_password($userpass, $currUser)){
  $return = array('login_status' => 1);  
  }
  drupal_json_output($return);
  drupal_exit(0);   
}

function onboarding_inter_company_messaging_callback($comanyNode,$companyUser,$ajax=NULL){
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
      'ajax' => TRUE,
      'comanyNode' => $comanyNode,
      'companyUser' => $companyUser,
    );
    //print "<pre>"; print_r($companyUser); die;
    
    $output = ctools_modal_form_wrapper('onboarding_inter_company_messaging', $form_state);
    db_update('m6connect_onboarding_inter_company_message')->fields(array('isread'=>1))->condition('request_from',$companyUser->uid)->condition('company_nid',$comanyNode->nid)->execute();
    $removeSelecter = 'tr.colleagues-'.$companyUser->uid.'-'.$comanyNode->nid.'-row .m6id-message-unread-check';
    $output[] = ajax_command_remove($removeSelecter);
    
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit();
  }
  return drupal_get_form('onboarding_inter_company_messaging', $comanyNode,$companyUser);
}



function onboarding_inter_company_messaging($form, &$form_state,$comanyNode='',$companyUser=''){
  global $user,$company;
  $comanyNode = (!is_object($comanyNode) && is_object($form_state['comanyNode']))?$form_state['comanyNode']:$comanyNode;
  $companyUser = (!is_object($companyUser) && is_object($form_state['companyUser']))?$form_state['companyUser']:$companyUser;
  $onBoardingUids = _get_company_onboarding_manager_uids($comanyNode->nid);
  $form = array();
  $form['#attributes'] = array('class'=> array('onboarding-inter-company-messaging'));
  
  if(empty($form_state['company_onboarding_manager'])){
  $form_state['company_onboarding_manager']= $onBoardingUids; 
  }
  
  $form['main_container'] = array(
    '#type' => 'container',
  '#attributes'=> array('class'=> array('appr-feedback-notes-block','row')),
  );
  
  $form['main_container']['heading'] = array(
    '#type' => 'markup',
  '#markup'=> '<div class="ins-feed-notes-title col-sm-12"><span class="ins-notes-title clearfix text-center">M6ID Message</span></div>',
  );
  
  $companyOnboardinguserDetail = _get_company_users_with_role_by_onboarding_roles($company->nid,array('M6ID Manager'));
  //print "<pre>"; print_r($companyOnboardinguserDetail); die;
  $onboardingUserLinks = array();
  if($companyOnboardinguserDetail && !empty($companyOnboardinguserDetail)){
    foreach($companyOnboardinguserDetail as $delta => $dataObj){
    $onboardingUserLinks[] = l(ucwords($dataObj->realname).'('.$dataObj->ogroles.')','user/'.$dataObj->uid);  
  }
  }
  
  $form['main_container']['left-manager-section'] = array(
    '#type' => 'markup',
  '#markup'=> '<div class="col-md-12 margin-bottom-10"><div class="ins-feed-submitter col-sm-6 padding-0">
           <div class="ins-feed-sub-title"><span class="sub-title">M6ID Manager-'.implode(',&nbsp;',$onboardingUserLinks).'</span></div>
         </div>',
  );
  
  $form['main_container']['right-user-section'] = array(
    '#type' => 'markup',
  '#markup'=> '<div class="ins-feed-approver col-sm-6 padding-0">
           <div class="ins-feed-sub-title"><span class="sub-title">'.l(ucwords($companyUser->realname),'user/'.$companyUser->uid).'</span></div>
         </div></div>',
  );
  
  /*$form['main_container']['detail_container']= array(
    '#type' => 'container',
  '#attributes'=> array('class'=> array('ins-feed-sub-rec-outer-blk')),
  '#prefix'=>'<div class="col-sm-12">',
  '#suffix' => '</div>'
  );
  
  $form['main_container']['detail_container']['left-manager-detail'] = array(
    '#type' => 'markup',
  '#markup'=> '<div class="ins-feed-submitter col-sm-6 padding-0">
           <div class="ins-sub-detail">
           <div class="ins-feed-sub-details">detail1</div>
           </div>
         </div>',
  );
  
  $form['main_container']['detail_container']['right-user-detail'] = array(
    '#type' => 'markup',
  '#markup'=> '<div class="ins-feed-approver col-sm-6 padding-0">
           <div class="ins-appr-detail">
           <div class="ins-feed-sub-details">detail2</div>
           </div>
         </div> ',
  );*/
  
  $form['main_container']['message_container']= array(
    '#type' => 'container',
  '#attributes'=> array('class'=> array('col-sm-12','margin-bottom-10')),
  );
  
  $form['main_container']['message_container']['message-list'] = array(
        '#markup' => get_onboarding_inter_company_message_content($onBoardingUids,$companyUser->uid,$comanyNode->nid),
    '#prefix' => '<div id="onboarding_company_internal_container">',
        '#suffix' => '</div>',
    );
  
  $form['main_container']['message_container']['message'] = array(
    '#type' => 'textfield',
    '#title' => 'Message',
    '#title_display' => 'invisible',                
    '#attributes' => array('placeholder' => 'Please provide comments', 'id' => 'approval_feedback_message', 'class' => array('approval_feedback_message_msg','bidder_feedback_message_msg', 'onkeypress' => array('if(event.keyCode==13){this.form.submit();}'))),
    '#prefix' => '<div class="bidder_feedback_message_msg_submit">',
    //'#suffix' => '</div>',
    '#maxlength' => 198,
  );
  $form['main_container']['message_container']['add'] = array(
    '#type' => 'submit',
    '#value' => 'Add',
    '#attributes' => array('class' => array('add_new_approval_feedback_message','add_new_bidder_feedback_message')),
    '#executes_submit_callback' => FALSE,
    '#limit_validation_errors' => array(),
    '#href' => '',
    '#ajax' => array(
      'callback' => 'add_new_onboarding_inter_company_message',
      'effect' => 'fade',
      'event' => 'click',
      'progress' => array('type' => 'none'),
    ),
    '#prefix' => '<div id="bidder-feedback-message-button" class="approval_feedback-message-button">',
    '#suffix' => '</div></div>',
  );
  
  $form['current-user']= array(
    '#type' => 'value',
  '#value' => $companyUser->uid,
  );
  $form['current-node']= array(
    '#type' => 'value',
  '#value' => $comanyNode->nid,
  );
  
  
  if(isset($form_state['ajax']) && $form_state['ajax']){
  $form['action-container'] = array(
    '#type' => 'actions',
    '#attributes' => array('class'=> array('pull-right')),
  ); 
  
  $form['action-container']['cancel-button'] = array(
    '#markup' => '<a href="javascript:void(0);" class="ob-msg-popup-close-link" onclick="jQuery(&quot;span.popups-close&quot;).click();"><input type="button" class="btn cancel-button" value="Close"></a>',
  ); 
  }
  return $form;
}

function get_onboarding_inter_company_message_content($onbManagerUids,$userUid,$companyNid){
  global $user;
  ctools_include('ajax');
  ctools_include('modal');

  $usertype == 2;
  if(in_array($user->uid,$onbManagerUids)){
  $usertype = 1;  
  }
  if($usertype == 1) {
  $curruserclass = 'cuser-is-submitter-approver';  
  } else {
  $curruserclass = 'cuser-not-submitter-approver';  
  }
  $output = '<div class="bidder-feedback-msg-list '.$curruserclass.' clearfix">';
  
  
  //$output .= 'onbManagerUids '.$onbManagerUids.' userUid '.$userUid.' companyNid '.$companyNid;
  if (db_table_exists('m6connect_onboarding_inter_company_message')) {
    $query = db_select('m6connect_onboarding_inter_company_message', 'rfm');
    $query->join('realname', 'r', 'r.uid=rfm.request_from');
    $query->leftJoin('field_data_field_user_profile_photo','fupp','fupp.entity_id=rfm.request_from AND fupp.bundle=:Bundle', array(':Bundle'=>'user'));
    $query->leftjoin('file_managed','fm','fm.fid=fupp.field_user_profile_photo_fid');
    $query->fields('rfm');
    $query->fields('r', array('realname'));
    $query->fields('fm', array('uri'));
    /*$db_and1 = db_and()->condition('rfm.request_from', $userUid, '=')->isNull('rfm.request_to');
    $db_and2 = db_and()->condition('rfm.user_type', 'ob_manager', '=')->condition('rfm.request_to', $userUid, '=');
    $db_or = db_or()->condition($db_and1)->condition($db_and2);
    $query->condition($db_or);*/    
    
    $db_and1 = db_and()->condition('rfm.request_from', array($userUid,$user->uid) , 'IN');
      $db_and2 = db_and()->condition('rfm.request_to', array($userUid,$user->uid), 'IN');
      $db_and = db_and()->condition($db_and1)->condition($db_and2);
      $query->condition($db_and);
    
    $query->condition('rfm.company_nid', $companyNid, '=');
    $query->orderBy('rfm.timestamp', 'ASC');
    $result = $query->execute()->fetchAll();
    if ($result && !empty($result)) {
    foreach ($result as $delta => $msgObj) {
      
      //print "<pre>"; print_r($msgObj); 
          if($msgObj->request_from != $msgObj->request_to) {
      if($msgObj->user_type == 'ob_manager') {
        $alignclass = 'feedback-msg-reader';
      }else{
      $alignclass = 'feedback-msg-writer'; 
      }
      $output .= '<div class="bidder-feedback-msg routing-feedback-msg-' . $msgObj->id . ' clearfix '.$alignclass.'">';
      
      $output .= '<div class="bidder-feedback-msg-attr pull-left">';
      $imgpath = !empty($msgObj->uri)?$msgObj->uri:'public://images_13.png';
      $imgurl =  image_style_url('user_pic_40x40',$imgpath);
      $userimg = '<img src="'.$imgurl.'">';
      $output .= '<span class="bidder-feedback-msg-time"><span class="msg-aut-img">'.$userimg.'</span></span>';
      $output .= '<span class="bidder-feedback-msg-msg"><strong>' .$msgObj->realname. '</strong> '.date('m/d/Y h:i A', $msgObj->timestamp) . ' '.$messagePrifix.' - ' . $msgObj->message . '</span>';
      $output .= '</div>';
          if($user->uid == $msgObj->request_from){    
        $output .= '<div class="bidder-feedback-msg-delete">';
      $output .= l('<i class="fa fa-times-circle"></i>', 'onboarding-inter-company-message_remove/'.$msgObj->id.'/'.$companyNid.'/'.$userUid.'/nojs', array('html' => TRUE, 'attributes' => array('class' => array('bidder-feedback-msg-delete-link', 'use-ajax'))));
        $output .= '</div>';
      }
      $output .= '</div>';
      }
    }
    }
  }
  $output .= '</div>';
  return $output; 
}

function add_new_onboarding_inter_company_message(&$form,&$form_state){
  global $user, $company;
  $commands = array();
  $output = '';
  $values = $form_state['values'];
  $message = trim($values['message']);
  $onboardingManagerUids = $form_state['company_onboarding_manager'];
  //print "<pre>"; print_r($onboardingManagerUids); die;
  $user_type = 'company_user';
  if (!empty($message) && is_numeric($values['current-user']) && is_numeric($values['current-node'])) {
  $request_to = NULL;
  if(in_array($user->uid,$onboardingManagerUids)){
    $user_type = 'ob_manager'; 
    $request_to = $values['current-user']; 
    }
  $approval_message= array(
   'request_from' => $user->uid,
   'request_to' => $request_to,
   'message' => $message, 
   'company_nid' => $values['current-node'],
   'user_type' => $user_type,
   'message_prefix' => NULL,
   'timestamp' => time(),
  ); 
   //print "<pre>"; print_r($approval_message); die;
   
    if(isset($onboardingManagerUids) && $user->uid != $request_to){
    foreach($onboardingManagerUids as $ukey=>$muids){
      _get_update_messenger_message($muids,$request_to,$message);
    }
  }
  $id = db_insert('m6connect_onboarding_inter_company_message')->fields($approval_message)->execute(); 
  $output = get_onboarding_inter_company_message_content($onboardingManagerUids,$values['current-user'],$values['current-node']);
  $commands[] = ajax_command_invoke('.approval_feedback_message_msg','val', array(''));
    $commands[] = ajax_command_html('#onboarding_company_internal_container', $output);
  
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}

function _get_company_onboarding_manager_uids($companyNid){
  global $company;
  $query = db_select('users','u');
  $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:EntityType', array(':EntityType'=>'user'));
  $query->join('og_users_roles','ogur','ogur.uid=og.etid AND ogur.gid=og.gid AND ogur.group_type=:GroupType',array(':GroupType'=>'node'));
  $query->join('og_role', 'ogr', 'ogur.rid = ogr.rid');
  $query->fields('u', array('uid'));
  $query->condition('og.gid',$companyNid,'=');
  $query->condition('ogr.group_bundle','organization','=');
  $query->condition('ogr.name','M6ID Manager','=');
  return $query->execute()->fetchCol(); 
}

function onboarding_inter_company_message_remove_callback($messagId,$cmpNid,$userId,$ajax=NUll){
  global $user, $company;
  $commands = array();
  $msgid = db_select('m6connect_onboarding_inter_company_message','oicm')
           ->fields('oicm',array('id'))
       ->condition('oicm.request_from',$user->uid,'=')
       ->condition('oicm.id',$messagId,'=')
       ->execute()->fetchColumn(0);
  if($msgid == $messagId){
  db_delete('m6connect_onboarding_inter_company_message')->condition('id',$messagId,'=')->execute();
  $commands[] = ajax_command_remove('.routing-feedback-msg-'.$messagId);
  }
  if($ajax){
  ctools_include('ajax');
  print ajax_render($commands);
    drupal_exit();  
  }
  drupal_goto('onboarding-company-messaging/'.$cmpNid.'/'.$userId);
}

function onboarding_add_new_project_callback($ajax=NULL){
  if($ajax){
  ctools_include('ajax');
    ctools_include('modal'); 
  $form_state = array(
    'title' => '<div style="font-size:15px;padding-top:10px;" class="text-center">M6ID Project</div>',
    'ajax' => TRUE,
  );
    $output = ctools_modal_form_wrapper('new_onboarding_project_form', $form_state);
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit(); 
  }
  return drupal_get_form('new_onboarding_project_form');
}

function new_onboarding_project_form($form, &$form_state){
  global $company;
  $cm = '';
  if(arg(0) == 'onboarding' && !empty(arg(3))){
    $cm = arg(3);
  }
  $myCounter = variable_get('onboardingProjectNumber');
  $currentYear = date('Y');
  $makeSr = str_pad($myCounter + 1, 6, "0", STR_PAD_LEFT);
  $onboardingProjectNumber = 'M6ID'.$makeSr.'-'.$currentYear;
  // Get all site Manger role User list
  $roleName = 'Site Manager';
  $query = db_select('users','u');
  $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:EntityType', array(':EntityType'=>'user'));
  $query->join('og_users_roles','ogur','ogur.uid=og.etid AND ogur.gid=og.gid AND ogur.group_type=:GroupType',array(':GroupType'=>'node'));
  $query->join('og_role', 'ogr', 'ogur.rid = ogr.rid');
  $query->join('realname', 'r', 'r.uid = u.uid');
  $query->fields('u', array('uid'));
  $query->fields('r', array('realname'));
  $query->condition('og.gid',$company->nid,'=');
  $query->condition('ogr.group_bundle','organization','=');
  $query->condition('ogr.name',$roleName,'=');
  $siteManager = $query->execute()->fetchAllKeyed(0,1); 
  
  $form['#attributes'] = array('class'=>array('onboarding-invite-form'));
  
  /*if(empty($form_state['ajax'])){
  drupal_set_title('M6ID Project');  
  }*/
  
  //$form['#prefix'] = '<div class="onboarding-project-header"><strong>M6ID Project</strong></div>';
  //'col-md-12','col-sm-12','col-xs-12',
  $form['main-container']['full-container']= array(
    '#type' => 'container',
  '#attributes' => array('class'=>array('project-details-full','margin-bottom-10')),
  '#weight' => 3,
  );  
  $form['main-container']['full-container']['onboarding-project-number'] = array(
    '#type' => 'textfield',
  '#title' => 'Project No.',
  '#disabled' => TRUE,
  '#attributes' => array('class'=> array('form-control onboarding-project-number')),
  '#prefix' => '<div class="project-details-border"><div class="clearfix form-item">',
  '#suffix' => '</div>',
  '#default_value' => $onboardingProjectNumber,
  );
  $form['main-container']['full-container']['onboarding-project-name'] = array(
    '#type' => 'textfield',
  '#title' => 'Project Name',
  //'#disabled' => TRUE,
  '#attributes' => array('class'=> array('form-control onboarding-project-name')),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div>',
  );
  $form['main-container']['full-container']['onboarding-site-manager']= array(
    '#type'=>'select',
  '#title' => 'Site Manager',
  '#options' => $siteManager,
  '#empty_option' => '- Select -',
  //'#attributes' => array('class'=> array('form-control estimate_status')),
  '#prefix' => '<div class="clearfix form-item">',
  '#suffix' => '</div></div>',
  );
  $form['cm_type'] = array(
    '#type' => 'hidden',
    '#value' => $cm,
  );
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));
  $form['actions']['submit'] = array(
    '#type' => 'submit',
  '#submit'=> array('new_onboarding_project_submit'),
  '#value' => 'Save',
  '#prefix' => '<div class="clearfix">',  
  '#suffix' => $closeButton.'</div></div></div>', 
  );  
  return $form; 
}

function new_onboarding_project_submit(&$form, &$form_state) {
  global $user;
  global $company;  
  $formVal = $form_state['values'];
  $formInput = $form_state['input'];
  $cmtype = '';
  if(!empty($formInput['cm_type'])){
    $cmtype = $formInput['cm_type'];
  }
  $url = '/onboarding/projectlist';
  $node = new stdClass();
  $node->type = 'onboarding_project';
  $node->title = $formVal['onboarding-project-name']!=''?$formVal['onboarding-project-name']:date('m-d-Y H:i:s');
  $node->uid = $user->uid;
  $node->language = en;
  $node->status = 1;
  $node->og_group_ref['und'][0]['target_id'] = $company->nid;
  $node->field_onboarding_site_manager['und'][0]['value'] = $formVal['onboarding-site-manager'];
  if(!empty($cmtype)){
    $node->field_cm_type['und'][0]['value'] = $cmtype;
    $url = '/onboarding/projectlist/'.$cmtype;
  }
  node_save($node);   
  drupal_set_message('New M6ID project created successfully!');
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
    $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
    $form_state['ajax_commands'][] = ctools_ajax_command_redirect($url);
  }else{
    $form_state['redirect'] = $url;  
  }
}

function m6connect_onboarding_node_presave($node) {
  if($node->type == 'onboarding_project') {   
    $onboardingNumber = variable_get('onboardingProjectNumber');    
    $currentYear = date('Y');
    $makeSr = str_pad($onboardingNumber, 6, "0", STR_PAD_LEFT);
    $proNumber = 'PM-'.$makeSr.'-'.$currentYear;    
    $node->field_project_number_cal['und'][0]['value'] = $proNumber;
    variable_set('onboardingProjectNumber', $onboardingNumber+1);
  }
}

function onboarding_inprocess_company_tab(){
  module_load_include('inc', 'm6connect_onboarding', 'includes/onbording.phase');
  return onboarding_inprocess_company_tab_content();
}

function onboarding_inprocess_project_tab(){
  module_load_include('inc', 'm6connect_onboarding', 'includes/onbording.phase');
  return onboarding_inprocess_project_tab_content();
}

function onboarding_invite_send_reminder($form,&$form_state,$dataId=''){
  $dataId = (!empty($form_state['dataId']))?$form_state['dataId']:$dataId;
  $form['#prefix'] = '<div class="onboarding-invite-send-header"><label>Would you like to send a Reminder? If so, please add a special note that will be included in email body.</label></div>';
  $form['reminder-message'] = array(
    '#type' => 'textarea',
    '#title' => 'Message',
    '#rows' => 5,
    '#attributes' => array('required'=>'required'),
    '#required' => TRUE,
  );  
  $form['dataid']= array(
    '#type' => 'value',
    '#value' => $dataId,
  );  
  $form['action-container'] = array(
    '#type' => 'actions',
    '#attributes' => array('class'=> array('pull-right')),
  );  
  $closeLink = l('<input type="button" class="form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('onboarding-invite-send-reminder-close'), 'onclick' => 'jQuery("span.popups-close").click();')));  
  $form['action-container']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Send',
    '#suffix' => $closeLink,
  );
  return $form;
}

function onboarding_invite_send_reminder_submit(&$form,&$form_state){
  global $user, $base_url, $base_path;
  $values = $form_state['values'];
  $cm = '';
  if(!empty(arg(0)) && arg(0) == 'onbording-invited-action' && !empty(arg(1)) && arg(1) == 'reminder-requestee' && !empty(arg(4))){
    $cm = arg(4);
  }
  $redirect = url('onboarding-invite-companies');
  if(!empty($cm)){
    $redirect = url('onboarding-invite-companies/'.$cm);
  }
  if(!empty($values['dataid'])){
    $message = trim($values['reminder-message']); 
    $query = db_select('m6connect_onboarding_invite','oi');
    $query->leftjoin('node','cnode','cnode.nid=oi.requester_company');
    $query->leftjoin('node','pnode','pnode.nid=oi.invite_for_projects');
    $query->leftjoin('realname','ruser','ruser.uid=oi.requester_uid');
    $query->fields('oi');
    $query->addField('cnode','title','company_title');
    $query->addField('ruser','realname','user_title');
    $query->addField('pnode','title','project_title');
    $query->condition('oi.id',$values['dataid']);
    if(!empty($cm)){
      $query->condition('oi.cm_type', $cm, '=');
    }    
    $dataObj = $query->execute()->fetchObject(); 
    if(!empty($message) && is_object($dataObj)){
      db_insert('m6connect_onboarding_invite_reminder')->fields(array(
        'invite_id' => $values['dataid'],
      'message' => $message,
      ))->execute();
      
      $mailSubject = 'M6ID - Reminder Notification from [Onboarding:RequesterCompanyName] [Onboarding:RequesterprojectName]';
      $mailBoby = '<p>This is a reminder , that  your approval is required on M6ID request from [Onboarding:RequesterCompanyName] [Onboarding:RequesterprojectName].</p><p><strong>Message:</strong>&nbsp;[Onboarding:ReminderMessage]</p><p>Please click [Onboarding:LoginLink] to log into M6Connect to see the document and provide your approval. </p><p>Thank you,<br />[Onboarding:RequesterManagerName] <br />[Onboarding:RequesterCompanyName]</p>';
      $replace =  array(
        '[Onboarding:RequesterCompanyName]' => $dataObj->company_title,
      '[Onboarding:RequesterprojectName]' => !empty($dataObj->project_title)?'for '.$dataObj->project_title:'',
        '[Onboarding:LoginLink]' => l('here',$base_url.$base_path, array('external'=> TRUE)),
        '[Onboarding:RequesterManagerName]' => $dataObj->user_title,
      '[Onboarding:ReminderMessage]' => $message,
        );
      $params = array(
        'subject' => str_replace(array_keys($replace), array_values($replace),$mailSubject),
        'body' => str_replace(array_keys($replace), array_values($replace),$mailBoby),
        'sender' => $user->mail,
        'language' => language_default(),
        'module' => 'm6connect_misc',
        'key' => 'm6id_mail___m6id_company_email_reminder_invite',
        'build' => TRUE,
        );
      
      $mailsto = array();
      if(is_numeric($dataObj->requestee_company)){
      $comapnyManageres =  _get_company_users_email_by_onboarding_roles($dataObj->requestee_company,array('M6ID Manager','Site Manager','administrator member','company admin'));
      $sendToManagers = array();
      if(isset($comapnyManageres['M6ID Manager']) && !empty($comapnyManageres['M6ID Manager'])){
        $sendToManagers = $comapnyManageres['M6ID Manager'];
      }else if(isset($comapnyManageres['company admin']) && !empty($comapnyManageres['company admin'])){
        $sendToManagers = $comapnyManageres['M6ID Manager'];
      }else if(isset($comapnyManageres['administrator member']) && !empty($comapnyManageres['administrator member'])){
        $sendToManagers = $comapnyManageres['M6ID Manager'];  
      }
      if(!empty($sendToManagers)){
        foreach($sendToManagers as $index => $mgrDetail){
        $mailsto[] = $mgrDetail->company_email;
        }
      }
      }else if(!empty($dataObj->requestee_email)){
       $mailsto[] = $dataObj->requestee_email;
      }
      if(!empty($mailsto)){
        $mailarray = drupal_mail($params['module'], $params['key'], implode(',',$mailsto), $params['language'], $params);
      //drup_msg($mailarray); 
      }
    }
  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
  $form_state['ajax_commands'][] = ctools_ajax_command_redirect($redirect);  
  }else{
  $form_state['redirect'] = $redirect;
  }
}

function _get_company_users_with_role_by_onboarding_roles($cmpNid,$roleNames){
  $query = db_select('users','u');
  $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:EntityType', array(':EntityType'=>'user'));
  $query->join('og_users_roles','ogur','ogur.uid=og.etid AND ogur.gid=og.gid AND ogur.group_type=:GroupType',array(':GroupType'=>'node'));
  $query->join('og_role', 'ogr', 'ogur.rid = ogr.rid');
  $query->join('realname', 'r', 'r.uid = u.uid');
  $query->fields('u', array('uid'));
  $query->fields('r', array('realname'));
  $query->addExpression('GROUP_CONCAT(IF(ogr.name = \'M6ID Manager\', \'MM\', \'SM\')  SEPARATOR \',\')', 'ogroles');
  $query->condition('og.gid',$cmpNid,'=');
  $query->condition('ogr.group_bundle','organization','=');
  $query->condition('ogr.name',$roleNames,'IN');
  $query->groupBy('u.uid');
  $query->orderBy('ogr.name','DESE');
  return $query->execute()->fetchAll(); 
}

function _get_company_users_email_by_onboarding_roles($cmpNid,$roleNames){
  $output = array();
  $query = db_select('m6connect_og_membership_email','ome');
  $query->join('og_users_roles','ogur','ogur.uid=ome.user_uid AND ogur.gid= ome.entity_id');
  $query->join('og_role', 'ogr', 'ogur.rid = ogr.rid');
  $query->join('realname', 'r', 'r.uid = ome.user_uid');
  $query->fields('ome', array('company_email'));
  $query->fields('r', array('realname'));
  $query->fields('r', array('uid'));
  $query->fields('ogr', array('name'));
  $query->condition('ome.entity_id',$cmpNid,'=');
  $query->condition('ogr.group_bundle','organization','=');
  $query->condition('ogr.name',$roleNames,'IN');
  $query->orderBy('ogr.name','DESE');
  $result = $query->execute()->fetchAll(); 
  if($result && !empty($result)){
    foreach($result as $delta => $dataObj){
      $output[$dataObj->name][] = $dataObj;
    }
  }
  return $output;
}

function onboarding_m6id_content_access(){
  return FALSE; 
}

/**
 * Popup’s setings function.
 */
function onboarding_m6id_ctools_popup_style() {
    static $onboarding_m6id_popup = FALSE;
    if ($onboarding_m6id_popup == FALSE) {
        $onboarding_m6id_popup = TRUE;
        ctools_include('modal');
        ctools_include('ajax');
        ctools_modal_add_js();
        $onboarding_m6id_popup_style = array(
            'onboarding-m6id-popup-style' => array(
                'modalSize' => array(
                    'type' => 'fixed',
                    'width' => 320,
                    'height' => 'auto',
                ),
                'modalOptions' => array(
                    'opacity' => (float) 0.85,
                    'background-color' => '#000000',
                ),
                'closeText' => '<i class="fa fa-times-circle"></i>',
                'loadingText' => '',
                'animation' => 'fadeIn',
                'modalTheme' => 'OnboardingM6IDPopup',
                'animationSpeed' => 'fast',
        'modalClass' => 'm6id-batch-info-popup'
            ),
        );
        drupal_add_js($onboarding_m6id_popup_style, 'setting');
        ctools_add_js('m6connect_onboarding_message_modal', 'm6connect_onboarding');
    }
}

function onboarding_profile_status_tab($userUid=0){
  $output ='';
  $cuser = menu_get_object('user',1);
  if($userUid){
   $cuser = user_load($userUid); 
  }
  onboarding_message_ctools_popup_style();
  $statusClasses = array('Approved'=>'bg-success','Pending'=>'bg-warning','Rejected'=>'bg-danger');
  $header = array(
  array('data'=>'Company', 'class'=> array('text-left')),
  array('data'=>'Status', 'class'=> array('text-center')),
  //array('data'=>'Authorization', 'class'=> array('text-center')),
  array('data'=>'Message', 'class'=> array('text-center')),
  );
  
  if(arg(0)=='user-m6id-detail-info'){
  $header = array(
    array('data'=>'Company', 'class'=> array('text-left')),
    array('data'=>'Status', 'class'=> array('text-center')),
    );  
  }
  
  
  $rows = array();
  /*if(isset($entity->field_allow_onboarding_companies['und']) && count($entity->field_allow_onboarding_companies['und'])>0){
  $query = db_select('node','n');
  $query->join('field_data_field_allow_onboarding_companies','fac','fac.entity_id=n.nid');
  $query->join('node','cnode','cnode.nid=fac.field_allow_onboarding_companies_nid');
  $query->leftjoin('field_data_field_logo','cfl','cnode.nid=cfl.entity_id');
  $query->leftjoin('file_managed','fm','cfl.field_logo_fid=fm.fid');
  $query->leftjoin('m6connect_onboarding_colleagues_status','ocs','ocs.company_nid=cnode.nid AND ocs.user_uid=:uid',array(':uid'=>$entity->uid));
  $query->fields('cnode',array('title','nid'));
  $query->fields('ocs',array('status'));
  $query->fields('fm',array('uri'));
  $query->condition('n.nid',$entity->nid);
  $result = $query->execute()->fetchAll();
  //$actionbutton .= '<li class="open">'.l('Resubmit',url('onboarding-profile-submit-action/resubmit/'.$sts.'/'.$entity->uid.'/'.$entity->nid.'/'.$status->nid.'/nojs'), array('external'=>TRUE,'attributes'=> array('class'=>array('use-ajax')))).'</li>';
    //$actionbutton .= '<li class="open">'.l('Revoke',url('onboarding-profile-submit-action/revoke/'.$sts.'/'.$entity->uid.'/'.$entity->nid.'/'.$status->nid.'/nojs'), array('external'=>TRUE,'attributes'=> array('class'=>array('use-ajax')))).'</li>';
  */
  if(is_object($cuser)){
  $query = db_select('node','cnode');
  $query->join('og_membership','og','og.gid=cnode.nid AND og.entity_type=:EntityType AND og.group_type=:GroupType',array(':EntityType'=>'user',':GroupType'=>'node'));
  $query->join('field_data_field_type_of_company','ind','ind.entity_id=cnode.nid');
  $query->leftjoin('m6connect_onboarding_colleagues_status','ocs','ocs.company_nid=cnode.nid AND ocs.user_uid=:UserUid', array(':UserUid'=>$cuser->uid));
  $query->leftjoin('field_data_field_logo','flo','flo.entity_id=cnode.nid');
  $query->leftjoin('file_managed','fm','fm.fid=field_logo_fid');
  $query->fields('cnode',array('nid','title'));
  $query->fields('ocs',array('status','authorize','auth_mail_sent'));
  $query->fields('fm',array('uri'));
  $query->condition('og.etid',$cuser->uid);
  $query->condition ( 'ind.field_type_of_company_value','company','=');
  $query->orderBy('cnode.nid');
  //$condition = db_or()->condition('ocs.authorize',1)->condition('ocs.authorize',0)->condition('ocs.auth_mail_sent',1);
  //$query->condition ($condition);
  $result = $query->execute()->fetchAll();
  
  foreach($result as $cmpName => $dataObj){
    $statusText= 'Pending';
    $sts = -1;
    $companyLogo = (!empty($dataObj->uri)) ? theme('image_style', array('style_name' => 'user_pic_32x32', 'path' => $dataObj->uri, 'getsize' => TRUE)) : '<img src="'.$base_url.'/sites/all/themes/m6connect/images/default_company_profile.jpg" style="height:32; width:32px"/>';
    if(is_numeric($dataObj->status)){
    if($dataObj->status == 1){
      $statusText = 'Approved'; 
    }else if($dataObj->status == 2){
      $statusText = 'Pending';  
    }else{
      $statusText = 'Rejected'; 
    }
    $sts = $dataObj->status;
    }
    $actionbutton = '';
    /*if(is_numeric($dataObj->authorize) || $dataObj->auth_mail_sent==1){
    $actionbutton = '<div class="btn-group div-onboard-sts onboarding-autthorize-'.$cuser->uid.'-'.$dataObj->nid.'" id="div-onboard-sts">
    <button type="button" class="btn btn-success btn-md dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      Action </button><ul class="dropdown-menu onboarding-autthorize-action-dropdown">';
    if($dataObj->authorize==1){
      $actionbutton .= '<li>'.l('Revoke',url('onboarding-authorize-request/revoke/'.$cuser->uid.'/'.$dataObj->nid.'/nojs'), array('attributes'=> array('class'=>array('use-ajax')))).'</li>';  
    }else{
      $actionbutton .= '<li>'.l('Accept',url('onboarding-authorize-request/accept/'.$cuser->uid.'/'.$dataObj->nid.'/nojs'), array('attributes'=> array('class'=>array('use-ajax')))).'</li>';
    }
    $actionbutton .='</ul></div>';
    }*/
    if(arg(0)=='user-m6id-detail-info'){
    $rows[] = array(
      'data' => array(
      array('data'=>'<span>'.$companyLogo.'</span><span>&nbsp;'.$dataObj->title.'</span>','class'=> array('text-left')),
      array('data'=>$statusText,'class'=> array('text-center',$statusClasses[$statusText],'text-white')), 
      ),
    );  
    }else{
    $rows[] = array(
      'data' => array(
      array('data'=>'<span>'.$companyLogo.'</span><span>&nbsp;'.$dataObj->title.'</span>','class'=> array('text-left')),
      array('data'=>$statusText,'class'=> array('text-center',$statusClasses[$statusText],'text-white')),
      //array('data'=>$actionbutton,'class'=> array('text-center')), 
      array('data'=>l('<div class="onboarding-msg-icon"><img src="/sites/all/themes/m6connect/images/ins-msg-notify.png"></div>','onboarding-company-messaging/'.$dataObj->nid.'/'.$cuser->uid.'/nojs', array('html'=>TRUE,'attributes'=> array('class'=> array('ctools-use-modal','ctools-modal-onboarding-message-popup-style')))), 'class'=> array('text-center')),      
      ),
    );
    }
  }
  $output =  theme('table', array('header' => $header, 'rows' => $rows, 'empty' => 'No Auhorization Request received to access M6ID','attributes'=>array('class'=>array('table','m6connect-custom-table','m6connect-onboarding-user-submit-table','table-hover','table-bordered','text-center'))));
  } 
  return $output;
}

function onboarding_send_authorize_request($user,$company,$ajax=NULL){
  $commands = array();
  db_merge('m6connect_onboarding_colleagues_status')->key(array('company_nid'=>$company->nid,'user_uid'=>$user->uid))->fields(array('company_nid'=>$company->nid,'user_uid'=>$user->uid,'auth_mail_sent'=>1,'auth_mail_timestamp'=>time()))->execute();
  //send Mail here
  $resentLink = l('Resend Request','send-authorize-request/'.$dataObj->uid.'/'.$company->nid.'/nojs',array('attributes'=>array('class'=> array('use-ajax'))));
  $commands[] = ajax_command_html('table.m6connect-onboarding-colleagues-table tr.colleagues-'.$user->uid.'-'.$company->nid.'-row td.authorize-request-td','Request Sent<br>'.$resentLink);
  if($ajax){
    print ajax_render($commands);
    drupal_exit(0);
  }
  drupal_goto('/onboarding/colleagues');
}

function onboarding_authorize_request_action($action,$user,$company,$ajax=NULL){
  $commands = array();
  $redirect = array('send'=>url('onboarding/colleagues'));
  if($action=='send'){
   db_merge('m6connect_onboarding_colleagues_status')->key(array('company_nid'=>$company->nid,'user_uid'=>$user->uid))->fields(array('company_nid'=>$company->nid,'user_uid'=>$user->uid,'auth_mail_sent'=>1,'auth_mail_timestamp'=>time()))->execute();
    $resentLink = l('Resend Request','onboarding-authorize-request/send/'.$dataObj->uid.'/'.$company->nid.'/nojs',array('attributes'=>array('class'=> array('use-ajax'))));
    $commands[] = ajax_command_html('table.m6connect-onboarding-colleagues-table tr.colleagues-'.$user->uid.'-'.$company->nid.'-row td.authorize-request-td','Request Sent<br>'.$resentLink); 
  if(!$ajax){
    drupal_goto('/onboarding/colleagues');  
  }
  }else if($action =='accept'){
   db_merge('m6connect_onboarding_colleagues_status')->key(array('company_nid'=>$company->nid,'user_uid'=>$user->uid))->fields(array('company_nid'=>$company->nid,'user_uid'=>$user->uid,'authorize'=>1))->execute();
   $revokeLink = '<li>'.l('Revoke','onboarding-authorize-request/revoke/'.$user->uid.'/'.$company->nid.'/nojs',array('attributes'=>array('class'=> array('use-ajax')))).'</li>';
   $commands[] = ajax_command_html('table.m6connect-onboarding-user-submit-table .onboarding-autthorize-'.$user->uid.'-'.$company->nid.' ul.onboarding-autthorize-action-dropdown',$revokeLink);
   $commands[] = ajax_command_invoke('table.m6connect-onboarding-user-submit-table .onboarding-autthorize-'.$user->uid.'-'.$company->nid,'removeClass',array('open'));
   
  }else if($action =='revoke'){
   db_merge('m6connect_onboarding_colleagues_status')->key(array('company_nid'=>$company->nid,'user_uid'=>$user->uid))->fields(array('company_nid'=>$company->nid,'user_uid'=>$user->uid,'authorize'=>0,'employee_id'=>NULL,'badge_number'=>NULL,'health_screen'=>NULL,'background_check'=>NULL,'auth_mail_sent'=>NULL,'status'=>NULL,'auth_mail_timestamp'=>NULL))->execute();
   $acceptLink = '<li>'.l('Authorize','onboarding-authorize-request/accept/'.$user->uid.'/'.$company->nid.'/nojs',array('attributes'=>array('class'=> array('use-ajax')))).'</li>';
   $commands[] = ajax_command_html('table.m6connect-onboarding-user-submit-table .onboarding-autthorize-'.$user->uid.'-'.$company->nid.' ul.onboarding-autthorize-action-dropdown',$acceptLink);
   $commands[] = ajax_command_invoke('table.m6connect-onboarding-user-submit-table .onboarding-autthorize-'.$user->uid.'-'.$company->nid,'removeClass',array('open'));  
  }
  if($ajax){
    print ajax_render($commands);
    drupal_exit(0);
  } 
}

//************************* Start Add New Employee ************************//

function onboarding_invite_employee_callback($ajax=FALSE){
  if($ajax){
    $form_state = array(
      'title' => '<div style="font-size:15px;padding-top:10px;">M6ID Invite Employee(s)</div>',
      'ajax' => TRUE,
    );
    $output = ctools_modal_form_wrapper('onboarding_invite_employee_form', $form_state); 
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit(); 
  }
  return drupal_get_form('onboarding_invite_employee_form');
}

function onboarding_invite_employee_form($form,&$form_state){
  global $company;
  if(isset($form_state['ajax']) && !empty($form_state['ajax'])){
    //$form['#prefix'] = '<div class="form-header text-center"><h3>M6ID Invite Employee(s)</h3></div>';
  }
  $cm = '';
  if(!empty(arg(2))){
    $cm = arg(2);
  }
  if(empty($form_state['invite-employee-storage']) && empty($form_state['invite-employee-storage-initialize'])){
    $form_state['invite-employee-storage-initialize'] =1;
    $query = db_select('users','u');
    $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:entityType',array(':entityType'=>'user'));
    $query->join('m6connect_og_membership_email','ogm','og.etid=ogm.user_uid AND ogm.entity_id=og.gid');
    $query->leftjoin('node','n','n.uid=u.uid AND n.type=:nodeType',array(':nodeType'=>'onboarding'));
    $query->leftjoin('field_data_field_first_name','fn','fn.entity_id=u.uid AND fn.bundle=:userBundle', array(':userBundle'=>'user'));
    $query->leftjoin('field_data_field_last_name','ln','ln.entity_id=u.uid AND ln.bundle=:userBundle', array(':userBundle'=>'user'));
    $query->leftjoin('field_data_field_phone','ph','ph.entity_id=u.uid AND ph.bundle=:userBundle', array(':userBundle'=>'user'));
    $query->fields('u',array('uid'));
    $query->addField('ogm','company_email','email');
    $query->addField('fn','field_first_name_value','fname');
    $query->addField('ln','field_last_name_value','lname');
    $query->addField('ph','field_phone_value','phone');
    $query->condition('og.gid',$company->nid,'=');
    $query->condition('og.state',1,'=');
    if(!empty($cm)){
      $query->condition('ogm.cm_type',$cm,'=');
    }
    $query->isNull('n.nid');
    $result = $query->execute()->fetchAll();    
    if($result && !empty($result)){
      foreach($result as $delta => $dataObj){
        $tempIdentifer = uniqid();
        $form_state['invite-employee-storage'][$tempIdentifer] = (array)$dataObj; 
        $form_state['not-submitted-m6id'][$tempIdentifer]= $dataObj->uid; 
      }
      $tempIdentifer = uniqid();
      $form_state['invite-employee-storage'][$tempIdentifer] = array();
    }
  }
  
  if(empty($form_state['invite-employee-storage'])){
  $tempIdentifer = uniqid();
  $form_state['invite-employee-storage'][$tempIdentifer] = array();
  }
  
  $form['#attached']['js'] = array(
    drupal_get_path('module', 'm6connect_onboarding') . '/js/custom_international_phone.js',
  );

  
  $form['invite-container'] = array(
    '#type' => 'container',
    '#attributes'=> array('class'=>array('m6id-invite-container')),
    '#process' => array('m6id_invite_employees_container_process'),
    '#theme' => 'm6id_invite_employees_container_template',
    '#prefix' => '<div id="m6id-invite-employees-main-container" class="m6id-invite-employees-main-container margin-bottom-10">',
    '#suffix' => '</div>',
  );

  $form['cm'] = array(
    '#type' => 'hidden',
    '#value' => $cm,
  );
  
  $form['action-container'] = array(
    '#type' => 'actions',
    '#attributes'=> array('class'=>array('m6id-invite-action-container')),
    '#process' => array('m6id_invite_employees_action_process'),
  );
    
  return $form;
}

function m6id_invite_employees_container_process($elements, &$form_state){ 
  $inviteStorage = $form_state['invite-employee-storage'];
  $elements['#invite-employee-storage'] = $inviteStorage;
  $international_phone_libraries_path = libraries_get_path('intl-tel-input');
  $international_phone_module_path = drupal_get_path('module', 'international_phone');
  $international_phone_module_path1 = drupal_get_path('module', 'm6connect_onboarding').'/includes/m6_international_phone';
  //print "<pre>"; print_r($inviteStorage); die;
  foreach($inviteStorage as $uniqueId => $defaultValues){
    $elements[$uniqueId]['is_selected'] = array(
      '#type' => 'checkbox',
      '#attributes' => array('class'=>array('inite-workflow-is-selected')),
      '#parents' => array('invited-employees',$uniqueId,'is_selected'),
      '#return_value'=> $uniqueId,
    );
    
    $elements[$uniqueId]['email'] = array(
      '#type' => 'textfield',
      '#attributes' => array('class'=>array('inite-workflow-email',),'placeholder'=>'Email Address'),
      '#parents' => array('invited-employees',$uniqueId,'email'),
      '#ajax' => array(
        'callback' => 'm6id_employee_email_load_callback'
      ),
    );
    $elements[$uniqueId]['user_uid'] = array(
      '#type' => 'hidden',
      '#attributes' => array('class'=>array('inite-workflow-user-uid')),
      '#parents' => array('invited-employees',$uniqueId,'user_uid'),
      '#default_value' => 0,
    );
    $elements[$uniqueId]['phone'] = array(
      '#type' => 'textfield',
      '#attributes' => array('class'=>array('inite-workflow-phone','international_phone-number'),'placeholder'=>'Phone#'),
      '#parents' => array('invited-employees',$uniqueId,'phone'),
      '#attached' => array(
        'css'=> array(
          $international_phone_libraries_path . '/css/intlTelInput.css',
        ),
        'js'=>array(
          $international_phone_libraries_path . '/js/intlTelInput.min.js',
        //$international_phone_module_path . '/js/international_phone.js'
        ),
      ),
    ); 
    $elements[$uniqueId]['phone_code'] = array(
      '#type' => 'hidden',
      '#attributes' => array('class'=>array('international-phone-number-country-code')),
      '#parents' => array('invited-employees',$uniqueId,'phone_code'),
    ); 
    $elements[$uniqueId]['fname'] = array(
      '#type' => 'textfield',
      '#attributes' => array('class'=>array('inite-workflow-fname',),'placeholder'=>'First Name'),
      '#parents' => array('invited-employees',$uniqueId,'fname'),
    );
    $elements[$uniqueId]['lname'] = array(
      '#type' => 'textfield',
      '#attributes' => array('class'=>array('inite-workflow-lname',),'placeholder'=>'Last Name'),
      '#parents' => array('invited-employees',$uniqueId,'lname'),
    );
    $elements[$uniqueId]['remove'] = array(
      '#type' => 'submit',
      '#value' => decode_entities('&#xf014;'),
      '#name' => $uniqueId,
      '#indx' => $defaultValues['uid'], // index for deletion
      '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('workflow-remove-submit')),
      '#parents' => array('invited-employees-remove',$uniqueId,'remove'),
      '#limit_validation_errors' => array(),
      '#submit'=> array('m6id_employee_remove_invited_submit_handler'),
      '#ajax' => array(
      'callback' => 'm6id_employee_remove_invited_callback',
      'wrapper' => 'm6id-invite-employees-main-container',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
       ),
    );
    if(!empty($defaultValues) && !empty($form_state['not-submitted-m6id']) && isset($form_state['not-submitted-m6id'][$uniqueId])){
      $elements[$uniqueId]['email']['#default_value'] = $defaultValues['email'];
      $elements[$uniqueId]['user_uid']['#default_value'] = $defaultValues['uid'];
      $elements[$uniqueId]['phone']['#default_value'] = $defaultValues['phone'];
      //$elements[$uniqueId]['phone_code']['#default_value'] = $defaultValues['email'];
      $elements[$uniqueId]['fname']['#default_value'] = $defaultValues['fname'];
      $elements[$uniqueId]['lname']['#default_value'] = $defaultValues['lname'];
      
      $elements[$uniqueId]['is_selected']['#parents'] = array('invited-colleagues',$uniqueId,'is_selected');
      $elements[$uniqueId]['email']['#parents'] = array('invited-colleagues',$uniqueId,'email');
      $elements[$uniqueId]['user_uid']['#parents'] = array('invited-colleagues',$uniqueId,'user_uid');
      $elements[$uniqueId]['phone']['#parents'] = array('invited-colleagues',$uniqueId,'phone');
      $elements[$uniqueId]['phone_code']['#parents'] = array('invited-colleagues',$uniqueId,'phone_code');
      $elements[$uniqueId]['fname']['#parents'] = array('invited-colleagues',$uniqueId,'fname');
      $elements[$uniqueId]['lname']['#parents'] = array('invited-colleagues',$uniqueId,'lname');
    }
  }
  return $elements; 
}

function theme_m6id_invite_employees_container_template($variables){
  $output = '';
  $elements = $variables['form'];
  $inviteStorage = $elements['#invite-employee-storage'];
   $selectAll = '<input type="checkbox" name="select-all-m6id-invite-emp" class="form-checkbox select-all-m6id-invite-emp">';
  $header = array(
      array('data'=> $selectAll, 'class'=> array()),
      array('data'=>'Email', 'class'=> array()),
    array('data'=>'Mobile Phone Number', 'class'=> array()),
    array('data'=>'First Name', 'class'=> array()),
    array('data'=>'Last Name', 'class'=> array()),
    array('data'=>'', 'class'=> array()),
  ); 
  $rows = array();
  foreach($inviteStorage as $uniqueId => $defaultValues){
  $phoneRow = '<div class="international-phone-number-fields-group">';
  $phoneRow .= drupal_render($elements[$uniqueId]['phone']);
  $phoneRow .= drupal_render($elements[$uniqueId]['phone_code']);
  $phoneRow .= '</div>';
  $rows[] = array(
    'data' => array(
      array('data'=>drupal_render($elements[$uniqueId]['is_selected']),'style'=>'vertical-align:middle;','class'=> array('m6id-invite-emp-td')),
      array('data'=>drupal_render($elements[$uniqueId]['email'])),
    array('data'=>$phoneRow),
    array('data'=>drupal_render($elements[$uniqueId]['fname'])),
    array('data'=>drupal_render($elements[$uniqueId]['lname'])),
    array('data'=>drupal_render($elements[$uniqueId]['remove']),'class'=> array('workflow-remove-td')),
    ),
    'class' => array('custom-odd'),
  );  
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('m6id-invite-emp-table','table','m6connect-custom-table','table-hover','m6connect-table-border')),'sticky'=> FALSE));
  $output .= drupal_render_children($elements);
  return $output;
}

function m6id_invite_employees_action_process($element,&$form_state){  
  $element['add_new_row'] = array(
    '#type'=>'submit',
    '#value' => 'Add New Row',
    '#name' => 'add_new_row',
    '#attributes'=> array('class'=>array('m6id-invite-workflow-action'),'title'=>'Add New Invite'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('add_new_invite_employee_submit_handler'),
    '#ajax' => array(
      'callback' => 'add_new_invite_employee_callback',
      'wrapper' => 'm6id-invite-employees-main-container',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
    ),
  );
  
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', url('onboarding/colleagues'), array('html'=>TRUE,'attributes' => array('class' => array('m6id-popup-close'))));
  if(!empty($form_state['ajax'])){
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));  
  }
  
  $element['submit']= array(
    '#type' =>'submit',
    '#value' => 'Invite',
    '#name' => 'invite',
    '#attributes'=> array('class'=>array('m6id-invite-workflow-action'),'title'=>'Save Invites'),
    '#validate' => array('m6id_invite_workflow_action_validate'),
    '#suffix' => $closeButton,
  );
  
  return $element;  
}

function add_new_invite_employee_callback($form,&$form_state){
  return $form['invite-container']; 
}

function add_new_invite_employee_submit_handler(&$form,&$form_state){
  $tempIdentifer = uniqid();
  $form_state['invite-employee-storage'][$tempIdentifer] = array();   
  $form_state['rebuild'] = TRUE;
}

function m6id_employee_remove_invited_callback($form,&$form_state){
  return $form['invite-container'];
}

function m6id_employee_remove_invited_submit_handler(&$form,&$form_state){
  global $company;
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1]; 

  ///***************************//
  $form_state['invited_employee_id'] = '';
  $uids = $form_state['triggering_element']['#indx'];

  //print "<pre>"; print_r($uids); die;
  if(!empty($uids)){
    $deleted = db_delete('m6connect_og_membership_email')->condition('user_uid',$uids,'=')->condition('entity_id',$company->nid,'=')->execute();
    $form_state['invited_employee_id'] = $uids; 
  }
  //***************************//
  if(isset($form_state['invite-employee-storage'][$identifier])){
    unset($form_state['invite-employee-storage'][$identifier]); 
  }
  $form_state['rebuild'] = TRUE;  
}

function m6id_employee_email_load_callback($form,&$form_state){
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1]; 
  $company_mail = trim($triggering_element['#value']);
  $default_values = array('phone'=>'','fname'=>'','lanme'=>'');
  if(!empty($company_mail)){
  $userDetails = _get_user_details_by_og_email($company_mail);
  if($userDetails && is_object($userDetails)){
    $default_values = array(
      'phone'=>$userDetails->field_phone_value,
      'fname'=>$userDetails->field_first_name_value,
      'lname'=>$userDetails->field_last_name_value,
      'user_uid' => $userDetails->uid
    );
    $commands[] = ajax_command_invoke('input[name="invited-employees['.$identifier.'][user_uid]"]','val',array($default_values['user_uid']));
    $commands[] = ajax_command_invoke('input[name="invited-employees['.$identifier.'][fname]"]','val',array($default_values['fname']));
      $commands[] = ajax_command_invoke('input[name="invited-employees['.$identifier.'][lname]"]','val',array($default_values['lname']));
      $commands[] = ajax_command_invoke('input[name="invited-employees['.$identifier.'][phone]"]','intlTelInput',array('setNumber',$default_values['phone']));  
  }
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function m6id_invite_workflow_action_validate(&$form,&$form_state){
  $elementErrorCount = array('email'=>0,'phone'=>0,'fname'=>0,'lname'=>0);
  foreach($form_state['values']['invited-employees'] as $uniqueId => $dataValues){
    $dataValues = array_map('trim',$dataValues);  
    if(empty($dataValues['email']) && empty($dataValues['phone'])) {
      if(empty($dataValues['email'])) {
        form_set_error('invited-employees]['.$uniqueId.'][email','Enter Valid Email.');
      }
      else {
        if(!valid_email_address($dataValues['email'])){
          $message = ($elementErrorCount['email']==0)?'Enter valid Email.':'';
          form_set_error('invited-employees]['.$uniqueId.'][email',$message); 
          $elementErrorCount['email']++;
        } 
      }
      if(empty($dataValues['phone'])) {
        form_set_error('invited-employees]['.$uniqueId.'][phone','Enter Valid Phone.'); 
      }   
    }    
    
    /*if(empty($dataValues['email']) || !empty($dataValues['phone'])) {
      if(!valid_email_address($dataValues['email'])){
        $message = ($elementErrorCount['email']==0)?'Enter valid Email.':'';
        form_set_error('invited-employees]['.$uniqueId.'][email',$message); 
        $elementErrorCount['email']++;
      } 
      if(empty($dataValues['phone'])){
        $message = ($elementErrorCount['phone']==0)?'Enter valid Phone Number.':'';
        form_set_error('invited-employees]['.$uniqueId.'][phone',$message); 
        $elementErrorCount['phone']++;
      }  
    }
    else if(!empty($dataValues['email']) || empty($dataValues['phone'])) {
      if(!valid_email_address($dataValues['email'])){
        $message = ($elementErrorCount['email']==0)?'Enter valid Email.':'';
        form_set_error('invited-employees]['.$uniqueId.'][email',$message); 
        $elementErrorCount['email']++;
      } 
      if(empty($dataValues['phone'])){
        $message = ($elementErrorCount['phone']==0)?'Enter valid Phone Number.':'';
        form_set_error('invited-employees]['.$uniqueId.'][phone',$message); 
        $elementErrorCount['phone']++;
      }  
    }*/
    
    if(empty($dataValues['fname'])){
      $message = ($elementErrorCount['fname']==0)?'Enter First Name.':'';
      form_set_error('invited-employees]['.$uniqueId.'][fname',$message); 
      $elementErrorCount['fname']++;
    }
    if(empty($dataValues['lname'])){
      $message = ($elementErrorCount['lname']==0)?'Enter Last Name.':'';
      form_set_error('invited-employees]['.$uniqueId.'][lname',$message); 
      $elementErrorCount['lname']++;
    }
  }
}

function onboarding_invite_employee_form_submit(&$form,&$form_state){ 
  //drup_msg($form_state['values']);
  global $user,$company, $base_url,$base_path;
  $input = $form_state['input'];
  $currentUserName = db_select('realname','r')->fields('r',array('realname'))->condition('r.uid',$user->uid)->execute()->fetchField();
  $currentUserName = ucwords($currentUserName);
  $currentCompanyName = ucwords($company->title);
  $signupLink = l('sign in',$base_url.$base_path,array('external'=>TRUE));
  $paramsTemp = array(
    'sender' => $user->mail,
    'language' => language_default(),
    'module' => 'm6connect_misc',
    'key' => 'm6id_mail___m6id_invite_employee_notify',
    'build' => TRUE,
  );  
  $cm = '';
  if(!empty($input['cm'])){
    $cm = $input['cm'];
  }
  
  //$message = '<p>[M6ID:Invitee_Name],</p><p>Please [M6ID:Signup] to M6Connect and join [M6ID:InviterCompanyName]. This system will be used for onboarding with the respective primes that we commonly work for – it will save us time in safety training and jobsite orientations going forward.<br/>Once you have signed in, navigate to the personal profile and complete the M6ID information. We will use this information to share with the companies we do work with - this streamlines the onboarding process for new projects..</p><p>Sincerely,<br />[M6ID:InviterName]<br />[M6ID:InviterCompanyName]</p>';
  $message = '<p>[M6ID:Invitee_Name],</p><p>Please [M6ID:Signup] to M6Connect and join [M6ID:InviterCompanyName]. This system will be used for onboarding with the respective clients that we commonly work for – it will save us time in safety training and jobsite orientations going forward.<br/><br/>Once you have signed in, navigate to the personal profile and complete the M6ID information - click on the pencil next to your name underneath the accounts section on the left menu and you&apos;ll find the M6ID section there. We will use this information to share with the companies we do work with - this streamlines the onboarding process for new projects.</p><p>Sincerely,<br />[M6ID:InviterName]<br />[M6ID:InviterCompanyName]</p>';
  
  $ogrolesk = og_roles('node', 'organization');
 
  foreach($form_state['values']['invited-employees'] as $uniqueId => $dataValues){
    $dataValues = array_map('trim',$dataValues);
     //drup_msg($dataValues);
    if(empty($dataValues['is_selected'])){
      continue;
    }
    if($dataValues['user_uid'] && is_numeric($dataValues['user_uid'])){
      //print "<pre>"; print_r($dataValues['user_uid']); die;
      $account = user_load($dataValues['user_uid']);
      $edit = array();
      $edit['field_user_company']['und'][0]['target_id'] = $company->nid;
      $edit['field_organization_mail']['und'][0]['email']= $dataValues['email'];
        user_save($account, $edit);  
      $membership = og_group('node', $company->nid, array(
        'entity type' => 'user',
        'entity' => $account,
        'state' => OG_STATE_ACTIVE,
      ));
      //drup_msg($membership);
      if(isset($membership->id) && is_numeric($membership->id)){
        if(($staffRollId = array_search('staff',$ogrolesk))!==FALSE){
          og_role_grant('node', $company->nid, $account->uid, $staffRollId);
        }   
        if(db_table_exists('m6connect_company_join_request')){
          db_merge('m6connect_company_join_request')
          ->key(array('entity_id'=>$values['join_company'],'user_uid'=>$account->uid,'status'=>0))
          ->fields(array(
            'entity_id'=>$company->nid,
            'user_uid'=>$account->uid,
            'join_email'=>$dataValues['email'],
            'timestamp'=>time(),
            'status'=>1,
          ))->execute(); 
        }
      }
    }
    else{
      db_merge('m6connect_onboarding_invited_employee')
      ->key(array(
        'email' => $dataValues['email'],
        'company_nid' => $company->nid,
      ))
      ->fields(array(
        'email' => $dataValues['email'],
        'phone' => $dataValues['phone'],
        'country_code' => $dataValues['phone_code'],
        'first_name' => $dataValues['fname'],
        'last_name' => $dataValues['lname'],
        'user_uid' => is_numeric($dataValues['user_uid'])?$dataValues['user_uid']:0,
        'company_nid' => $company->nid,
        'requester_user' => $user->uid,
        'cm_type' => $cm,
      ))->execute();
    }
    
    //Mail
    $subject = '[M6ID:InviterName] has requested you to Join M6Connect';
    $params = $paramsTemp;
    $replace = array(
      '[M6ID:Invitee_Name]' => ucfirst($dataValues['fname']).' '.ucfirst($dataValues['lname']),
      '[M6ID:InviterName]' => $currentUserName,
      '[M6ID:InviterCompanyName]' => $currentCompanyName,
      '[M6ID:Signup]' => $signupLink,
    );
    $params['subject'] = str_replace(array_keys($replace),array_values($replace),$subject);
    $params['body'] = str_replace(array_keys($replace),array_values($replace),$message);
    drupal_mail($params['module'], $params['key'], $dataValues['email'], $params['language'], $params);   
    //notification
    if (isset($dataValues) && $dataValues['user_uid'] && db_table_exists('m6connect_notification'))
    {         
      $m6connect_notification = array(
        'type' => 'm6id',
        'event' => 'invite',
        'entity_id' => 0,
        'company_nid' => 0,
        'message' => Null,
        'request_from' => $user->uid,
        'request_to' => $dataValues['user_uid'],
        'status' => 1,
        'timestamp' => time(),
      );
      entity_save('m6connect_notification', (object) $m6connect_notification);
    }   
    //Send SMS
    //$phone_message = $currentUserName.' invited you to M6ID safe in oriantation by Signing up on line at m6connect.com';
    /*$phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile.  Click on your name under the accounts then you\'ll find the M6ID section there.';*/
    $phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile. Click on the pencil next to your name underneath the accounts section on the left menu and you\'ll find the M6ID section there.';
    
    $phoneCode = '+'.$dataValues['phone_code'];
    $phoneNumber = str_replace($phoneCode,'',$dataValues['phone']);
    m6connect_alert_twilio_send($phoneNumber, $phone_message, $phoneCode);
    //}
  }
  $return = array();
  if(isset($form_state['values']['invited-colleagues']) && !empty($form_state['values']['invited-colleagues'])){
    foreach($form_state['values']['invited-colleagues'] as $uniqueId => $dataValues){
      //Mail
      $dataValues = array_map('trim',$dataValues);
      if(empty($dataValues['is_selected'])){
        continue;
      }
      $subject = '[M6ID:InviterName] has requested you to Join M6Connect\'s M6ID system';
      $params = $paramsTemp;
      $replace = array(
      '[M6ID:Invitee_Name]' => ucfirst($dataValues['fname']).' '.ucfirst($dataValues['lname']),
      '[M6ID:InviterName]' => $currentUserName,
      '[M6ID:InviterCompanyName]' => $currentCompanyName,
      '[M6ID:Signup]' => $signupLink,
      );
      $params['subject'] = str_replace(array_keys($replace),array_values($replace),$subject);
      $params['body'] = str_replace(array_keys($replace),array_values($replace),$message);
      drupal_mail($params['module'], $params['key'], $dataValues['email'], $params['language'], $params);
      //Send SMS
      if(!empty($dataValues['phone_code']) && !empty($dataValues['phone'])){
        //$phone_message = $currentUserName.' invited you to M6ID safe in oriantation by Signing up on line at m6connect.com';
        /*$phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile - login and click on the pencil next to your name.';*/
      
        $phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile. Click on the pencil next to your name underneath the accounts section on the left menu and you\'ll find the M6ID section there.';
        $phoneCode = '+'.$dataValues['phone_code'];
        $phoneNumber = str_replace($phoneCode,'',$dataValues['phone']);
        m6connect_alert_twilio_send($phoneNumber, $phone_message, $phoneCode);
      }
    }
  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
    $form_state['ajax_commands'][] = ctools_modal_command_dismiss(); 
    $form_state['ajax_commands'][] = ctools_ajax_command_reload(); 
  }else{
    $form_state['redirect'] = url('onboarding/colleagues');  
  }
}
//************************* End Add New Employee ************************//

//************************* Start Add New Company To Project ************************//
function onboarding_invite_companies_to_project_callback($projectNode, $ajax=NULL){
  if($ajax){
  $form_state = array(
    'title' => '<div style="font-size:15px;padding-top:10px;">Invite Companies - '.$projectNode->title.'</div>',
    'ajax' => TRUE,
    'project_nid' => $projectNode->nid,
  );
  $output = ctools_modal_form_wrapper('onboarding_project_invite_company_form', $form_state); 
  if (!empty($form_state['ajax_commands'])) {
    $output = $form_state['ajax_commands'];
  }
  print ajax_render($output);
  drupal_exit(); 
  }
  return drupal_get_form('onboarding_project_invite_company_form',$projectNode->nid); 
}

function onboarding_project_invite_company_form($form,&$form_state,$project_nid=''){
  global $company;
  $project_nid = (!empty($project_nid))?$project_nid:$form_state['project_nid'];
  $projectNode = node_load($project_nid);
  if(empty($form_state['comapny_listing'])){
    $form_state['comapny_listing'] = _get_all_organigation_mapping();
    if(isset($form_state['comapny_listing'][$company->nid])){
      unset($form_state['comapny_listing'][$company->nid]);
    }
    $_SESSION['comapny_listing'] = $form_state['comapny_listing'];
  }
  
  /*if(isset($form_state['values'],$form_state['input'],$form_state['triggering_element'],$form_state['triggering_element']['#type'])){
  $triggering_element = $form_state['triggering_element'];
  if($triggering_element['#type']=='textfield'){
    if($triggering_element['#parents'][0]=='invited_company' && $triggering_element['#parents'][2]=='company_name'){
      if(!empty($triggering_element['#value'])){
        $tempIndentifer = uniqid();
        $form_state['project_company_invite_storage'][$tempIndentifer]= array('type'=>'company');
      }
    }else if($triggering_element['#parents'][0]=='invited_email' && $triggering_element['#parents'][2]=='email_address'){
       if(!empty($triggering_element['#value'])){
       $tempIndentifer = uniqid();
         $form_state['project_company_invite_storage'][$tempIndentifer]= array('type'=>'email'); 
     }
    }
  }
  }*/
  
  $form['project_nid']= array(
    '#type' => 'value',
    '#value' => $project_nid,
  );  
  
  if(empty($form_state['project_company_invite_storage']) && empty($form_state['project_company_invite_storage_initialize'])){
    $form_state['project_company_invite_storage_initialize'] =1;
    if(isset($projectNode->field_m6id_project_invited_comp['und']) && !empty($projectNode->field_m6id_project_invited_comp['und'])){
      foreach($projectNode->field_m6id_project_invited_comp['und'] as $delta => $item){
        $form_state['project_company_default_invited'][] =  $item['target_id'];  
      }
    }
    if(isset($projectNode->field_m6id_project_invited_email['und']) && !empty($projectNode->field_m6id_project_invited_email['und'])){
      foreach($projectNode->field_m6id_project_invited_email['und'] as $delta => $item){
        $form_state['project_email_default_invited'][] =  $item['value'];  
      }
    }
  }
  
  if(empty($form_state['project_company_invite_storage'])){
    $form_state['project_company_invite_storage']= array();
    $tempIndentifer = uniqid();
    $form_state['project_company_invite_storage'][$tempIndentifer]= array('type'=>'company');
  }
  
  $form['company_container'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=> array('m6id-projct-company-container')),
    '#prefix' => '<div id="m6id-projct-company-container-section" class="margin-bottom-10">',
    '#suffix' => '</div>',
    '#process' => array('project_invite_company_process_callback'),
    '#theme' => 'm6id_project_invite_companies_template',
  );
  
  $form['action_container'] = array(
    '#type' => 'actions',
  );
  
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', url('onboarding/projectlist'), array('html'=>TRUE,'attributes' => array('class' => array('m6id-popup-close'))));
  if(!empty($form_state['ajax'])){
    $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));  
  }
  
  $form['action_container']['add_new_email'] = array(
    '#type'=>'submit',
    '#value' => 'Add Email',
    '#name' => 'add_new_email',
    '#attributes'=> array('class'=>array('m6id-invite-workflow-action'),'title'=>'Add New Email'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('add_m6id_project_invite_email_company_submit_handler'),
    '#ajax' => array(
      'callback' => 'add_m6id_project_invite_email_company_callback',
      'wrapper' => 'm6id-projct-company-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
    ),
  );
  
  $form['action_container']['add_new_company'] = array(
    '#type'=>'submit',
    '#value' => 'Add Company',
    '#name' => 'add_new_company',
    '#attributes'=> array('class'=>array('m6id-invite-workflow-action'),'title'=>'Add New Company'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('add_m6id_project_invite_email_company_submit_handler'),
    '#ajax' => array(
      'callback' => 'add_m6id_project_invite_email_company_callback',
      'wrapper' => 'm6id-projct-company-container-section',
      'method' => 'replace',
      'effect' => 'fade',
      'progress' => array('type'=> 'throbber', 'message'=> NULL),
    ),
  );
  
  $form['action_container']['submit']= array(
    '#type' => 'submit',
    '#value' => 'Invite',
    '#suffix' => $closeButton,
  );
  return $form;
}

function project_invite_company_process_callback($element,&$form_state){
  $storage = $form_state['project_company_invite_storage'];
  $element['#project_company_invite_storage'] = $storage;
  foreach($storage as $uniqueId => $defaultValue){
  if($defaultValue['type'] =='company'){
    $element[$uniqueId]['invite_companies']=  array(
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control','project-company-field'),'placeholder'=>'Enter the company name'),
    '#parents' => array('invited_company',$uniqueId,'company_name'),
    '#autocomplete_path' => 'routing-company/autocomplete',
    '#ajax' => array(
      'callback' => 'm6id_project_company_fill_callback',
      'event' => 'blur',
      'wrapper' => 'm6id-projct-company-container-section',
      'method' => 'replace',
      'effect' => 'fade',
    ), 
    '#default_value' => (isset($defaultValue['company_name']))?$defaultValue['company_name']:''
    );
    $element[$uniqueId]['invite_companies_nids']=  array(
    '#type' => 'select',
    '#options' => $form_state['comapny_listing'],  
    '#attributes' => array('class'=> array('project-company-field-select'),'style'=>'display:none;'),
    '#parents' => array('invited_company',$uniqueId,'company_nid'),
    '#empty_option'=> '',
    '#default_value' => (isset($defaultValue['company_nid']))?$defaultValue['company_nid']:''
    );
  }else{
    $element[$uniqueId]['invite_companies']=  array(
    '#type' => 'textfield',
    '#attributes' => array('class'=> array('form-control','project-email-field'),'placeholder'=>'Enter Email Address'),
    '#parents' => array('invited_email',$uniqueId,'email_address'),
    '#ajax' => array(
      'callback' => 'm6id_project_email_fill_callback',
      'event' => 'blur',
      'wrapper' => 'm6id-projct-company-container-section',
      'method' => 'replace',
      'effect' => 'fade',
    ), 
    '#default_value' => (isset($defaultValue['email_address']))?$defaultValue['email_address']:''
    );
    $element[$uniqueId]['invite_companies_nids']=  array(
    '#type' => 'hidden', 
    '#attributes' => array('class'=> array('project-email-field-hidden'),'style'=>'display:none;'),
    '#parents' => array('invited_email',$uniqueId,'email_hidden'),
    );  
  }
  $element[$uniqueId]['remove'] = array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => $uniqueId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('workflow-remove-submit')),
    '#parents' => array('invited-employees-remove',$uniqueId,'remove'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('m6id_project_company_remove_submit_handler'),
    '#ajax' => array(
    'callback' => 'm6id_project_company_remove_callback',
    'wrapper' => 'm6id-projct-company-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
     ),
  ); 
  }
  return $element;  
}

function m6id_project_company_fill_callback($form,&$form_state){
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1]; 
  $commands[] = ajax_command_replace("#m6id-projct-company-container-section", render($form['company_container']));
  $companyNid = array_search($triggering_element['#value'],$form_state['comapny_listing']);
  $companyNid = ($companyNid)?$companyNid:'';
  $commands[] = ajax_command_invoke('select[name="invited_company['.$identifier.'][company_nid]"]','val', array($companyNid));
  return array('#type' => 'ajax','#commands' => $commands); 
}

function m6id_project_email_fill_callback($form,&$form_state){
  return $form['company_container'];
}

function m6id_project_company_remove_callback($form,&$form_state){
  return $form['company_container'];  
}

function m6id_project_company_remove_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1]; 
  if(isset($form_state['project_company_invite_storage'][$identifier])){
    unset($form_state['project_company_invite_storage'][$identifier]); 
  }
  $form_state['rebuild'] = TRUE;  
}

function add_m6id_project_invite_email_company_callback($form,&$form_state){
  return $form['company_container'];
}

function add_m6id_project_invite_email_company_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $tempIndentifer = uniqid();
  if($triggering_element['#name'] =='add_new_email'){
    $form_state['project_company_invite_storage'][$tempIndentifer]= array('type'=>'email');
  }else{
  $form_state['project_company_invite_storage'][$tempIndentifer]= array('type'=>'company');  
  }
  $form_state['rebuild'] = TRUE;
}

function theme_m6id_project_invite_companies_template($variables){
  $output = '';
  $element = $variables['element'];
  $inviteStorage = $element['#project_company_invite_storage'];
  $rows = array();
  $header = array(
      array('data'=>'Company(s)', 'class'=> array('col-md-11')),
    array('data'=>'', 'class'=> array('col-md-1')),
  ); 
  foreach($inviteStorage as $uniqueId => $defaultValue){
  $companyTab = drupal_render($element[$uniqueId]['invite_companies_nids']).drupal_render($element[$uniqueId]['invite_companies']);
  $rows[] = array(
    'data'=> array(
      array('data'=>$companyTab,'class'=>array('project-company-listing-td')),
    array('data'=>drupal_render($element[$uniqueId]['remove']),'class'=>array('project-company-name-td','workflow-remove-td')),
    ),
    'class' => array('custom-odd'),
  );  
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('m6id-invite-company-table','table','m6connect-custom-table','table-hover','m6connect-table-border')),'sticky'=> FALSE));
  $output .= drupal_render_children($element);
  return $output; 
}

function onboarding_project_invite_company_form_submit(&$form,&$form_state){//drup_msg($form_state['values']);//drup_msg($form_state);
  global $company, $user;
  global $base_url;
  $mailarray = array();
  $value = $form_state['values'];
  
  //print "<pre>"; print_r($value); die;
  $inviedcompanies = array();
  $index =0;
  $removedCompany = array();
  $project_invited_company_default = isset($form_state['project_company_default_invited'])?$form_state['project_company_default_invited']:array();
  $project_invited_email_default = isset($form_state['project_invited_email_default'])?$form_state['project_invited_email_default']:array();
  $new_invited_companies = array();
 
  $companyusersdetail = _get_user_mail_realname_by_uid($user->uid);
  $companyusersmail = $companyusersdetail['mail'];
  $companyusersfullname = $companyusersdetail['realname'];

  $mailSubject = 'M6ID Invitation for the [Onboarding:InvitedManagerTitle] Project';
  $mailBody = '[Onboarding:InvitedManagerName],<p>Your company has been invited to use M6Connect&apos;s M6ID service for the [Onboarding:InvitedManagerTitle] project. This is a requirement of your contract and will simplify the onboarding process for your workers.</p><p>You have been setup as an M6ID Manager for your company. Please sign in to <a href="'.$base_url.'">M6Connect</a> and navigate to M6ID located on the left menu under My Services. M6ID will be used for onboarding your workers (employees and subcontractors, consultants, labor, etc) – it will save us time in safety training and jobsite orientations going forward.</p><p><b>Step 1 - Manage Employees Section</b></p><p>You will need to invite all of your workers to M6ID and assist them in the signup process.</p><p>A. Under the M6ID tab, select the Manage Employees section.</p><p>B. Navigate to the + Invite Employees section and click on it and you will receive a popup to invite your employees.</p><p>C. In the popup, add the employees information or select them from the list by checking the check box(s) on the left side to invite them to project. They will receive an email, text or both depending on the information you provide.</p><p><b>Step 2 - Worker Signup Process</b></p><p>You will need to ensure your workers utilize the following steps for signup.</p><p>A. Login to <a href="'.$base_url.'">M6Connect.com</a> and join your company during the signup process. Your company administrator will need to approve the request to join your company. The administrator will be emailed each time a worker signs up and will need to grant them access.</p><p>B. Workers will need to complete all of the required fields in their M6ID profile. They may do so by clicking on the pencil next to their name underneath the Account Management section in the left hand menu.</p><p><b>Step 3 -  Submit Workers to Project(s)</b></p><p>A. Once workers have signed in and completed their M6ID profile you may then submit them projects.</p><p>B. To submit, navigate to the Project Invitations tab and then select the green Actions button drop Submit Employees.</p><p>C.Select the check boxes in the popup for those employees you wish to submit.</p><p>D.Step 3 must be completed before workers can be admitted on the project location.</p>
    <p>Thank you for your efforts in making the onboarding process go smoother. This new process will save your team and ours a significant amount of time during this startup process. If you have questions feel free to contact me '.$companyusersmail.' or you may contact support@m6connect.com.<p><br/><p>Sincerely,</p><p>'.$companyusersfullname.'</p><p>'.$company->title.'</p>';

  
  $mail_params = array(
    'subject' => $mailSubject,
    'body' => $mailBody,
    //'sender' => $user->mail,
    'language' => language_default(),
    'module' => 'm6connect_misc',
    'key' => 'm6id_mail___m6id_company_email_invite',
    'build' => TRUE,
  );

  if(isset($value['project_nid']) && is_numeric($value['project_nid'])){
    $node = node_load($value['project_nid']);
    $inside = 0;
    if($node && is_object($node) && $node->type =='onboarding_project'){
      if(!empty($value['invited_company'])){
        $inviteOnlyOnce = array();
        foreach($value['invited_company'] as $uniqueId => $datarr){
          if(!empty($datarr['company_name']) && $datarr['company_nid'] && is_numeric($datarr['company_nid'])){
          if(!in_array($datarr['company_nid'],$inviteOnlyOnce) && !in_array($datarr['company_nid'],$project_invited_company_default)){
            $node->field_m6id_project_invited_comp['und'][] = array('target_id'=>$datarr['company_nid']);
            $inside = 1;
            //notificaton
            $comapnyManageres =  _get_company_users_email_by_onboarding_roles($datarr['company_nid'],array('M6ID Manager','Site Manager','administrator member','company admin'));         
            $sendToManagers = array();
            if(isset($comapnyManageres['Site Manager']) && !empty($comapnyManageres['Site Manager'])){
            $sendToManagers = $comapnyManageres['Site Manager'];
            }else if(isset($comapnyManageres['M6ID Manager']) && !empty($comapnyManageres['M6ID Manager'])){
            $sendToManagers = $comapnyManageres['M6ID Manager'];
            }else if(isset($comapnyManageres['company admin']) && !empty($comapnyManageres['company admin'])){
            $sendToManagers = $comapnyManageres['company admin'];
            }else if(isset($comapnyManageres['administrator member']) && !empty($comapnyManageres['administrator member'])){
            $sendToManagers = $comapnyManageres['administrator member'];  
            }       
            if(!empty($sendToManagers)){
            foreach($sendToManagers as $index => $mgrDetail){           
               
              //drup_msg($mgrDetail);drup_msg($mgrDetail);drup_msg($mail_params);
              $replace = $mail_replace;
              $params = $mail_params;
              $replace['[Onboarding:InvitedManagerName]'] = ucwords($mgrDetail->realname);
              $replace['[Onboarding:InvitedManagerTitle]'] = ucwords($node->title);
              $params['subject'] =  str_replace(array_keys($replace),array_values($replace),$params['subject']);
              $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
              $mailarray[] = drupal_mail($params['module'], $params['key'], $mgrDetail->company_email, $params['language'], $params); 
              if (db_table_exists('m6connect_notification')) {          
              $m6connect_notification = array(
                'type' => 'm6id',
                'event' => 'project_invitations',
                'entity_id' => $value['project_nid'],
                'company_nid' => $datarr['company_nid'],
                'message' => NULL,
                'request_from' => $user->uid,
                'request_to' => $mgrDetail->uid,
                'status' => 1,
                'timestamp' => time(),
              );
              entity_save('m6connect_notification', (object) $m6connect_notification);
              }
            }
            }
            
          }
          }
        }
      }
      if(!empty($value['invited_email'])){
        $inviteOnlyOnce = array();
        $usersfulldetails = '';
        foreach($value['invited_email'] as $uniqueId => $datarr){
          if(!empty($datarr['email_address'])  && valid_email_address($datarr['email_address'])){
          if(!in_array($datarr['email_address'],$inviteOnlyOnce) && !in_array($datarr['email_address'],$project_invited_email_default)){
              $node->field_m6id_project_invited_email['und'][] = array('value'=>$datarr['email_address']);
              $usersfulldetails = _get_user_details_by_og_email($datarr['email_address']);
              if(empty($usersfulldetails)) {
                 $userName = $datarr['email_address'];
              }else{
                $userName = ucwords($usersfulldetails->realname);
              }
              //print "<pre>"; print_r($datarr['email_address']); die;
              $inside = 1; 
              $replace = $mail_replace;
              $params = $mail_params;
              $replace['[Onboarding:InvitedManagerName]'] = $userName;
              $replace['[Onboarding:InvitedManagerTitle]'] = ucwords($node->title);
              $params['subject'] =  str_replace(array_keys($replace),array_values($replace),$params['subject']);
              $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
              $mailarray[] = drupal_mail($params['module'], $params['key'], $datarr['email_address'], $params['language'], $params); 
          }
          }
        }
      }
    }
    node_save($node);
  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();  
  }else{
  $form_state['redirect'] = url('onboarding/colleagues');  
  }
  //drup_msg($mailarray);
}
//************************* End Add New Company To Project ************************//

//************************* Start Submit Employees To Project ************************//
function onboarding_submit_employee_to_project_callback($projectNode, $ajax=NULL){
  if($ajax){
  $form_state = array(
    'title' => '<div class="text-center" style="font-size:15px;padding-top:10px;">Submit Employees - '.$projectNode->title.'</div>',
    'ajax' => TRUE,
    'project_nid' => $projectNode->nid,
  );
  $output = ctools_modal_form_wrapper('onboarding_project_submit_employees_form', $form_state); 
  if (!empty($form_state['ajax_commands'])) {
    $output = $form_state['ajax_commands'];
  }
  print ajax_render($output);
  drupal_exit(); 
  }
  return drupal_get_form('onboarding_project_submit_employees_form',$projectNode->nid); 
}

function onboarding_project_submit_employees_form($form,&$form_state,$project_nid=''){
  global $company,$user;
  $cm = '';
  if(!empty(arg(3))){
    $cm = arg(3);
  }
  $options = array();
  $defaultOptions = array();
  $disabledCheckboxs = array();
  $project_nid = (!empty($project_nid))?$project_nid:$form_state['project_nid'];
  
  $flag = flag_get_flag('m6id_project_seen');
  if ($flag && !$flag->is_flagged($project_nid)) { 
  $flag->flag('flag', $project_nid, $user, TRUE);
  }
  $form['#attributes'] = array('class'=>array('onboarding_project_submit_employees_form'));
  
  $requester_company = db_select('og_membership','og')->fields('og',array('gid'))
                       ->condition('og.etid',$project_nid)->condition('og.entity_type','node') 
             ->condition('og.group_type','node')->execute()->fetchField(); 
  
  $header = array(
    'field_m6id' => array('data'=>'M6ID Number', 'class'=> array('text-center','no-sort')),
    'field_empId' => array('data'=>'Employee ID', 'class'=> array('text-center')),
    'field_contact' => array('data'=>'Contact', 'class'=> array('text-center')),
    //'field_hscreen' => array('data'=>'Health Screen', 'class'=> array('text-center')),
    //'field_bcheck' => array('data'=>'Background Check', 'class'=> array('text-center')),
    'field_m6id_status' => array('data'=>'M6ID Status', 'class'=> array('text-center')),
    'field_approval_status' => array('data'=>'Approval Status', 'class'=> array('text-center')),
  );
  
  $query = db_select('og_membership','og');
  $query->join('m6connect_og_membership_email','oge','og.gid=oge.entity_id AND oge.user_uid=og.etid');
  $query->leftjoin('node','n','n.uid=og.etid AND n.type=:nodeType',array(':nodeType'=>'onboarding'));
  $query->leftjoin('field_data_field_m6id','m6id','m6id.entity_id=og.etid AND m6id.bundle=:userBundle', array(':userBundle'=>'user'));
  $query->leftjoin('realname','r','r.uid=og.etid');
  $query->leftjoin('m6connect_onboarding_request','mor','mor.requstee_user=og.etid AND mor.requstee_company=:companyNid AND mor.requester_project=:ProjectNid',array(':companyNid'=>$company->nid,':ProjectNid'=>$project_nid));
  $query->leftjoin('field_data_field_last_name','lname','lname.entity_id=og.etid AND lname.bundle=:userBundle', array(':userBundle'=>'user'));
  $query->leftjoin('m6connect_onboarding_colleagues_status','ous','ous.user_uid=og.etid AND ous.company_nid=:companyNid',array(':companyNid'=>$company->nid));
  
  $query->fields('oge',array('user_uid','company_email'));
  $query->fields('mor',array('requstee_user'));
  $query->fields('m6id',array('field_m6id_value'));
  $query->fields('r',array('realname'));
  //$query->fields('r',array('realname'));
  $query->fields('ous',array('employee_id','health_screen','background_check','status'));
  $query->fields('n',array('nid'));
  $query->addExpression('IFNULL(n.nid,99999999999)','onboarding_nid');
  $query->condition('og.gid',$company->nid,'=');
  $query->condition('og.entity_type','user','=');
  $query->condition('og.state',1,'=');
  //$query->condition('ous.status',1,'=');
  /*if(!empty($cm)){
    $query->condition('oge.cm_type',$cm,'=');
  }*/
  $query->orderBy('onboarding_nid');
  $result = $query->execute()->fetchAll();
  
  if($result && !empty($result)){
    foreach($result as $index => $dataObj){
      $contact = $dataObj->realname.'<br />'.$dataObj->company_email;
      $health_screen = (is_numeric($dataObj->health_screen))?($dataObj->health_screen==0)?'Fail':'Pass':'';
      $background_check = (is_numeric($dataObj->background_check))?($dataObj->background_check==0)?'Fail':'Pass':'';
      $m6id_status = !empty($dataObj->nid)?'Completed':'<span class="text-danger">Not Completed</span>';    
      $approval_status = array(''=>'Pending',2=>'Pending',1=>'Approved',0=>'Rejected');
      $options[$dataObj->user_uid] = array(
        'field_m6id' => array('data'=>$dataObj->field_m6id_value, 'class'=> array('text-center')),
      'field_empId' => array('data'=>$dataObj->employee_id, 'class'=> array('text-center')),
      'field_contact' => array('data'=>$contact, 'class'=> array('text-center')),
      //'field_hscreen' => array('data'=>$health_screen, 'class'=> array('text-center')),
      //'field_bcheck' => array('data'=>$background_check, 'class'=> array('text-center')),
      'field_m6id_status' => array('data'=>$m6id_status, 'class'=> array('text-center '.$m6idstatusclass.'')),
        'field_approval_status' => array('data'=>$approval_status[$dataObj->status], 'class'=> array('text-center')),
      '#attributes'=> array('class'=>array('custom-odd')),
      );
      if($dataObj->requstee_user){
      $defaultOptions[$dataObj->user_uid] = TRUE; 
      }
      if(empty($dataObj->nid)){
      $disabledCheckboxs[$dataObj->user_uid] = TRUE;  
      }
    }
  }
  
  $form['project_nid'] = array(
    '#type' => 'value',
  '#value' => $project_nid,
  );
  
  $form['default_submitted'] =  array(
    '#type' => 'value',
  '#value' => array_keys($defaultOptions),
  );
  
  $form['m6id_not_submitted'] =  array(
    '#type' => 'value',
  '#value' => array_keys($disabledCheckboxs),
  );
  
  $form['requester_company'] =  array(
    '#type' => 'value',
  '#value' => $requester_company,
  );
  
  $form['submit_employees'] = array(
    '#type' => 'tableselect',
    '#attributes' => array('class'=> array('tableheader-processed','table','table-hover','table-bordered','text-center','onboarding_submit_employeee_table','onboarding_submit_employeee_check')),
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No Employeee Approved or Submitted their M6ID Form yet.'),
    '#js_select' => FALSE,
    '#default_value' => $defaultOptions,
    '#process' => array('form_process_tableselect','custom_submit_employees_tableselect_process'),
    '#disabled_checkbox' => $disabledCheckboxs,
    '#prefix' => '<div class="onboarding-submit-employeee-table-section">',
    '#suffix' => '</div>',
  );
  
  $form['action_container'] = array(
    '#type' => 'actions',
  '#attributes'=> array('class'=>array('pull-right')),
  );
  $url = '/onboarding/colleagues';
  if(!empty($cm)){
    $url = '/onboarding/colleagues/'.$cm;
  }
  $InviteCompaniesButton = l('Invite Employees', url($url), array('html'=>TRUE,'attributes' => array('class' => array('btn', 'btn-primary'))));
  $closeButton = l('<input type="button" class="form-submit" value="Cancelx" />', url('onboarding/projectlist'), array('html'=>TRUE,'attributes' => array('class' => array('m6id-popup-close'))));
  if(!empty($form_state['ajax'])){
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));  
  }
  
  $form['action_container']['submit']= array(
    '#type' => 'submit',
  '#value' => 'Submit',
  '#suffix' => $InviteCompaniesButton.$closeButton,
  );
  
  return $form;
}

function custom_submit_employees_tableselect_process($element, &$form_state){ //pre($element,1);
  foreach($element['#options'] as $key => $data){
  if(isset($element[$key])){
    if(isset($element[$key]['#attributes']['class'])){
    unset($element[$key]['#attributes']['class']);  
    }  
    if(isset($element['#disabled_checkbox'],$element['#disabled_checkbox'][$key])){
      $element[$key]['#disabled'] = $element['#disabled_checkbox'][$key];
    $element[$key]['#attributes']['title'] = 'M6ID Profile Not Submitted';
    }
  }
  }
  return $element;  
}
function onboarding_project_submit_employees_form_validate(&$form,&$form_state){
  if(isset($form_state['values']['submit_employees'])){
    $selectCount = 0;
    $Suser = array();
    foreach($form_state['values']['submit_employees'] as $key=>$value){   
      if($value != 0){
      ++$selectCount;
      $Suser[$key] = $value;
      }
    }
    if($selectCount <= 0){    
      form_set_error ('submit_employees','Please Select at least one');
    }
    
    $EmployeeStatus = _get_user_m6id_employee_status_by_comid();
    $ApprovedCount= 0;
    foreach($EmployeeStatus as $ukey=>$svalue){ 
      if(in_array($ukey,$Suser) && $svalue !=1){
        ++$ApprovedCount;
      }
    }
    if($ApprovedCount > 0){    
      form_set_error ('submit_employees','Employee must be in Approve status in order to submit.');
    } 
  }
  //pre($Suser); 
  //pre($ApprovedCount); 
 // pre($form_state['values'],1); 
}
function onboarding_project_submit_employees_form_submit(&$form,&$form_state){
  //pre($form_state['values'],1);
  global $company,$user;
  $values = $form_state['values'];
  $newEmployees = array();
  $revovedEmployee = array();
  if(is_numeric($values['project_nid']) && is_numeric($values['requester_company'])){
    $insert = db_insert('m6connect_onboarding_request')->fields(array('requester_company', 'requester_project', 'requstee_company', 'requstee_user','requster_status','requstee_status','submit_timestamp','request_id','request_type'));
    foreach($values['submit_employees'] as $empId => $isSubmited){
      if($isSubmited){
        if(!in_array($empId,$values['default_submitted']) && !in_array($empId,$values['m6id_not_submitted'])){
          $insert->values(array(
            'requester_company'=>$values['requester_company'],
            'requester_project'=>$values['project_nid'],
            'requstee_company'=>$company->nid,
            'requstee_user'=>$empId,
            'requster_status'=>0,
            'requstee_status'=>1,
            'submit_timestamp'=>time(),
            'request_id' => NULL,
            'request_type' => 'project_invite',
          ));
          $newEmployees[] = $empId;
          if(count($newEmployees) ==1){
            $viewSection = '.view-project-section-'.$values['project_nid'];
            $form_state['ajax_commands'][] = ajax_command_invoke($viewSection.' .btn-project-'.$values['project_nid'],'text',array('Submitted'));
            $form_state['ajax_commands'][] = ajax_command_remove($viewSection.' img.new-project-gif');
          }
        }     
      }else if(in_array($empId,$values['default_submitted'])){
        $revovedEmployee[] = $empId;   
      }
    }
    if(!empty($newEmployees)){
      $insert->execute();
    }
    if(!empty($revovedEmployee)){
      db_delete('m6connect_onboarding_request')->condition('requstee_user',$revovedEmployee,'IN')->condition('requester_project',$values['project_nid'])->condition('requester_company',$values['requester_company'])->condition('requstee_company',$company->nid)->condition('request_type','project_invite')->execute();
    }
  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
    $form_state['ajax_commands'][] = ctools_modal_command_dismiss();  
    $requsterDetail = _get_node_company_user_name($values['project_nid']);
    if(db_table_exists('m6connect_notification')){      
      $m6connect_notification = array(
        'type' => 'm6id',
        'event' => 'project_submit_employee',
        'entity_id' => $values['project_nid'],
        'company_nid' => $values['requester_company'],
        'message' => NULL,
        'request_from' => $user->uid,
        'request_to' => $requsterDetail['company_author'],
        'status' => 1,
        'timestamp' => time() 
      );
      entity_save ( 'm6connect_notification', ( object ) $m6connect_notification );
    }
  }else{
    $form_state['redirect'] = url('onboarding/projectlist');  
  }
}

function onboarding_reject_project_invitation_callback($projectNode){
  global $company;
  $removeFlag = 0;
  $cm = '';
  if(!empty(arg(2))){
    $cm = arg(2);
  }
  $requeter_company = _get_company_nid_by_group_content($projectNode);
  if(isset($projectNode->field_m6id_project_invited_comp['und']) && !empty($projectNode->field_m6id_project_invited_comp['und'])){
    foreach($projectNode->field_m6id_project_invited_comp['und'] as $index => $item){
      if($item['target_id'] == $company->nid){
        unset($projectNode->field_m6id_project_invited_comp['und'][$index]);
        $removeFlag = 1;
        break;
      }
    }
  }
  if($removeFlag){
    $projectNode->field_m6id_project_invited_comp['und'] = array_values($projectNode->field_m6id_project_invited_comp['und']);
    node_save($projectNode);  
    db_delete('m6connect_onboarding_request')->condition('requester_project',$projectNode->nid)->condition('requester_company',$requeter_company)->condition('requstee_company',$company->nid)->condition('request_type','project_invite')->execute(); 
  }
  $url = 'onboarding/projectlist';
  if(!empty($cm)){
    $url = 'onboarding/projectlist/'.$cm;
  }
  drupal_goto(url($url));
}
//************************* End Submit Employees To Project ************************//

//************************* Start Project Invitation Table (Node View Block) ************************//

function m6id_project_invitation_content(){
  global $company;
  $elements = array();
  $projectNode = menu_get_object('node',1);
  //drup_msg($projectNode);
  if(is_object($projectNode) && $projectNode->type=='onboarding_project'){
  $cmpNid = _get_company_nid_by_group_content($projectNode);
  if(is_numeric($cmpNid) && $cmpNid == $company->nid){
    $header = array(
    array('data'=>'Company Id', 'class'=>array('col-md-2')),
    array('data'=>'First Name Last Name', 'class'=>array('col-md-2')),
    array('data'=>'Company/Email', 'class'=>array('col-md-4','text-center')),
    array('data'=>'Email', 'class'=>array('col-md-2')),
    array('data'=>'Action', 'class'=>array('col-md-2'))
    );
    $rows = m6id_project_invitation_rows_data($projectNode->nid);
    $elements['workflow_project_invited_data'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('workflow_project_invited_section')),
    );
    $elements['workflow_project_invited_data']['m6id_project_invited_content'] = array(
    '#markup' => theme('table',array('header'=>$header,'rows'=>$rows,'empty'=>'No Invitation','attributes'=> array('class'=> array('onboarding-invited-project-table','table','table-hover','m6connect-custom-table','m6connect-table-border')))),
    '#prefix' => '<div class="m6id_project_invited_content_data">',
    '#suffix' => '</div>'
    );
  }
  }
  return $elements;
}

function m6id_project_invitation_rows_data($project_nid){
  $rows = array();
  $projectCompanyquery = db_select('node','n');
  $projectCompanyquery->join('field_data_field_m6id_project_invited_comp','mpic','mpic.entity_id=n.nid');
  $projectCompanyquery->join('node','cnode','mpic.field_m6id_project_invited_comp_target_id=cnode.nid');
  $projectCompanyquery->addField('mpic','field_m6id_project_invited_comp_target_id','company_nid');
  $projectCompanyquery->addField('cnode','title', 'company_title');
  $projectCompanyquery->addField('n','nid', 'project_nid');
  $projectCompanyquery->condition('n.nid',$project_nid,'=');
  $projectCompanyquery->condition('n.type','onboarding_project','=');
  $projectCompanyList = $projectCompanyquery->execute()->fetchAll();
  if($projectCompanyList && !empty($projectCompanyList)){
    
  //print "<pre>"; print_r($projectCompanyList); die;
  foreach($projectCompanyList as $index => $dataObj){
    $Companynode = node_load($dataObj->company_nid);
    $Companyuid = $Companynode->uid;
    $companyusersdetail = _get_user_mail_realname_by_uid($Companyuid);
      $companyusersmail = $companyusersdetail['mail'];
    $companyusersfullname = $companyusersdetail['realname'];
    $rows[] = array(
      'data' => array(
        array('data'=>$dataObj->company_nid, 'class'=>array()),
      array('data'=>$companyusersfullname, 'class'=>array('text-center')),
      array('data'=>$dataObj->company_title, 'class'=>array('text-center')),
      array('data'=>$companyusersmail, 'class'=>array('text-center')),
      array('data'=>m6id_project_invite_action_btn($dataObj), 'class'=>array())
    ),
    'class' => array('custom-odd','project-invitation-no-'.$dataObj->company_nid),
    );  
  }
  }
  //Email
  $projectCompanyquery = db_select('node','n');
  $projectCompanyquery->join('field_data_field_m6id_project_invited_email','mpic','mpic.entity_id=n.nid');
  $projectCompanyquery->addField('n','nid', 'project_nid');
  $projectCompanyquery->addField('mpic','field_m6id_project_invited_email_value','company_email');
  $projectCompanyquery->condition('n.nid',$project_nid,'=');
  $projectCompanyquery->condition('n.type','onboarding_project','=');
  $projectCompanyList = $projectCompanyquery->execute()->fetchAll();
  if($projectCompanyList && !empty($projectCompanyList)){
  foreach($projectCompanyList as $index => $dataObj){
    $dataObj->uniqueID = uniqid();
    $rows[] = array(
      'data' => array(
        array('data'=>'', 'class'=>array()),
      array('data'=>$dataObj->company_email, 'class'=>array('text-center')),
      array('data'=>'&nbsp;', 'class'=>array('text-center')),
      array('data'=>'&nbsp;', 'class'=>array('text-center')),
      array('data'=>m6id_project_invite_action_btn($dataObj), 'class'=>array())
    ),
    'class' => array('custom-odd','project-invitation-no-'.$dataObj->uniqueID),
    );  
  }
  }
  return $rows; 
}

function m6id_project_invite_action_btn($dataObj){
  global $company;
  if(isset($dataObj->company_nid)){
  $output =  '<div class="btn-group">
      <div class="dropdown">
        <button id="request_action_'.$dataObj->company_nid.'" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Actions</button>
        <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="request_action_'.$dataObj->company_nid.'">
        <li>'.l('Delete','m6id/project-invite/revoke/company/'.$dataObj->project_nid.'/nojs/'.$dataObj->company_nid, array('attributes'=> array('class'=>array('use-ajax')))).'</li>
        <li>'.l('Send Reminder','m6id/project-resendinvite/revoke/company/'.$dataObj->project_nid.'/nojs/'.$dataObj->company_nid, array('attributes'=> array('class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style')))).'</li>
        </ul>
      </div>
      </div>';
  }else{
  $output =  '<div class="btn-group">
      <div class="dropdown">
        <button id="request_action_'.$dataObj->uniqueID.'" class="btn btn-success" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Actions</button>
        <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="request_action_'.$dataObj->uniqueID.'">
        <li>'.l('Delete','m6id/project-invite/revoke/email/'.$dataObj->project_nid.'/nojs/'.$company->nid, array('attributes'=> array('class'=>array('use-ajax')),'query'=> array('remove_email'=>$dataObj->company_email,'email_unique'=>$dataObj->uniqueID))).'</li>
        <li>'.l('Send Reminder','m6id/project-resendinvite/revoke/email/'.$dataObj->project_nid.'/nojs/'.$company->nid, array('attributes'=> array('class'=>array('ctools-use-modal','ctools-modal-assign-dashboard-popup-style')),'query'=> array('resend_email'=>$dataObj->company_email,'email_unique'=>$dataObj->uniqueID))).'</li>
        </ul>
      </div>
      </div>';  
  }
  return $output;
}

function onboarding_revoke_project_invitation_callback($type,$projectNode,$ajax= NULL,$removeCompany){
  $commands = array();
  if($projectNode->type=='onboarding_project') {
  if($type=='company'){
    if((is_object($removeCompany) && $removeCompany->type=='organization')){ 
    if(isset($projectNode->field_m6id_project_invited_comp['und']) && !empty($projectNode->field_m6id_project_invited_comp['und'])){
      foreach($projectNode->field_m6id_project_invited_comp['und'] as $delta => $item){
      if($item['target_id'] == $removeCompany->nid){
        unset($projectNode->field_m6id_project_invited_comp['und'][$delta]);
        $projectNode->field_m6id_project_invited_comp['und'] = array_values($projectNode->field_m6id_project_invited_comp['und']);
        node_save($projectNode);
        $commands[] = ajax_command_remove('.onboarding-invited-project-table tr.project-invitation-no-'.$removeCompany->nid);
        break;
      }
      }
    }
    }
  }else if($type =='email' && isset($_REQUEST['remove_email']) && !empty($_REQUEST['remove_email'])){
    if(isset($projectNode->field_m6id_project_invited_email['und']) && !empty($projectNode->field_m6id_project_invited_email['und'])){
    foreach($projectNode->field_m6id_project_invited_email['und'] as $delta => $item){
      if($item['value'] == $_REQUEST['remove_email']){
      unset($projectNode->field_m6id_project_invited_email['und'][$delta]);
      $projectNode->field_m6id_project_invited_email['und'] = array_values($projectNode->field_m6id_project_invited_email['und']);
      node_save($projectNode);
      if(isset($_REQUEST['email_unique']) && !empty($_REQUEST['email_unique'])){
        $commands[] = ajax_command_remove('.onboarding-invited-project-table tr.project-invitation-no-'.$_REQUEST['email_unique']);  
      }
      }
    }
    }
  }
  }
  if($ajax){
  print ajax_render($commands);
  drupal_exit();
  }
  drupal_goto(url('node/'.$projectNode->nid));
}


//************************* End Project Invitation Table ************************//

//************************* Start Project Worker ************************//
function onboarding_add_project_worker_callback($ajax=NULL){
  if($ajax){
  $form_state = array(
    'title' => '<div class="text-center" style="font-size:15px;padding-top:10px;">Add Worker To Project</div>',
    'ajax' => TRUE,
  );
  $output = ctools_modal_form_wrapper('onboarding_add_project_worker_form', $form_state); 
  if (!empty($form_state['ajax_commands'])) {
    $output = $form_state['ajax_commands'];
  }
  print ajax_render($output);
  drupal_exit(); 
  }
  return drupal_get_form('onboarding_add_project_worker_form'); 
}

function onboarding_add_project_worker_form($form,&$form_state){
  global $company;
  $form['#attributes'] = array('class'=> array('onboarding_add_project_worker_form'));
  if($form_state['ajax'] && !in_array('m6id-worker-popup',$form['#attributes']['class'])){
  $form['#attributes']['class'][] = 'm6id-worker-popup'; 
  }
  $form['#attached']['js'] = array(
  drupal_get_path('module', 'm6connect_onboarding') . '/js/custom_international_phone.js',
  );
  $cm = '';
  if(!empty(arg(2))) {
    $cm = arg(2);
  }
  $international_phone_libraries_path = libraries_get_path('intl-tel-input');
  if(empty($form_state['comapny_listing'])){
    $form_state['comapny_listing'] = _get_all_organigation_mapping();
    if(isset($form_state['comapny_listing'][$company->nid])){
      unset($form_state['comapny_listing'][$company->nid]);
    }
    $_SESSION['comapny_listing'] = $form_state['comapny_listing'];
  }
  if(empty($form_state['add_project_worker_form_initialize'])){
    $form_state['add_project_worker_form_initialize']=1;
    $form_state['m6id-project-list']= array();
    if(empty($form_state['m6id-project-list'])){
      $form_state['m6id-project-list'] = array();
      $query = db_select('node','n');
      $query->join('og_membership','og', 'og.etid=n.nid');
      if(!empty($cm)){
        $query->leftjoin('field_data_field_cm_type','fdfct', 'fdfct.entity_id=n.nid');
      }
      $query->fields('n', array('nid','title'));
      $query->condition('og.entity_type','node');
      $query->condition('og.group_type','node');
      $query->condition('og.gid',$company->nid);
      $query->condition('n.type','onboarding_project');
      if(!empty($cm)){
        $query->condition('fdfct.field_cm_type_value', $cm, '=');
      }
      $form_state['m6id-project-list'] = $query->execute()->fetchAllKeyed(0,1);
    }
  }  
  if(isset($form_state['triggering_element']) && $form_state['triggering_element']['#type'] = 'textfield' && $form_state['triggering_element']['#name'] == 'invited-worker[company]'){
    $companyName = $form_state['triggering_element']['#value'];
    $form_state['worker_user_storage'] = array();
    if($cmpNid = array_search($companyName,$form_state['comapny_listing'])){
      $cmpUserDetail = _get_user_details_by_og_group_nid($cmpNid); 
      foreach($cmpUserDetail as $delta => $data){
        $identifer = uniqid();
        $form_state['worker_user_storage'][$identifer] = (array)$data;    
      }
    } 
  }
  
  if(empty($form_state['worker_user_storage'])){
    $form_state['worker_user_storage'] = array();
    $identifer = uniqid();
    $form_state['worker_user_storage'][$identifer] = array();  
  }
  
  $form['m6id-project-section']= array(
    '#type' => 'container',
  '#attributes'=> array('class'=> array('row')),
  '#prefix' => '<div class="m6id-project-container clearfix">',
  '#suffix' => '</div>',
  '#required' => TRUE,
  );
  
  $form['m6id-project-section']['m6id-project'] = array(
    '#type' => 'select',
  '#title' => 'Project',
  '#options' => $form_state['m6id-project-list'],
  '#empty_option' => 'Select Project',
  '#attributes' => array('class'=> array('worker-m6id-project')),
  '#parents' => array('invited-worker','project'),
  '#prefix' => '<div class="worker-m6id-project-section col-md-9 col-sm-9 col-xs-9">',
  '#suffix' => '</div>',
  );
  
  $form['m6id-project-section']['new-project-link'] = array(
    '#markup' => '<div class="new-project-link">'.l('<i class="glyphicon glyphicon-plus"></i> New Project','javascript:void(0);', array('external'=>'true','html'=> TRUE,'attributes'=>array('style'=>'color:#265A7F;font-size: 13px;font-family:futurabold;'))).'</div>',
  '#prefix' => '<div class="new-project-link-section col-md-3 col-sm-3 col-xs-3"><div>&nbsp;</div><div>&nbsp;</div>',
  '#suffix' => '</div>',
  );
  
  $form['m6id-company-section']= array(
    '#type' => 'container',
  '#attributes'=> array('class'=> array('row')),
  '#prefix' => '<div class="m6id-company-container clearfix margin-bottom-10">',
  '#suffix' => '</div>',
  );
  
  $form['m6id-company-section']['m6id-company'] =  array(
  '#type' => 'textfield',
  '#title' => 'Company',
  '#attributes' => array('class'=> array('worker-m6id-company'),'placeholder'=>'Type Company Name'),
  '#parents' => array('invited-worker','company'),
  '#autocomplete_path' => 'routing-company/autocomplete',
  '#prefix' => '<div class="worker-m6id-company-section col-md-9 col-sm-9 col-xs-9">',
  '#suffix' => '</div>',
  '#ajax' => array(
    'callback' => 'update_new_worker_employee_callback',
    'wrapper' => 'worker-user-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
   ),
  );
  
  $form['m6id-company-section']['new-company-link'] = array(
    '#markup' => '<div class="new-company-link">'.l('<i class="glyphicon glyphicon-plus"></i> New Company','javascript:void(0);', array('external'=>'true','html'=> TRUE,'attributes'=>array('style'=>'color:#265A7F;font-size: 13px;font-family:futurabold;'))).'</div>',
  '#prefix' => '<div class="new-company-link-section col-md-3 col-sm-3 col-xs-3"><div>&nbsp;</div><div>&nbsp;</div>',
  '#suffix' => '</div>',
  );
  
  $form['user-container'] = array(
    '#type' => 'container',
  '#attributes' => array('class'=> array('worker-user-container')),
  '#prefix' => '<div id="worker-user-container-section" class="clearfix">',
  '#suffix' => '</div>',
  '#process' => array('worker_user_container_process'),
  '#theme' => 'm6id_worker_to_project_template',
  );
  
  $form['upload_container']= array(
    '#type'=>'container',
  '#attributes' => array('class'=>array('highslide-maincontent')),
  '#prefix' => '<div id="upload-excel-container-section" style="display:none;">',
  '#suffix' => '</div>',
  );
  $form['upload_container']['excel_file_fid'] = array(
    '#title' => t('Upload Excel File'),
    '#type' => 'managed_file',
    '#description' => '<a href="/sites/all/modules/custom/m6connect_alert/alert_sample/sample.xlsx">Upload Format</a>',
    '#upload_location' => 'public://tmp/',
  '#upload_validators' => array(
      'file_validate_extensions' => array('xls xlsx'),
    ),
  );
  
  $form['action-container'] = array(
    '#type' => 'actions',
  '#attributes'=> array('class'=>array('m6id-invite-action-container')),
  '#process' => array('m6id_invite_worker_action_process'),
  );
  
  return $form;
}

function check_upload_after_build($elements , &$form_state){
  //$elements['upload_button']['#submit'][] = 'm6id_file_upload_submit';
  $elements['upload_button']['#ajax']['wrapper'] = 'worker-user-container-section';
  kpr($elements);
  return $elements; 
}

function m6id_invite_worker_action_process($elements , &$form_state){
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', url('onboarding/in-process'), array('html'=>TRUE,'attributes' => array('class' => array('m6id-popup-close'))));
  if(!empty($form_state['ajax'])){
  $closeButton = l('<input type="button" class="form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));  
  }
  $elements['add_new_row'] = array(
    '#type'=>'submit',
  '#value' => 'Add Individual',
  '#name' => 'add_new_row',
  '#attributes'=> array('class'=>array('m6id-worker-workflow-action'),'title'=>'Add New Invitee'),
  '#limit_validation_errors' => array(),
  '#submit'=> array('add_new_invite_worker_submit_handler'),
  '#ajax' => array(
    'callback' => 'add_new_worker_employee_callback',
    'wrapper' => 'worker-user-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
   ),
  );
  
  /*$bulkupload = l('<input type="button" class="form-submit" value="Bulk Upload" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("#upload-excel-container-section").toggle();'))); 
  
  $elements['bulk_upload_link']= array(
    '#markup' =>l('<input type="button" class="form-submit" value="Bulk Upload" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("#upload-excel-container-section").toggle();'))),
  );*/
  
  $elements['bulk_upload']= array(
    //'#markup' =>'<a href="#" onclick="return hs.htmlExpand(this)">Inline HTML</a>',
  //'#markup' => l('Bluk Upload','javascript:void(0);', array('external'=>TRUE,'attributes'=> array('onclick'=>'return hs.htmlExpand(this);','id'=>'bulk-upload-link'))),
  '#type' =>'submit',
  '#value' => 'Bulk Upload 2',
  '#name' => 'bulk_upload',
  '#submit'=> array('bulk_upload_worker_employee_submit_handler'),
  '#attributes' => array('class'=> array('m6id-invite-workflow-bulk-upload'),'style'=> 'display:none;'),
  '#limit_validation_errors'=> array(array('excel_file_fid')),
  '#ajax' => array(
    'callback' => 'bulk_upload_worker_employee_callback',
    //'wrapper' => 'worker-user-container-section',
    //'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
    //'event' => 'click',
   ),
  '#prefix' => l('<input type="button" class="form-submit" value="Bulk Upload" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('m6id-popup-close'), 'onclick' => 'jQuery("#upload-excel-container-section").toggle(); jQuery(".onboarding_add_project_worker_form").toggleClass(\'worker-bulkupload-open\');'))),
  );
  
  $elements['submit']= array(
    '#type' =>'submit',
  '#value' => 'Invite',
  '#name' => 'invite',
  '#attributes'=> array('class'=>array('m6id-invite-workflow-action'),'title'=>'Save Invitees'),
  '#suffix' => $closeButton,
  );

  return $elements;   
}

function bulk_upload_worker_employee_callback($form , &$form_state){
  $commands = array();
  $values = $form_state['values'];
  if($values['excel_file_fid']){
    $commands[] = ajax_command_invoke("#upload-excel-container-section", 'toggle',array());
  $commands[] = ajax_command_invoke(".onboarding_add_project_worker_form", 'toggleClass',array('worker-bulkupload-open'));
    $commands[] = ajax_command_replace("#worker-user-container-section", render($form['user-container']));
    $commands[] = array('command'=>'update_internation_phone_dial_code');
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function bulk_upload_worker_employee_submit_handler(&$form , &$form_state){
  global $base_url, $base_path;
  module_load_include('inc', 'phpexcel');
  $values = $form_state['values'];
  if(isset($values['excel_file_fid']) && $values['excel_file_fid'] && is_numeric($values['excel_file_fid'])){
  $excelFile = file_load($values['excel_file_fid']);
  $excelFilePath = str_replace($base_url.$base_path,'',file_create_url($excelFile->uri));
  $excelFileData = phpexcel_import($excelFilePath);
  if(isset($excelFileData[0],$excelFileData[0][0]) && !empty($excelFileData[0])){
    $countryCode = '+1';
    if(isset($excelFileData[0][0]['Select Country']) && !empty($excelFileData[0][0]['Select Country'])){
    $countryTemp = m6connect_alert_get_phone_code($excelFileData[0][0]['Select Country']); 
    if(!empty($countryTemp)){
      $countryCode = $countryTemp;  
    }
    }
    $form_state['worker_user_storage'] = array();
    foreach($excelFileData[0] as $index => $dataObj){
    $identifer = uniqid();
      $form_state['worker_user_storage'][$identifer] = array(
      'email' => $dataObj['Email Address'],
      'phone' => ($dataObj['Phone Number'])?$countryCode.$dataObj['Phone Number']:'',
      'fname' => $dataObj['First Name'],
      'lname' => $dataObj['Last Name'],
    );  
    }
  }
  $form_state['rebuild'] = TRUE;   
  } 
}

function worker_user_container_process($elements , &$form_state){
  $storage = $form_state['worker_user_storage'];
  $elements['#worker_user_storage'] = $storage;
  $international_phone_libraries_path = libraries_get_path('intl-tel-input');
  foreach($storage as $uniqueId => $defaultValue){
    $elements[$uniqueId]['is_selected'] = array(
    '#type' => 'checkbox',
    '#attributes' => array('class'=>array('inite-workflow-is-selected')),
    '#parents' => array('invited-worker','detail',$uniqueId,'is_selected'),
    '#return_value'=> $uniqueId,
  );
  $elements[$uniqueId]['email'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class'=>array('inite-workflow-email',),'placeholder'=>'Email Address'),
    '#parents' => array('invited-worker','detail',$uniqueId,'email'),
    '#ajax' => array(
      'callback' => 'm6id_worker_email_load_callback'
    ),
  );
  $elements[$uniqueId]['user_uid'] = array(
    '#type' => 'hidden',
    '#attributes' => array('class'=>array('inite-workflow-user-uid')),
    '#parents' => array('invited-worker','detail',$uniqueId,'user_uid'),
    '#default_value' => 0,
  );
  $elements[$uniqueId]['phone'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class'=>array('inite-workflow-phone','international_phone-number'),'placeholder'=>'Phone#'),
    '#parents' => array('invited-worker','detail',$uniqueId,'phone'),
    '#attached' => array(
      'css'=> array(
        $international_phone_libraries_path . '/css/intlTelInput.css',
      ),
      'js'=>array(
        $international_phone_libraries_path . '/js/intlTelInput.min.js',
      ),
    ),
  ); 
  $elements[$uniqueId]['phone_code'] = array(
    '#type' => 'hidden',
    '#attributes' => array('class'=>array('international-phone-number-country-code')),
    '#parents' => array('invited-worker','detail',$uniqueId,'phone_code'),
  ); 
  $elements[$uniqueId]['fname'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class'=>array('inite-workflow-fname',),'placeholder'=>'First Name'),
    '#parents' => array('invited-worker','detail',$uniqueId,'fname'),
  );
  $elements[$uniqueId]['lname'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class'=>array('inite-workflow-lname',),'placeholder'=>'Last Name'),
    '#parents' => array('invited-worker','detail',$uniqueId,'lname'),
  );
  $elements[$uniqueId]['remove'] = array(
    '#type' => 'submit',
    '#value' => decode_entities('&#xf014;'),
    '#name' => $uniqueId,
    '#attributes'=> array('style'=> array('font-family:FontAwesome;'),'class'=>array('workflow-remove-submit')),
    '#parents' => array('invited-employees-remove',$uniqueId,'remove'),
    '#limit_validation_errors' => array(),
    '#submit'=> array('m6id_worker_remove_invited_submit_handler'),
    '#ajax' => array(
    'callback' => 'm6id_worker_remove_invited_callback',
    'wrapper' => 'worker-user-container-section',
    'method' => 'replace',
    'effect' => 'fade',
    'progress' => array('type'=> 'throbber', 'message'=> NULL),
     ),
  );
  if(!empty($defaultValue) && isset($defaultValue['email'])){
    $elements[$uniqueId]['email']['#default_value'] = $defaultValue['email'];
    $elements[$uniqueId]['phone']['#default_value'] = $defaultValue['phone'];
    $elements[$uniqueId]['fname']['#default_value'] = $defaultValue['fname'];
    $elements[$uniqueId]['lname']['#default_value'] = $defaultValue['lname'];
    }
  }
  return $elements;   
}

function m6id_worker_email_load_callback($form,&$form_state){
  $commands = array();
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][2]; 
  $company_mail = trim($triggering_element['#value']);
  $default_values = array('phone'=>'','fname'=>'','lanme'=>'');
  if(!empty($company_mail)){
  $userDetails = _get_user_details_by_og_email($company_mail);
  if($userDetails && is_object($userDetails)){
    $default_values = array(
      'phone'=>$userDetails->field_phone_value,
      'fname'=>$userDetails->field_first_name_value,
      'lname'=>$userDetails->field_last_name_value,
    'user_uid' => $userDetails->uid
    );
    $commands[] = ajax_command_invoke('input[name="invited-worker[detail]['.$identifier.'][user_uid]"]','val',array($default_values['user_uid']));
    $commands[] = ajax_command_invoke('input[name="invited-worker[detail]['.$identifier.'][fname]"]','val',array($default_values['fname']));
      $commands[] = ajax_command_invoke('input[name="invited-worker[detail]['.$identifier.'][lname]"]','val',array($default_values['lname']));
      $commands[] = ajax_command_invoke('input[name="invited-worker[detail]['.$identifier.'][phone]"]','intlTelInput',array('setNumber',$default_values['phone'])); 
    $commands[] = array('command'=>'update_internation_phone_dial_code');
  }
  }
  return array('#type' => 'ajax','#commands' => $commands);
}

function m6id_worker_remove_invited_callback($form,&$form_state){
  return $form['user-container'];
}

function m6id_worker_remove_invited_submit_handler(&$form,&$form_state){
  $triggering_element = $form_state['triggering_element'];
  $identifier = $triggering_element['#parents'][1]; 
  if(isset($form_state['worker_user_storage'][$identifier])){
    unset($form_state['worker_user_storage'][$identifier]); 
  }
  $form_state['rebuild'] = TRUE;  
}

function add_new_worker_employee_callback($form,&$form_state){
  return $form['user-container'];
}

function update_new_worker_employee_callback($form,&$form_state){
  $commands = array();
  $commands[] = ajax_command_replace("#worker-user-container-section", render($form['user-container']));
  $commands[] = array('command'=>'update_internation_phone_dial_code');
  return array('#type' => 'ajax','#commands' => $commands);
}



function add_new_invite_worker_submit_handler(&$form,&$form_state){
  $tempIdentifer = uniqid();
  $newElement = array($tempIdentifer=> array());
  $form_state['worker_user_storage'] = array_merge($newElement,$form_state['worker_user_storage']);
  //$form_state['worker_user_storage'][$tempIdentifer] = array();   
  $form_state['rebuild'] = TRUE;
}

function theme_m6id_worker_to_project_template($variables){
  $output = '';
  $elements = $variables['element'];
  $inviteStorage = $elements['#worker_user_storage'];
  $selectAll = '<input type="checkbox" name="select-all-worker-checkbox" class="form-checkbox select-all-worker-checkbox">';
  $header = array(
      array('data'=>$selectAll, 'class'=> array('text-center')),
    array('data'=>'Email', 'class'=> array('text-center')),
    array('data'=>'Mobile Phone Number', 'class'=> array('text-center')),
    array('data'=>'First Name', 'class'=> array('text-center')),
    array('data'=>'Last Name', 'class'=> array('text-center')),
    array('data'=>'', 'class'=> array()),
  ); 
  $rows = array();
  foreach($inviteStorage as $uniqueId => $defaultValues){
  $phoneRow = '<div class="international-phone-number-fields-group">';
  $phoneRow .= drupal_render($elements[$uniqueId]['phone']);
  $phoneRow .= drupal_render($elements[$uniqueId]['phone_code']);
  $phoneRow .= '</div>';
  $rows[] = array(
    'data' => array(
      array('data'=>drupal_render($elements[$uniqueId]['is_selected']),'style'=>'vertical-align:middle;','class'=> array('worker-select-td')),
      array('data'=>drupal_render($elements[$uniqueId]['email']),'class'=> array('worker-email-td')),
    array('data'=>$phoneRow,'class'=> array('worker-phone-td')),
    array('data'=>drupal_render($elements[$uniqueId]['fname']),'class'=> array('worker-fanme-td')),
    array('data'=>drupal_render($elements[$uniqueId]['lname']),'class'=> array('worker-lname-td')),
    array('data'=>drupal_render($elements[$uniqueId]['remove']),'class'=> array('workflow-remove-td')),
    ),
    'class' => array('custom-odd'),
  );  
  }
  $output .= '<div class="m6id-worker-to-project-table-section margin-bottom-10">';
  $output .= theme('table', array('header' => $header, 'rows' => $rows,'attributes'=> array('class'=> array('m6id-worker-to-project-table','table','m6connect-custom-table','table-hover','m6connect-table-border')),'sticky'=> FALSE));
  $output .= '</div>';
  $output .= drupal_render_children($elements);
  return $output;
}

function onboarding_add_project_worker_form_validate(&$form,&$form_state){
  $elementErrorCount = array('email'=>0,'phone'=>0,'fname'=>0,'lname'=>0);
  if(empty($form_state['values']['invited-worker']['project'])){
  form_set_error('invited-worker][project','Please Select Project');  
  $elementErrorCount['phone']++;
  }
  foreach($form_state['values']['invited-worker']['detail'] as $uniqueId => $dataValues){
  $dataValues = array_map('trim',$dataValues);
  if(!empty($dataValues['is_selected'])){
    if(!valid_email_address($dataValues['email'])){
    $message = ($elementErrorCount['email']==0)?'Enter valid Email.':'';
    form_set_error('invited-worker][detail]['.$uniqueId.'][email',$message);  
    $elementErrorCount['email']++;
    }
    if(empty($dataValues['phone']) || empty($dataValues['phone_code'])){
    $message = ($elementErrorCount['phone']==0)?'Enter valid Phone Number.':'';
    form_set_error('invited-worker][detail]['.$uniqueId.'][phone',$message);  
    $elementErrorCount['phone']++;
    }
  }
  }
}

function onboarding_add_project_worker_form_submit(&$form,&$form_state){ //drup_msg($form_state['values']);
  global $user, $company;
  $values = $form_state['values'];
  $project = is_numeric($values['invited-worker']['project'])?$values['invited-worker']['project']:NULL;
  $projectNodeTitle='';
  if(is_numeric($project)){
  $projectNodeTitle = _get_title_of_node($project);  
  }
  $requesteeCompany = NULL;
  $requesteeCompanyName= $values['invited-worker']['company'];
  if(!empty($requesteeCompanyName) && ($CompanyNid= array_search($requesteeCompanyName,$form_state['comapny_listing']))!==FALSE){
  $requesteeCompany = $CompanyNid;   
  }else if(empty(trim($requesteeCompanyName))){
  $requesteeCompanyName = NULL;  
  }
  $currentUserName = db_select('realname','r')->fields('r',array('realname'))->condition('r.uid',$user->uid)->execute()->fetchField();
  $currentUserName = ucwords($currentUserName);
  $currentCompanyName = ucwords($company->title);
  $signupLink = l('sign in',$base_url.$base_path,array('external'=>TRUE));
  $paramsTemp = array(
  'sender' => $user->mail,
  'language' => language_default(),
  'module' => 'm6connect_misc',
  'key' => 'm6id_mail___m6id_invite_worker_to_project_notify',
  'build' => TRUE,
  );
  
  $message = '<p>[M6ID:Invitee_Name],</p><p>Please [M6ID:Signup] and join [M6ID:InviterCompanyName]. This system will be used for onboarding with the respective primes that we commonly work for – it will save us time in safety training and jobsite orientations going forward.<br/>Once you have signed in, navigate to the personal profile and complete the M6ID information. We will share this information with the companies we work with - this streamlines the onboarding process for new projects and save time in training.</p><p>Sincerely,<br />[M6ID:InviterName]<br />[M6ID:InviterCompanyName]</p>';
  
  foreach($values['invited-worker']['detail'] as $delta => $dataValues){
    if(empty($dataValues['is_selected'])){
    continue; 
  }
  
  db_merge('m6connect_onboarding_project_worker')
  ->key(array(
    'worker_email' => $dataValues['email'],
    'requester_company' => $company->nid,
    'requester_project' => $project,
    'requestee_company_name' => $requesteeCompanyName, 
    'worker_uid' => is_numeric($dataValues['user_uid'])?$dataValues['user_uid']:0,
  ))
  ->fields(array(
    'requester_company' => $company->nid,
    'requester_user' => $user->uid,
      'requester_project' => $project,
      'requestee_company' => $dataValues[''],
      'requestee_company_name' => $requesteeCompanyName,
      'worker_email' => $dataValues['email'],
    'worker_uid' => is_numeric($dataValues['user_uid'])?$dataValues['user_uid']:0,
      'worker_fname' => $dataValues['fname'],
      'worker_lname' => $dataValues['lname'],
      'worker_phone' => $dataValues['phone'],
      'worker_dial_code' => $dataValues['phone_code'],
  ))
  ->execute();
  
  //Send SMS
  if(!empty($dataValues['phone']) && !empty($dataValues['phone_code'])){
    /*$phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile.  Click on your name under the accounts then you\'ll find the M6ID section there.';*/
    
    $phone_message = $currentUserName.' has requested that you signup on M6ID at m6connect.com. This will simplify your onboarding process at the companies you work for.  Please login and complete the M6ID section in your personal profile. Click on the pencil next to your name underneath the accounts section on the left menu and you\'ll find the M6ID section there.';
    
    $phoneCode = '+'.$dataValues['phone_code'];
    $phoneNumber = str_replace($phoneCode,'',$dataValues['phone']);
    m6connect_alert_twilio_send($phoneNumber, $phone_message, $phoneCode);
  }
  
  //Sent Mail To workers
  $subject = '[M6ID:InviterName] has requested you to Join M6ID [M6ID:ProjectNameExtra]';
  $params = $paramsTemp;
  $inviteeName = trim(ucfirst($dataValues['fname']).' '.ucfirst($dataValues['lname']));
  $replace = array(
    '[M6ID:Invitee_Name]' => empty($inviteeName)?$inviteeName:$dataValues['email'],
    '[M6ID:InviterName]' => $currentUserName,
    '[M6ID:InviterCompanyName]' => $currentCompanyName,
    '[M6ID:Signup]' => $signupLink,
    '[M6ID:ProjectName]'=>$projectNodeTitle,
    '[M6ID:ProjectNameExtra]'=> ($projectNodeTitle)?'for the '.$projectNodeTitle.' Project':'',
  );
  
  $params['subject'] = str_replace(array_keys($replace),array_values($replace),$subject);
  $params['body'] = str_replace(array_keys($replace),array_values($replace),$message);
  drupal_mail($params['module'], $params['key'], $dataValues['email'], $params['language'], $params);
  if (isset($dataValues) && $dataValues['user_uid'] && db_table_exists('m6connect_notification')) {         
    $m6connect_notification = array(
    'type' => 'm6id',
    'event' => 'worker_project_invite',
    'entity_id' => $project,
    'company_nid' => $requesteeCompany,
    'message' => NULL,
    'request_from' => $user->uid,
    'request_to' => $dataValues['user_uid'],
    'status' => 1,
    'timestamp' => time(),
    );
    entity_save('m6connect_notification', (object) $m6connect_notification);
  }

  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
  }else{
  $form_state['redirect'] = url('onboarding/in-process');  
  }
}
//************************* End Project Worker ************************//

function _get_user_details_by_og_group_nid($groupId) {
  $query = db_select ( 'og_membership', 'og' );
  $query->join('m6connect_og_membership_email', 'ogm' ,'ogm.entity_id=og.gid AND ogm.user_uid=og.etid');
  $query->join( 'realname', 'r', 'r.uid=og.etid' );
  $query->leftjoin ( 'field_data_field_phone', 'fph', 'fph.entity_id=og.etid AND fph.bundle=:userBundle', array (':userBundle' => 'user'));
  $query->leftjoin ( 'field_data_field_first_name', 'ffn', 'ffn.entity_id=og.etid AND ffn.bundle=:userBundle', array (':userBundle' => 'user'));
  $query->leftjoin ( 'field_data_field_last_name', 'fln', 'fln.entity_id=og.etid AND fln.bundle=:userBundle', array (':userBundle' => 'user'));
  $query->fields ( 'r', array ('realname') );
  $query->addField('fph','field_phone_value','phone');
  $query->addField('ffn','field_first_name_value','fname');
  $query->addField('fln','field_last_name_value','lname');
  $query->addField('ogm','company_email','email');
  $query->addField('og','etid','user_uid');
  $query->condition ( 'og.gid', $groupId );
  $query->condition ( 'og.entity_type', 'user' );
  $query->condition ( 'og.group_type', 'node' );
  $result = $query->execute()->fetchAll(); 
  return $result;
}

function games_callback(){
  if(isset($_REQUEST['telinput'])){
  $_SESSION['telinput'] =  $_REQUEST['telinput'];
  }
  
  $path = DRUPAL_ROOT . '/sites/all/libraries/libphonenumber';
  set_include_path(get_include_path() . PATH_SEPARATOR . $path);
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneNumber.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneNumberUtil.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/CountryCodeToRegionCodeMap.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/RegionCode.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneMetadata.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneNumberDesc.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/NumberFormat.php';
  
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneNumberType.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/PhoneNumberFormat.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/Matcher.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/CountryCodeSource.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/NumberParseException.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/ValidationResult.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/DefaultMetadataLoader.php';
  
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/MatcherAPIInterface.php';
  include_once DRUPAL_ROOT . '/sites/all/libraries/libphonenumber/MetadataLoaderInterface.php';
  
  
  
  
  
  $phoneUtil = \libphonenumber\PhoneNumberUtil::getInstance();
  pre($phoneUtil,1);
  $numberString = "+12123456789";
  try {
    $numberPrototype = $phoneUtil->parse($numberString, "US");
    echo "Input: " .          $numberString . "\n";
    echo "isValid: " .       ($phoneUtil->isValidNumber($numberPrototype) ? "true" : "false") . "\n";
    echo "E164: " .           $phoneUtil->format($numberPrototype, PhoneNumberFormat::E164) . "\n";
    echo "National: " .       $phoneUtil->format($numberPrototype, PhoneNumberFormat::NATIONAL) . "\n";
    echo "International: " .  $phoneUtil->format($numberPrototype, PhoneNumberFormat::INTERNATIONAL) . "\n";
} catch (NumberParseException $e) {
    // handle any errors
}
  
  
  
   
  die;
  return '<div align="center"><embed width="100%" height="512" base="http://external.kongregate-games.com/gamez/0022/3733/live/" src="http://external.kongregate-games.com/gamez/0022/3733/live/embeddable_223733.swf" type="application/x-shockwave-flash"></embed><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/angry.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/angry.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/superflashmariobros.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/superflashmariobros.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/egyptian-horse.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/egyptian-horse.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/kingdom-bow.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/kingdom-bow.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/zombie-racer.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/zombie-racer.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/hidden.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/hidden.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  <div align="center"><object width="100%" height="480"><param name="movie" value="http://www.embeddablegames.net/embedgames/poll.swf"><param name="quality" value="high"><embed src="http://www.embeddablegames.net/embedgames/poll.swf" quality="high" width="640" height="400" type="application/x-shockwave-flash" pluginspage= "http://www.macromedia.com/go/getflashplayer"></embed></object><br/></div>
  
  ';  
}

function m6id_roster_m6id_print(){
  global $base_url, $base_path;
  $printData = '';
  $output ='';
  $printType='';
  $modulePath = drupal_get_path('module', 'm6connect_onboarding') . '/print_popup';
  $script = '';
  $css = array(
  '<link rel="stylesheet" type="text/css" href="/sites/all/themes/m6connect/css/fonts.css"/>',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/screen.css" media="screen" />',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/print.css" media="print" />'
  );
  $meta = array(
    '<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />',
    '<meta http-equiv="Pragma" content="no-cache" />',
    '<meta http-equiv="Expires" content="0" />',
  );
  if(isset($_REQUEST['print_selected']) && !empty($_REQUEST['print_selected'])){
  $selected = explode(',',$_REQUEST['print_selected']);
  $printed = 0;
  $printType = (isset($_REQUEST['print_type']) && $_REQUEST['print_type'])?$_REQUEST['print_type']:'plain_paper';
  foreach($selected as $delta => $requestID){
    if(is_numeric($requestID)){
    $printData .= user_m6id_print_content($requestID); 
    $printed++;
    if($printType=='avery_5361'){
      if($printed%3==0){
        $printData .='<div class="page-break"></div>';  
      } 
    }else{
      if($printed%6==0){
        $printData .='<div class="page-break"></div>';  
      }
    }
    }
  }
  }
  $bodyClass = ($printType=='avery_5361')?'avery_5361':'plain_paper';
  $output = '<html><head>'.implode($meta).implode($css).$script.'</head><body class="'.$bodyClass.'" onload="window.print();">';
  $output .= $printData;
  $output .= '</body></html>';
  print $output;
  drupal_exit(0);
}


function user_m6id_print_callback($requestId,$ajax=NULL){
  $output = array();
  $m6idPopupContent = user_m6id_print_content($requestId,$ajax);
  if (!$ajax) {
    return $m6idPopupContent;
  }
  ctools_include('modal');
  ctools_include('ajax');
  $output[] = ctools_modal_command_display('', $m6idPopupContent);
  print ajax_render($output);
  drupal_exit();
}


function roster_m6id_print_popup($requestId){
  global $base_url, $base_path;
  $printData = '';
  $output ='';
  $modulePath = drupal_get_path('module', 'm6connect_onboarding') . '/print_popup';
  $script = '';
  $css = array(
  '<link rel="stylesheet" type="text/css" href="/sites/all/themes/m6connect/css/fonts.css"/>',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/screen.css" media="screen" />',
  '<link rel="stylesheet" type="text/css" href="/'.$modulePath.'/print.css" media="print" />'
  );
  $meta = array(
    '<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />',
    '<meta http-equiv="Pragma" content="no-cache" />',
    '<meta http-equiv="Expires" content="0" />',
  );
  $printData .= user_m6id_print_content($requestId); 
  $output = '<html><head>'.implode('',$meta).implode('',$css).$script.'</head><body onload="window.print();">';
  $output .= $printData;
  $output .= '</body></html>';
  print $output;
  drupal_exit(0);
}


function user_m6id_print_content($requestId,$ajax=NULL){
  global $base_url, $base_path;
  $output = '';
  $query = db_select('m6connect_onboarding_request','mor');
  $query->join('field_data_field_m6id','m6id','m6id.entity_id=mor.requstee_user AND m6id.bundle=:M6IDBundle', array(':M6IDBundle'=> 'user'));
  $query->join('realname','rname','rname.uid=mor.requstee_user');
  $query->join('node','rnode','rnode.nid=mor.requester_company');
  $query->join('node','snode','snode.nid=mor.requstee_company');
  $query->join('node','pnode','pnode.nid=mor.requester_project');
  $query->leftjoin('m6connect_onboarding_employee_types','oet','oet.id=mor.employee_type');
  $query->leftjoin('field_data_field_user_profile_photo','pf','pf.entity_id=mor.requstee_user AND pf.bundle=:PFBundle', array(':PFBundle'=> 'user'));
  $query->leftjoin('field_data_field_logo','cl','cl.entity_id=mor.requester_company AND cl.entity_type=:CLEntityType',array(':CLEntityType'=>'node'));
  $query->leftjoin('file_managed','pfile','pfile.fid=pf.field_user_profile_photo_fid');
  $query->leftjoin('file_managed','clfile','clfile.fid= cl.field_logo_fid');
  $query->leftjoin('field_data_field_job_titles','job','job.entity_id=mor.requstee_user AND job.bundle=:JobBundle', array(':JobBundle'=> 'user'));
  $query->leftjoin('taxonomy_term_data','jterm','jterm.tid=job.field_job_titles_target_id');
  $query->fields('mor');
  $query->addField('rname','realname','user_name');
  $query->addField('m6id','field_m6id_value','user_m6id');
  $query->addField('rnode','title','requester_company_title');
  $query->addField('snode','title','requestee_company_title');
  $query->addField('pnode','title','requester_project_title');
  $query->addField('jterm','name','user_job_title');
  $query->addField('pfile','uri','user_uri');
  $query->addField('clfile','uri','company_uri');
  $query->addField('oet','employee_type','employee_type_name');
  
  $query->condition('mor.id',$requestId);
  $dataObj = $query->execute()->fetchObject();
  if($dataObj && is_object($dataObj)){
    $statusClasses = array(0=>'bg-warning',1=>'bg-success',3=>'bg-warning',2=>'bg-danger');
  $statusTexts = array(0=>'Pending',1=>'Approved',2=>'Rejected',3=>'Pending');
  $employeeType = !empty($dataObj->employee_type_name)?$dataObj->employee_type_name:'EMPLOYEE';
  $emptyJobTitle = empty($dataObj->user_job_title)?'&nbsp;':'';
    $user_picture = (!empty($dataObj->user_uri))?theme_image_style(array('style_name'=>'custom_thumbnail','path'=>$dataObj->user_uri)):theme('image', array('path' => 'sites/default/files/images_13_0.png','attributes'=> array('style'=>'width:100px;height:100px;')));
  $company_logo = (!empty($dataObj->company_uri))?theme_image_style(array('style_name'=>'pic_50x50','path' =>$dataObj->company_uri)):'<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="width:50px; height=50px;" />';
  //<div class="user-m6iddetail user-m6id-project">'.ucwords($dataObj->requester_project_title).'</div>
  //$printIcon = l('<i class="fa fa-print" aria-hidden="true"></i>','javascript:void(0);',array('external'=> TRUE,'html'=>TRUE,'attributes' => array('class'=>array('m6id-popup-print-link'),'data-url'=>$base_url.$base_path.'/roster-m6id-popup-print/'.$requestId)));
  $printIcon = l('<i class="fa fa-print" aria-hidden="true"></i>','javascript:void(0);',array('external'=> TRUE,'html'=>TRUE,'attributes' => array('class'=>array('m6id-popup-print-link','m6id-popup-roster-print'),'data-roster'=>$requestId)));
    $output ='
    <div class="m6id-profile-detail-data">
    <div class="dashboard-block-darkgray">
      <div class="dashboard-block-drag text-center clearfix margin-bottom-10"><span>&nbsp;</span></div>
      <div class="dashboard-block-heading text-center clearfix">
        <div class="m6certified" style="font-size:16px;">
          <img src="/sites/all/themes/m6connect/images/icon-test-m6.png" style="width: 20px;vertical-align: sub;"><span class="m6id-number">ID: '.$dataObj->user_m6id.'</span></div>
      </div>
      <div class="dashboard-block-content">
        <span class="m6id-popup-print" style="display:none;">'.$printIcon.'</i></span>
        <div class="text-center m6id-info-picture">'.$user_picture.'</div>
        <div class="text-center">
        <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($dataObj->user_name).'</strong></div>
        <div class="user-m6iddetail user-m6id-degi">'.$dataObj->user_job_title.'</div>
        <div class="user-m6iddetail user-m6id-cname">'.ucwords($dataObj->requestee_company_title).'</div>
        <div class="user-m6iddetail user-m6id-degi">'.$emptyJobTitle.'</div>
        </div>
      </div>
      <div class="dashboard-block-heading dashboard-block-content clearfix text-center text-white '.$statusClasses[$dataObj->requster_status].'">
        <div class="user-m6id-status"><strong>'.$statusTexts[$dataObj->requster_status].'</strong></div>
      </div>
      </div>
      <div class="clearfix m6id-company-info-section">
        <div class="m6id-company-title-logo-section">
        <span class="m6id-company-info-logo">'.$company_logo.'</span>
        <span class="m6id-company-info-title">'.ucwords($dataObj->requester_company_title).'</span>
      </div>
      </div>
      <div class="dashboard-block-heading dashboard-block-emp-type clearfix text-center text-white bg-primary">
            <div class="user-m6id-employee-type">'.$employeeType.'</div>
          </div>
    </div>
    </div>';
  }
  return $output;
}

function onboarding_employee_setting_form($form,&$form_state){
  global $user, $company;
  $cmcr = '';
  if(arg(0) == 'onboarding' && !empty(arg(2))){
    $cmcr = arg(2);
  }
  if(arg(0) == 'program' && !empty(arg(1))){
    $cmcr = arg(1);
  }
  //if(empty($form_state['onboarding_employee_setting_initialize'])){
  //$form_state['onboarding_employee_setting_initialize'] =1;
  $onbordingSetting = db_select('m6connect_onboarding_employee_types','et');
  $onbordingSetting->fields('et');
  $onbordingSetting->condition('company_nid',$company->nid);
  if(!empty($cmcr)){
    $db_or = db_or();
    $db_or->condition('default_status', 1, '=');
    $db_or->condition('cm_type', $cmcr, '=');
    $onbordingSetting->condition($db_or);
  }  
  $onbordingSetting->orderBy('default_status', 'DESC');
  $onbordingSetting->orderBy('id', 'DESC');
  $onbordingSettingRes = $onbordingSetting->execute()->fetchAll();
  $form_state['existing_employee_types'] = $onbordingSettingRes;
  //}  
  
  $form['#attributes']['class'][] = 'onboarding_employee_setting_form';
  $form['company-nid'] = array(
    '#type' => 'value',
    '#value' => $company->nid,
  );
  $form['cm_type'] = array(
    '#type' => 'value',
    '#value' => $cmcr,
  );
  $form['main-container'] = array(
    '#type' => 'container',
    '#attributes' => array('class'=>array('col-md-6','col-sm-12','col-xs-12')),
    '#prefix' => '<div class="clearfix">',
    '#suffix' => '<div class="col-md-6 col-sm-12 col-xs-12"></div></div>'
  );
  
  $form['main-container']['error-message']= array(
    '#markup' => '<div class="form-message-error"></div>',
    //'#weight' => 0,
  );
  
  $form['main-container']['employee_section'] = array(
    '#type' => 'continer',
    '#prefix' => '<div id="onboarding-emplyee-type-section margin-bottom-10">',
    '#suffix' => '</div>',
    //'#weight' => 1,
  );
  
  $form['main-container']['employee_section']['employee_type'] = array(
    '#type'=> 'textarea',
    '#title' => 'Employee Type',
    '#attributes' => array('class'=> array('employee-type-textbox')),
    '#row' => 5,
    '#resizable' => FALSE,
    '#required' =>TRUE,
  );
  
  $form['main-container']['employee_action'] = array(
    '#type' => 'continer',
    '#attributes' => array('class'=> array('margin-bottom-10')),
    //'#weight' => 2,
  );
  
  $form['main-container']['employee_action']['submit']= array(
    '#type' => 'submit',
    '#value' => 'Add New Employee Type',
    '#executes_submit_callback' => TRUE,
    '#submit' => array('onboarging_add_employee_type_submit_handler'),
    '#ajax' => array(
      'callback' => 'onboarging_add_employee_type_callback',
    )
  );
  
  $form['main-container']['employee_types_data'] = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('employee-types-data-inner')),
    '#prefix' => '<div id="onboarding-emplyee-type-data-section margin-bottom-10">',
    '#suffix' => '</div>',
  );
  
  $header = array(
    array('data'=> 'Employee Type','class'=> array('text-center')),
    array('data'=> 'Action','class'=> array('text-center')),  
  );
  $rows =  array();
 
  foreach($form_state['existing_employee_types'] as $index => $employeeTypedetail){
    $employeeTypedelete = '';
    if($employeeTypedetail->default_status==0){ 
      $employeeTypedelete =  l('<i class="fa fa-trash-o employee-type-delete-trash" style="font-size:22px;"></i>','delete-employee-type/'.$employeeTypedetail->id.'/nojs', array('html'=> TRUE,'attributes'=> array('class'=> array('use-ajax'))));
    }
    $rows[] = array(
      'data' => array(
        array('data'=> $employeeTypedetail->employee_type,'class'=> array('text-left')),
        array('data'=>$employeeTypedelete ,'class'=> array('text-center')),
      ),
      'class' => array('employee-type-'.$employeeTypedetail->id),
    );  
  }
  $form['main-container']['employee_types_table'] = array(
    '#markup' => theme('table', array('header'=> $header,'rows'=>$rows,'empty'=>'No Employee Type Created yet','sticky'=>FALSE,'attributes'=> array('class'=> array('employee-types-table','m6connect-custom-table','table','table-hover','table-bordered','text-center')))),
    '#prefix' => '<div class="onboarding-emplyee-type-table-data margin-bottom-10">',
    '#suffix' => '</div>',
  );
  
  return $form; 
}

function onboarging_add_employee_type_submit_handler(&$form,&$form_state){
  $form_state['rebuild'] = TRUE;
}

function onboarging_add_employee_type_callback($form,$form_state){
  global $company;
  $commands = array();
  $values = $form_state['values'];
  $cm = '';
  if(!empty($values['cm_type'])){
    $cm = $values['cm_type'];
  }
  $commands[] = ajax_command_html('form.onboarding_employee_setting_form .form-message-error', '');
  $errors = form_get_errors();
  if(!empty($errors)){
    $commands[] = ajax_command_html('form.onboarding_employee_setting_form .form-message-error', theme('status_messages'));
    return array('#type' => 'ajax','#commands' => $commands);  
  }
  $employeeTypes = explode(PHP_EOL, $values['employee_type']);
  $employeeTypes = array_filter(array_map('trim', $employeeTypes));
  $employeeTypes = array_unique($employeeTypes);
  $insertvalues = array();
  if(!empty($employeeTypes)){
    foreach($employeeTypes as $delta => $typeName){
      $insertvalues[] = array('company_nid'=>$values['company-nid'],'employee_type'=>$typeName,'cm_type'=>$cm); 
    }
  }
  if(!empty($insertvalues)){
    $insertchunk = array_chunk($insertvalues,50);
    foreach($insertchunk as $index => $chunk){
      $insertQuery = db_insert('m6connect_onboarding_employee_types')->fields(array('company_nid', 'employee_type','cm_type'));
      foreach($chunk as $delta => $data){
        $insertQuery->values($data);
      }      
      $insertQuery->execute();
    }
  }
  /*$data = db_select('m6connect_onboarding_employee_types','et')
    ->fields('et')
    ->condition('company_nid',$company->nid)
    ->orderBy('default_status', 'DESC')
    ->orderBy('id', 'DESC')->execute()->fetchAll();*/

  $onbordingSetting = db_select('m6connect_onboarding_employee_types','et');
  $onbordingSetting->fields('et');
  $onbordingSetting->condition('company_nid',$company->nid);
  if(!empty($cm)){
    $db_or = db_or();
    $db_or->condition('default_status', 1, '=');
    $db_or->condition('cm_type', $cm, '=');
    $onbordingSetting->condition($db_or);
  }  
  $onbordingSetting->orderBy('default_status', 'DESC');
  $onbordingSetting->orderBy('id', 'DESC');
  $data = $onbordingSetting->execute()->fetchAll();
  
  $header = array(
    array('data'=> 'Employee Type','class'=> array('text-center')),
    array('data'=> 'Action','class'=> array('text-center')),  
  );
  $rows =  array();
  foreach($data as $index => $employeeTypedetail){  
   $employeeTypedelete = '';
  if($employeeTypedetail->default_status==0){ 
   $employeeTypedelete =  l('<i class="fa fa-trash-o employee-type-delete-trash" style="font-size:22px;"></i>','delete-employee-type/'.$employeeTypedetail->id.'/nojs', array('html'=> TRUE,'attributes'=> array('class'=> array('use-ajax'))));
   }  
  $rows[] = array(
    'data' => array(
      array('data'=> $employeeTypedetail->employee_type,'class'=> array('text-left')),
    array('data'=> $employeeTypedelete ,'class'=> array('text-center')),
    ),
    'class' => array('employee-type-'.$employeeTypedetail->id),
  );  
  }
  $commands[] = ajax_command_html(".onboarding-emplyee-type-table-data", theme('table', array('header'=> $header,'rows'=>$rows,'empty'=>'No Employee Type Created yet','sticky'=>FALSE,'attributes'=> array('class'=> array('employee-types-table','m6connect-custom-table','table','table-hover','table-bordered','text-center')))));
  $commands[] = ajax_command_invoke('textarea.employee-type-textbox','val',array(''));
  //$commands[] = ajax_command_replace("#onboarding-emplyee-type-data-section", render($form['main-container']['employee_types_data']));
  return array('#type' => 'ajax','#commands' => $commands); 
}

function m6id_delete_employee_type($deleteID , $ajax=NULL){
  global $company;
  $commands = array();
  db_delete('m6connect_onboarding_employee_types')->condition('company_nid',$company->nid)->condition('id',$deleteID)->execute();
  $commands[] = ajax_command_remove('.onboarding-emplyee-type-table-data tr.employee-type-'.$deleteID);
  print ajax_render($commands);
  drupal_exit(0);
  return array('#type' => 'ajax','#commands' => $commands);   
}

///// Start Date: 10-08-2016///////

function onboarding_submitted_message_tab_content(){
 
  global $company;
  $elements = array();
   $header = array(
    'field_m6id' => array('data'=>'M6ID Number', 'class'=> array('text-center')),
  'field_cinfo' => array('data'=>'Contact Information', 'class'=> array('text-center')),
  'field_message' => array('data'=>'Message', 'class'=> array('text-center ob-message-cls')),
     );

  
  $rows = get_submitted_message_process_company_content_rows();  
  if(!empty($rows)){
  $count =1;
    foreach($rows as $requesterCompanyNid => $dataObj){
    $elements['company_fieldset_'.$requesterCompanyNid]['inprocess_data_'.$requesterCompanyNid]= array(
      '#markup' => theme('table', array('header' => $header, 'rows' => $dataObj['row'], 'empty' => 'No M6ID Request Submited/Received yet','attributes'=>array('class'=>array('table','m6connect-custom-table','m6connect-onboarding-in-process-table','table-hover','table-bordered','text-center')))),
    '#prefix' => '<div class="text-center"><h2>SUBMITTED EMPLOYEE</h2></div><div class="onboarding-in-process-data margin-bottom-10">',
    '#suffix' => '</div>'
    );
    $count++;
  }
  }
  
    return $elements;
}
function get_submitted_message_process_company_content_rows(){
  global $company; 
  onboarding_message_ctools_popup_style();
  onboarding_m6id_ctools_popup_style();
  onboarding_submit_employees_dashboard_ctools_popup_style();
  
  $pnode = menu_get_object('node', 1);
  $projectNid =  $pnode->nid;
  $rows = array();
  $result = '';
  $requsteeNid = $company->nid;
  //$projectNid = 31831;
  
  if(!empty($projectNid)){
  $requesterNid =  _get_company_nid_by_group_content($projectNid);
  }
  $query = db_select('m6connect_onboarding_request','mos');
  //$query->leftjoin('m6connect_onboarding_feedback_message','msg','msg.request_id=mos.id AND msg.user_type=1 AND msg.isread=0');
  $query->fields('mos');
  //$query->addExpression('count(msg.id)','message_count');
  $query->condition('mos.requstee_company', $requsteeNid);
  $query->condition('mos.requester_company', $requesterNid);
  $query->condition('mos.requester_project', $projectNid);
  $record = $query->execute()->fetchAll();
  
   //print "<pre>"; print_r($record); die;
    
 foreach($record as $result){ 
     $requsteeuser = $result->requstee_user;
   $requestercompany = $result->requester_company;
     $userDetails = get_user_details_by_user_uid($requsteeuser);
   
   $companyArrayNid = $result->requester_company;
   
   $newMessageIndication = 'icon-comment-read.png';
   if($result->message_count){
      $newMessageIndication = 'icon-comment-unread.png';  
   }
  foreach($userDetails as $dataObj){
   
   //print "<pre>"; print_r($dataObj); 
    $rows[$companyArrayNid]['row'][] = array(
    'data'=>array(
      array('data'=> l($dataObj->field_m6id_value,'/roster-m6id-info/'.$result->id.'/nojs',array('attributes'=> array('class'=>array('ctools-use-modal','ctools-modal-onboarding-m6id-popup-style')))), 'class'=> array('text-center')),
     
      array('data'=>$dataObj->realname.'<br/>'.$dataObj->field_phone_value.'<br/>'.$dataObj->mail, 'class'=> array('text-center')), 
      array('data'=>l(t('<div class="onboarding-msg-icon"><img src="'.$base_url.'/sites/all/themes/m6connect/images/'.$newMessageIndication.'" /></div>'),'onboarding-message/'.$result->requester_company.'/'.$result->requstee_company.'/'.$result->requstee_user.'/'.$result->id.'/nojs', array('html' => TRUE,'attributes'=>array('class'=>array('ctools-use-modal','ctools-modal-onboarding-message-popup-style')))), 'class'=> array('text-center')),
    ),
    'class'=>array('tr-in-process-'.$result->id),
    );
  }
   
 } //main foreach end
 
  return $rows;

  
}
function get_user_details_by_user_uid($userUid) {
  $result = array();
  if(!empty($userUid)){
  $query = db_select ('users', 'u' );
  $query->leftjoin('realname', 'r', 'r.uid=u.uid');
  $query->leftjoin('field_data_field_phone', 'fph', 'fph.entity_id=r.uid AND fph.bundle=:userBundle', array (':userBundle' => 'user'));
  $query->leftjoin('field_data_field_m6id', 'm6i', 'm6i.entity_id=fph.entity_id AND m6i.bundle=:userBundle', array (':userBundle' => 'user'));
  $query->fields ('fph', array ('field_phone_value'));
  $query->fields ('r', array ('realname') );
  $query->fields ('u', array ('mail') );
  $query->fields ('m6i', array ('field_m6id_value') );  
  $query->condition ( 'u.uid', $userUid);
  $result = $query->execute()->fetchAll(); 
  }
  return $result;
}
function onboarding_user_roster_badge($userUid){
  $slider = array();
  $query = db_select('m6connect_onboarding_request','mos');
  $query->join('field_data_field_m6id','m6id','m6id.entity_id=mos.requstee_user AND m6id.bundle=:M6IDBundle', array(':M6IDBundle'=> 'user'));
  $query->join('realname','rname','rname.uid=mos.requstee_user');
  $query->join('node','rnode','rnode.nid=mos.requester_company');
  $query->join('node','snode','snode.nid=mos.requstee_company');
  $query->join('node','pnode','pnode.nid=mos.requester_project');
  $query->leftjoin('m6connect_onboarding_employee_types','oet','oet.id=mos.employee_type');
  $query->leftjoin('field_data_field_user_profile_photo','pf','pf.entity_id=mos.requstee_user AND pf.bundle=:PFBundle', array(':PFBundle'=> 'user'));
  $query->leftjoin('field_data_field_logo','cl','cl.entity_id=mos.requester_company AND cl.entity_type=:CLEntityType',array(':CLEntityType'=>'node'));
  $query->leftjoin('file_managed','pfile','pfile.fid=pf.field_user_profile_photo_fid');
  $query->leftjoin('file_managed','clfile','clfile.fid= cl.field_logo_fid');
  $query->leftjoin('field_data_field_job_titles','job','job.entity_id=mos.requstee_user AND job.bundle=:JobBundle', array(':JobBundle'=> 'user'));
  $query->leftjoin('taxonomy_term_data','jterm','jterm.tid=job.field_job_titles_target_id');
  $query->distinct();
  $query->fields('mos', array('id','requster_status'));
  $query->addExpression('MIN(mos.id)', 'request_id');
  $query->addField('rname','realname','user_name');
  $query->addField('m6id','field_m6id_value','user_m6id');
  $query->addField('rnode','title','requester_company_title');
  $query->addField('snode','title','requestee_company_title');
  $query->addField('pnode','title','requester_project_title');
  $query->addField('jterm','name','user_job_title');
  $query->addField('pfile','uri','user_uri');
  $query->addField('clfile','uri','company_uri');
  $query->addField('oet','employee_type','employee_type_name');
  $query->condition('mos.requstee_user', $userUid); 
  $query->groupBy('requester_company');
  $result  = $query->execute()->fetchAll();
  $statusClasses = array(0=>'bg-warning',1=>'bg-success',3=>'bg-warning',2=>'bg-danger');
  $statusTexts = array(0=>'Pending',1=>'Approved',2=>'Rejected',3=>'Pending');
  $slideNumber = 1;
  foreach($result as $dataObj){
   $field_m6id = $dataObj->user_m6id;
   $employeeType = (!empty($dataObj->employee_type_name))?$dataObj->employee_type_name:'EMPLOYEE';
   $slideStatusClass = $statusClasses[$dataObj->requster_status];
   $statusText  = $statusTexts[$dataObj->requster_status];
   $emptyJobTitle = empty($dataObj->user_job_title)?'&nbsp':'';
   $companyLogo = (!empty($dataObj->company_uri)) ? theme('image_style', array('style_name' => 'pic_50x50', 'path' => $dataObj->company_uri, 'getsize' => TRUE)) : '<img src="/sites/all/themes/m6connect/images/default_company_profile.jpg" style="height:50px; width:50px"/>';
   
   $user_picture = (!empty($dataObj->user_uri))?theme_image_style(array('style_name'=>'custom_thumbnail','path'=>$dataObj->user_uri)):theme('image', array('path' => 'sites/default/files/images_13_0.png','attributes'=> array('style'=>'width:100px;height:100px;')));
   
   $printIcon = l('<i class="fa fa-print" aria-hidden="true"></i>','javascript:void(0);',array('external'=> TRUE,'html'=>TRUE,'attributes' => array('class'=>array('m6id-popup-print-link','m6id-popup-roster-print'),'data-roster'=>$dataObj->request_id)));
   
     $slider[] = '<div class="item" id="non-vertical">
                   <div class="dashboard-block-heading text-center clearfix">
               <div class="m6certified" style="font-size:25px;">
                 <img src="/sites/all/themes/m6connect/images/icon-test-m6.png" style="width: 32px;vertical-align: sub;" />
                 <span class="m6id-number">ID: '.$field_m6id.'</span>
               </div>
               </div>
           
             <div class="dashboard-block-content">
             <span class="m6id-popup-print" style="display:none;">'.$printIcon.'</i></span>
               <div class="padding-10 text-center margin-bottom-10 m6id-info-picture">'.$user_picture.'</div>
               <div class="padding-10 text-center">
               <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($dataObj->user_name).'</strong></div>
               <div class="user-m6iddetail user-m6id-degi">'.$dataObj->user_job_title.'</div>
               <div class="user-m6iddetail user-m6id-cname">'.ucwords($dataObj->requestee_company_title).'</div>
             <!--<div class="user-m6iddetail user-m6id-degi">'.$emptyJobTitle.'</div>-->
               </div>
             </div>
             <div class="dashboard-block-heading dashboard-block-status dashboard-block-content clearfix text-center text-white '.$slideStatusClass.'">
               <div class="user-m6id-status">'.$statusText.'</div>
             </div>
           <div class="clearfix m6id-company-info-section">
             <div class="m6id-company-title-logo-section">
               <span class="m6id-company-info-logo">'.$companyLogo.'</span>
               <span class="m6id-company-info-title">&nbsp;'.ucwords($dataObj->requester_company_title).'</span>
             </div>
           </div>
           <div class="dashboard-block-heading dashboard-block-emp-type clearfix text-center text-white bg-primary">
               <div class="user-m6id-employee-type">'.$employeeType.'</div>
             </div>
           
             </div>';
     
    $slideNumber++;
  }
  return $slider;
}
function user_profile_m6id_credentials_popup($user,$jobtitle){
    
  $credentialdata = array();
  $m6id = $user->field_m6id['und'][0]['value'];
  //$profile_photo = $user->field_user_profile_photo['und'][0]['uri'];
  
  //$user_picture = (!empty($profile_photo))?theme_image_style(array('style_name'=>'user_image_default','path'=>$profile_photo)):theme('image', array('path' => 'sites/default/files/images_13_0.png','attributes'=> array('style'=>'width:100px;height:100px;')));
  
  $m6Nid = get_user_onboarding_nid($user->uid);
  $query = db_select('field_data_field_onbarding_credentials','foc');
  $query->leftjoin('field_data_field_title_name_of_credential','ftnc','ftnc.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('field_data_field_ob_credential_type','fobt','fobt.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('field_data_field_ob_expires','exd','exd.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('field_data_field_ob_attach_image','obi','obi.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('field_data_field_received_presented_by','rpb','rpb.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('file_managed','fm','fm.fid=obi.field_ob_attach_image_fid');
  $query->fields('foc',array('field_onbarding_credentials_value'));
  $query->fields('ftnc',array('field_title_name_of_credential_value'));
  $query->fields('fobt',array('field_ob_credential_type_value'));
  $query->fields('exd',array('field_ob_expires_value'));
  $query->fields('obi',array('field_ob_attach_image_fid'));
  $query->fields('rpb',array('field_received_presented_by_value'));
  $query->addField('fm','uri');
  $query->condition('foc.entity_id',$m6Nid,'=');
  $result = $query->execute()->fetchAll();
  
  foreach($result as $credata){ 
     $string_credential_title = '';
   $string_Presentedby = '';  
     $credential = $credata->field_title_name_of_credential_value;
   $ob_expires = date('m/d/Y', $credata->field_ob_expires_value);
   $Presentedby = $credata->field_received_presented_by_value;
   if(!empty($credential)){        
    $string_credential_title = (strlen($credential) > 30) ? substr($credential, 0, 27) . '...' : $credential;
   }
   if(!empty($Presentedby)){         
    $string_Presentedby = (strlen($Presentedby) > 30) ? substr($Presentedby, 0, 27) . '...' : $Presentedby;
   }
   if(!empty($credata->field_ob_expires_value)){  
    $obexpires = date('Y-m-d', $credata->field_ob_expires_value);  
      $curdate = date('Y-m-d');
    $curdateval =  strtotime($curdate);
    $obexpiresval = strtotime($obexpires);
  
      if($obexpiresval < $curdateval){
      $expclass = 'bg-red';
      }else{
        $expclass = 'bg-success';
      }
   }
   
    $sliderFirstActiveClass ='';
    if(empty($credentialdata)){
    $sliderFirstActiveClass = ' active';  
    }
     $attach_image = $credata->uri;
   $creimage = (!empty($attach_image)) ? theme('image_style', array('style_name' => 'custom_thumbnail', 'path' => $attach_image, 'getsize' => TRUE, 'attributes'=>array('style'=>'height:82px;'))) : '<i class="fa fa-trophy" style="font-size:82px;color:#1d608d;"></i>';

  //<div class="item'.$sliderFirstActiveClass.'">   margin-bottom-10
  $credentialdata[] = '<div class="credentials-slide cycle2-vertical-m6id-slider"><div class="m6id-and-credentials">
  
                   <div class="dashboard-block-heading text-center clearfix">
               <div class="m6certified" style="font-size:25px;">
                 <img src="/sites/all/themes/m6connect/images/icon-test-m6.png" style="width: 32px;vertical-align: sub;" />
                 <span class="m6id-number">ID: '. $m6id.'</span>
               </div> 
               </div>
           <div class="dashboard-block-content">
               <div class="credential-credential text-center"><strong>Credentials</strong></div>
             <div class="padding-10 margin-bottom-10 creimage-m6id-picture m6id-info-picture text-center">'. $creimage.'</div>
             <div class="padding-10 text-center">
               <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($user->realname).'</strong></div>
               <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
               </div>
           </div>
          
            
           <div class="clearfix dashboard-block-status text-white bg-success m6id-company-info-section text-center">
             <div class="">
                <div class="text-center"><strong>'.$string_credential_title.'</strong></div>
             </div>
            </div> 
           <div class="clearfix m6id-company-info-section m6id-company-title-logo-section presentedby-m6id-company">
              <span class="m6id-company-info-title">'.$string_Presentedby.'</span>
          </div>
           <div class="clearfix dashboard-block-emp-type text-white m6id-company-info-section text-center '.$expclass.'">
             <div class="">
               <span class="text-center">Expires: '. $ob_expires.'</span>
             </div>
           </div>
          </div>
        </div>';
        
     } //end main loop for credential
  
   //gfg
   //drupal_add_css(drupal_get_path('module','m6connect_delegate').'/css/style.css');
  
  /* $output .='<div class="item">';
   $output .='<div id="user-m6id-credential" class="carousel vertical slide">';
     $output .=' <div class="carousel-inner" role="listbox">';
     $output .=' '.implode('',$credentialdata);   
     $output .=' </div>';
  
     $output .=' <a class="up carousel-control" href="#user-m6id-credential" role="button" data-slide="prev">
                 <span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
                 <span class="sr-only">Previous</span>
               </a>
            <a class="down carousel-control" href="#user-m6id-credential" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
                 <span class="sr-only">Next</span>
              </a>';
      
  $output .='</div>';
  $output .='</div>';*/
  return $credentialdata;
  
  
}

function get_user_onbarding_credentials_list_by_uid($userProfileUid){ 
  global $user; 
  $output ='';
  if($onBoardingNid = get_user_onboarding_nid($userProfileUid)) {
  $query = db_select('field_data_field_onbarding_credentials','foc');
  $query->leftjoin('field_data_field_title_name_of_credential','ftnc','ftnc.entity_id = foc.field_onbarding_credentials_value');
  $query->leftjoin('field_data_field_ob_credential_type','fobt','fobt.entity_id = foc.field_onbarding_credentials_value');
  $query->fields('foc',array('field_onbarding_credentials_value'));
  $query->fields('ftnc',array('field_title_name_of_credential_value'));
  $query->fields('fobt',array('field_ob_credential_type_value'));
  $query->isNotNull('ftnc.field_title_name_of_credential_value');
  $query->condition('foc.entity_id',$onBoardingNid,'=');
  $result = $query->execute()->fetchAll();
  if($result && !empty($result)){
      $output .= '<div class="block-block-68">';
    foreach($result as $delta => $dataObj){
    $output .= '<div class="pull-outer clearfix margin-bottom-10">';
    $output .=     '<div class="pull-left">';
    $output .=         '<i class="fa fa-trophy"></i>';
    $output .=     '</div>';
    $output .=     '<div class="pull-right"><div class="field-item">';
    $output .=         $dataObj->field_title_name_of_credential_value;
    $output .=     '</div></div>';
    $output .= '</div>';
    }
  
   $output .=     '</div>';
   $output .='<div class="more-link clearfix">';
   if($user->uid == $userProfileUid){
   $output .=  '<div class="pull-left">
            <a class="add-credentials-tab out-side" aria-expanded="true" aria-controls="Add New" data-toggle="tab" href="#addcredentials" role="tab">
            Edit Credentials
          </a>
          </div>';
   }
   $output .= '<div class="pull-right">
            <a class="profile-tab-open out-side" aria-expanded="true" aria-controls="View More" data-toggle="tab" href="#viewmorecres" role="tab">
              View More
          </a>
          </div>
        </div>';
   
  }
  }else if($user->uid == $userProfileUid){
  $output .='<div class="more-link clearfix">
      <div class="pull-left">
        <a class="add-credentials-tab out-side" aria-expanded="true" aria-controls="Add New" data-toggle="tab" href="#addcredentials" role="tab">
        Add New
        </a>
      </div>      
      </div>';
  }
  return $output; 
}
function user_profile_m6id_skillset_popup($user,$jobtitle){
  //$output = ''; 
  $skillsetdata = array();  
  $m6id = $user->field_m6id['und'][0]['value'];
  $profile_photo = $user->field_user_profile_photo['und'][0]['uri'];
  
  $user_picture = (!empty($profile_photo))?theme_image_style(array('style_name'=>'custom_thumbnail','path'=>$profile_photo)):theme('image', array('path' => 'sites/default/files/images_13_0.png','attributes'=> array('style'=>'width:100px;height:94px;')));
  
  $m6Nid = get_user_onboarding_nid($user->uid);
  $skillyear = '';
  $skillstar = '';
  $skillpath = '';
  $string_skill_title = '';
  $skill_titlevalue = '';
  
  $skillquery = db_select('m6connect_user_skill_set', 'ssd');
  $skillquery->fields('ssd',array('Id','skill_uid','skill_title','skill_year','skill_rating'));
  $skillquery->condition('ssd.skill_uid', $user->uid);
  $skillrecord = $skillquery->execute()->fetchAll();                      
  foreach($skillrecord as $skillresult) {
    if($skillresult->skill_year){
    $skillyear = $skillresult->skill_year.'yrs';
  }
  if(!empty($skillresult->skill_title)){
    $string_skill_title = $skillresult->skill_title;
    $skill_titlevalue = (strlen($string_skill_title) > 30) ? substr($string_skill_title, 0, 27) . '...' : $string_skill_title;

   }
   if(!empty($skillresult->skill_rating)){
     $skillData = $skillresult->skill_rating; 
     $skillpath = drupal_get_path('module', 'fivestar');
     $skillstar = theme('fivestar_static', array('rating' => $skillData, 'widget' => array('name' => 'oxygen', 'css' => $skillpath . '/widgets/oxygen/oxygen.css')));
   }   
   
     $sliderFirstActiveClass ='';
    if(empty($skillsetdata)){
    $sliderFirstActiveClass = ' active';  
    }
      
       
      $skillsetdata[] = '<div class="cycle2-vertical-m6id-slider"><div class="m6id-and-credentials"><div class="dashboard-block-heading text-center clearfix">
               <div class="m6certified" style="font-size:25px;">
                 <img src="/sites/all/themes/m6connect/images/icon-test-m6.png" style="width: 32px;vertical-align: sub;" />
                 <span class="m6id-number">ID: '. $m6id.'</span>
               </div> 
               </div>
           <div class="dashboard-block-content">
               <div class="credential-credential text-center"><strong>Skill sets</strong></div>
             <div class="padding-10 margin-bottom-10 creimage-m6id-picture m6id-info-picture text-center">'. $user_picture.'</div>
             <div class="padding-10 text-center">
               <div class="user-m6iddetail user-m6id-title"><strong>'.ucwords($user->realname).'</strong></div>
               <div class="user-m6iddetail user-m6id-degi">'.$jobtitle.'</div>
               </div>
           </div>
          
            
           <div class="clearfix dashboard-block-status text-white bg-success m6id-company-info-section text-center">
             <div class="">
                <div class="text-center"><strong>'.$skill_titlevalue.'</strong></div>
             </div>
            </div> 
           <div class="clearfix m6id-company-info-section m6id-company-title-logo-section presentedby-m6id-company">
              <span class="m6id-company-info-title text-white">'.$skillstar.'</span>
          </div>
           <div class="clearfix dashboard-block-emp-type text-white m6id-company-info-section text-center bg-success">
             <div class="">
               <span class="text-center">Exp: '.$skillyear.'</span>
             </div>
           </div></div></div>';
        
  
     }
   return $skillsetdata;
           
}
//************** For Resend Project Invite company *******/
function onboarding_revoke_project_resend_invitation_callback($type,$projectNode,$ajax= NULL,$resendCompany){
  if($ajax){
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
       'ajax' => TRUE,
       'Project_nid' => $projectNode->nid,
       'Company_nid' =>$resendCompany->nid,
       'type' =>$type,
    );
    $output = ctools_modal_form_wrapper('onboarding_revoke_project_resend_invitation_form', $form_state);
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit();
   }
   //return drupal_get_form('m6drive_upload_new_file_form',$folderid);
     return drupal_get_form('onboarding_revoke_project_resend_invitation_form',$projectNode->nid,$resendCompany->nid);
 } 
 function onboarding_revoke_project_resend_invitation_form($form, &$form_state, $projectnid,$companynid,$type) {

 

  $projectnid = (isset($form_state['Project_nid']) && is_numeric($form_state['Project_nid'])) ? $form_state['Project_nid'] : $projectnid;
  $companynid = (isset($form_state['Company_nid']) && is_numeric($form_state['Company_nid'])) ? $form_state['Company_nid'] : $companynid;
  $type = (isset($form_state['type'])) ? $form_state['type'] : $type;
   
  $form_state['Project_nid']= $projectnid; 
  $form_state['Company_nid']= $companynid;
  $form_state['type']= $type;

 
  $form['description_text'] = array(
     '#type' => 'markup',
     '#prefix' => '<h5 class="text-center"><strong>Would you like to send an Invitation Email Reminder? If so, please add a special note that will be included in email body.</strong>',
      '#suffix' => '</h5>',
  );

  $form['special_message'] = array(
      '#type' => 'textarea',
      '#title' => 'Message',
      '#required' => TRUE,
      //'#wysiwyg' => false,
  );
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('onboarding_revoke_project_resend_invitation_submit'),
    '#value' => 'Send',
    '#prefix' => '<div class="clearfix">',  
    '#suffix' => $closeButton.'</div></div></div>', 
  );  

  return $form;

}
function onboarding_revoke_project_resend_invitation_submit($form, &$form_state){//drup_msg($form_state); 
  
  global $user, $company;
  global $base_url;
  $projectnid = $form_state['Project_nid']; 
  $companynid = $form_state['Company_nid'];
  $type = $form_state['type'];  

  $values  = $form_state['values'];
  $specialmessage = $values['special_message'];
  $mailarray = array();
  $companyusersdetail = _get_user_mail_realname_by_uid($user->uid);
  $companyusersmail = $companyusersdetail['mail'];
  $companyusersfullname = $companyusersdetail['realname'];

   $node = node_load($projectnid);

   $mailSubject = 'M6ID Invitation for the [Onboarding:InvitedManagerTitle] Project';
   $mailBody = '[Onboarding:InvitedManagerName],<p>Your company has been invited to use M6Connect&apos;s M6ID service for the [Onboarding:InvitedManagerTitle] project. This is a requirement of your contract and will simplify the onboarding process for your workers.</p><p>You have been setup as an M6ID Manager for your company. Please sign in to <a href="'.$base_url.'">M6Connect</a> and navigate to M6ID located on the left menu under My Services. M6ID will be used for onboarding your workers (employees and subcontractors, consultants, labor, etc) – it will save us time in safety training and jobsite orientations going forward.</p><p><b>Step 1 - Manage Employees Section</b></p><p>You will need to invite all of your workers to M6ID and assist them in the signup process.</p><p>A. Under the M6ID tab, select the Manage Employees section.</p><p>B. Navigate to the + Invite Employees section and click on it and you will receive a popup to invite your employees.</p><p>C. In the popup, add the employees information or select them from the list by checking the check box(s) on the left side to invite them to project. They will receive an email, text or both depending on the information you provide.</p><p><b>Step 2 - Worker Signup Process</b></p><p>You will need to ensure your workers utilize the following steps for signup.</p><p>A. Login to <a href="'.$base_url.'">M6Connect.com</a> and join your company during the signup process. Your company administrator will need to approve the request to join your company. The administrator will be emailed each time a worker signs up and will need to grant them access.</p><p>B. Workers will need to complete all of the required fields in their M6ID profile. They may do so by clicking on the pencil next to their name underneath the Account Management section in the left hand menu.</p><p><b>Step 3 -  Submit Workers to Project(s)</b></p><p>A. Once workers have signed in and completed their M6ID profile you may then submit them projects.</p><p>B. To submit, navigate to the Project Invitations tab and then select the green Actions button drop Submit Employees.</p><p>C.Select the check boxes in the popup for those employees you wish to submit.</p><p>D.Step 3 must be completed before workers can be admitted on the project location.</p>
<p>Thank you for your efforts in making the onboarding process go smoother. This new process will save your team and ours a significant amount of time during this startup process. If you have questions feel free to contact me '.$companyusersmail.' or you may contact support@m6connect.com.</p><p><b>Special Message</b></p><p>'.$specialmessage.'</p><br/><p>Sincerely,</p><p>'.$companyusersfullname.'</p><p>'.$company->title.'</p>';

  
   $mail_params = array(
    'subject' => $mailSubject,
    'body' => $mailBody,
    //'sender' => $user->mail,
    'language' => language_default(),
    'module' => 'm6connect_misc',
    'key' => 'm6id_mail___m6id_company_email_invite',
    'build' => TRUE,
    );
  if($type=='company'){ 
   if(isset($projectnid) && is_numeric($projectnid)){

       //print "<pre>"; print_r($projectnid); die;
       $comapnyManageres =  _get_company_users_email_by_onboarding_roles($companynid ,array('M6ID Manager','Site Manager','administrator member','company admin'));        
        $sendToManagers = array();
        if(isset($comapnyManageres['Site Manager']) && !empty($comapnyManageres['Site Manager'])){
        $sendToManagers = $comapnyManageres['Site Manager'];
        }else if(isset($comapnyManageres['M6ID Manager']) && !empty($comapnyManageres['M6ID Manager'])){
        $sendToManagers = $comapnyManageres['M6ID Manager'];
        }else if(isset($comapnyManageres['company admin']) && !empty($comapnyManageres['company admin'])){
        $sendToManagers = $comapnyManageres['company admin'];
        }else if(isset($comapnyManageres['administrator member']) && !empty($comapnyManageres['administrator member'])){
        $sendToManagers = $comapnyManageres['administrator member'];  
        }       
        if(!empty($sendToManagers)){
          foreach($sendToManagers as $index => $mgrDetail){  
           //print "<pre>"; print_r($mgrDetail); die; 
           if(!empty($specialmessage)) {        
              $replace = $mail_replace;
              $params = $mail_params;
              $replace['[Onboarding:InvitedManagerName]'] = ucwords($mgrDetail->realname);
              $replace['[Onboarding:InvitedManagerTitle]'] = ucwords($node->title);
              $params['subject'] =  str_replace(array_keys($replace),array_values($replace),$params['subject']);
              $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
              $mailarray[] = drupal_mail($params['module'], $params['key'], $mgrDetail->company_email, $params['language'], $params);
        if (isset($mgrDetail) && is_numeric($mgrDetail->uid) && db_table_exists('m6connect_notification')) {          
        $m6connect_notification = array(
          'type' => 'm6id',
          'event' => 'project_invitations',
          'entity_id' => $projectnid,
          'company_nid' => $companynid,
          'message' => 'resend',
          'request_from' => $user->uid,
          'request_to' => $mgrDetail->uid,
          'status' => 1,
          'timestamp' => time(),
        );
        entity_save('m6connect_notification', (object) $m6connect_notification);
        }
            }
          }
        }
    }
  }else if($type =='email' && isset($_REQUEST['resend_email']) && !empty($_REQUEST['resend_email'])){
            $resendemail = $_REQUEST['resend_email'];

            //print "<pre>"; print_r($resendemail); die;
        if(!empty($specialmessage)) {
            $replace = $mail_replace;
            $params = $mail_params;
            $replace['[Onboarding:InvitedManagerName]'] =  $resendemail;
            $replace['[Onboarding:InvitedManagerTitle]'] = ucwords($node->title);
            $params['subject'] =  str_replace(array_keys($replace),array_values($replace),$params['subject']);
            $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
            $mailarray[] = drupal_mail($params['module'], $params['key'],  $resendemail, $params['language'], $params);
      $MailUser = _get_user_details_by_og_email($resendemail);
      if (isset($MailUser) && is_numeric($MailUser->uid) && db_table_exists('m6connect_notification')) {          
        $m6connect_notification = array(
        'type' => 'm6id',
        'event' => 'project_invitations',
        'entity_id' => $projectnid,
        'company_nid' => $companynid,
        'message' => 'resend',
        'request_from' => $user->uid,
        'request_to' => $MailUser->uid,
        'status' => 1,
        'timestamp' => time(),
        );
        entity_save('m6connect_notification', (object) $m6connect_notification);
      }
          } 

  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
     $form_state['ajax_commands'][] = ctools_modal_command_dismiss(); 
     $form_state['ajax_commands'][] = ctools_ajax_command_reload(); 
  }
 //drup_msg($mailarray);

}
//************** End Resend Project Invite company *******/
function onboarding_remove_invited_workers_employee_callback($inviteId, $ajax=NULL){

  global $company;
  $commands = array();
  if($inviteId && is_numeric($inviteId)){

  //print "<pre>"; print_r($inviteId); die;
  $deleted = db_delete('m6connect_onboarding_project_worker')->condition('id',$inviteId,'=')->condition('requester_company',$company->nid,'=')->execute();
  if($deleted){
    $commands[] = ajax_command_remove('table.m6connect-onboarding-in-process-worker-table tr.invited-workers-'.$inviteId.'-'.$company->nid.'-row ');
  }
  }
  if($ajax){
  print ajax_render($commands);
  drupal_exit(0);  
  }
  drupal_goto(url('onboarding/in-process'));

}
function onboarding_resend_m6idnumber_manage_colleagues_callback($userid, $ajax=NULL){

  if($ajax){
    ctools_include('ajax');
    ctools_include('modal');
    $form_state = array(
       'ajax' => TRUE,
       'user_uid' => $userid,
    );
    $output = ctools_modal_form_wrapper('onboarding_resend_m6idnumber_manage_colleagues_form', $form_state);
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    print ajax_render($output);
    drupal_exit();
   }
   
   return drupal_get_form('onboarding_resend_m6idnumber_manage_colleagues_form',$userid);
} 
function onboarding_resend_m6idnumber_manage_colleagues_form($form, &$form_state, $userid){

  $userid = (isset($form_state['user_uid']) && is_numeric($form_state['user_uid'])) ? $form_state['user_uid'] : $userid;
  $form_state['user_uid']= $userid; 

  if(!empty($userid) && is_numeric($userid)){
      $companyusersdetail = _get_user_mail_realname_by_uid($userid);
      $companyusersmail = $companyusersdetail['mail'];
      $companyusersfullname = $companyusersdetail['realname'];
  }
  /*$form['description_text'] = array(
     '#type' => 'markup',
     '#prefix' => '<div class="clearfix text-center"><h5 class="margin-bottom-10">Employees must complete their M6ID profile. M6ID can be found at the upper left hand corner of employees screen by clicking on the link next to their badge. Would you like to send a reminder email and text to  <strong class="text-blue">'.$companyusersfullname.'</strong></h5><h5 class="margin-bottom-10">This email will provide <strong class="text-blue">'.$companyusersfullname.'</strong> with specific instructions on what they need to do to and how to contact us at <a href="mailto:support@m6connect.com" title="support@m6connect.com">support@m6connect.com</a>',
      '#suffix' => '</h5></div>',
  );*/
  $form['description_text'] = array(
     '#type' => 'markup',
     '#prefix' => '<div class="clearfix text-center"><h5 class="margin-bottom-10">Employees must complete their M6ID profile. M6ID can be found near the upper left side of the screen near the profile picture. Would you like to send a reminder email and text to  <strong class="text-blue">'.$companyusersfullname.'</strong>?</h5><h5 class="margin-bottom-10">This email will provide <strong class="text-blue">'.$companyusersfullname.'</strong> with specific instructions on what they need to do to and how to contact us at, if they need any additional assistance <a href="mailto:support@m6connect.com" title="support@m6connect.com">support@m6connect.com</a>, if they need any additional assistance.',
      '#suffix' => '</h5></div>',
  );

  $form['special_message'] = array(
      '#type' => 'textarea',
      '#title' => 'Message',
      '#required' => TRUE,
      //'#wysiwyg' => false,
  );
  $closeButton = l('<input type="button" class="btn btn primary form-submit" value="Cancel" />', 'javascript:void(0);', array('external' => TRUE, 'html' => TRUE, 'attributes' => array('class' => array('packages-popup-close'), 'onclick' => 'jQuery("span.popups-close").click();')));
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#submit'=> array('onboarding_resend_m6idnumber_manage_colleagues_submit'),
    '#value' => 'Send',
    '#prefix' => '<div class="clearfix">',  
    '#suffix' => $closeButton.'</div></div></div>', 
  );  

  return $form;
  
}
function onboarding_resend_m6idnumber_manage_colleagues_submit($form, &$form_state){

 global $user;
 global $base_url;
  $userid = $form_state['user_uid'];
  $values  = $form_state['values'];
  $specialmessage = $values['special_message'];
  $mailarray = array();

  if(!empty($userid) && is_numeric($userid)){
      $companyusersdetail = _get_user_mail_realname_by_uid($userid);
      $companyusersmail = $companyusersdetail['mail'];
      $companyusersfullname = $companyusersdetail['realname'];
  }

  $m6idManager = user_load($userid);
  $m6idManagerfirstname =  $m6idManager->field_first_name['und'][0]['value'];

  $mailSubject = 'M6ID Information Needed';
  $mailBody = '[Onboarding:InvitedManagerName],<p>You need to complete your <a href="'.$base_url.'">M6Connect.com</a> profile for the upcoming project. '.$companyusersfullname.' is waiting on your information so that it can be submitted to the client.  Please signin as soon as possible and click on the &quot;Complete M6ID&quot; link at the top of the page.<p><p>M6ID speeds up the training and onboarding process for the client projects you work on. In some cases you will be able to skip training in the future because your M6ID will hold all of the specific training and your credentials.</p><p><b>Special Message:</b> '.$specialmessage.'</p><p>Thanks again for your attention to this matter.  Please login now and submit your M6ID.</p><br/>
<p>Thanks,<p><p>'.$user->name.'</p>';


  $mail_params = array(
    'subject' => $mailSubject,
    'body' => $mailBody,
    'language' => language_default(),
    'module' => 'm6connect_misc',
    'key' => 'm6id_mail___m6id_company_email_invite',
    'build' => TRUE,
    );
  if(!empty($specialmessage)){ 
            //echo $specialmessage; die;
            //$useremail = 'devtest4@maansoftwares.com';
            $replace = $mail_replace;
            $params = $mail_params;
            $replace['[Onboarding:InvitedManagerName]'] = ucwords($m6idManagerfirstname);
            $params['subject'] =  str_replace(array_keys($replace),array_values($replace),$params['subject']);
            $params['body'] =  str_replace(array_keys($replace),array_values($replace),$params['body']);
            drupal_mail($params['module'], $params['key'], $companyusersmail, $params['language'], $params); 
  }
  if ((isset($form_state['ajax'])) ? (($form_state['ajax'] == 1) ? true : false) : false) {
     $form_state['ajax_commands'][] = ctools_modal_command_dismiss(); 
     $form_state['ajax_commands'][] = ctools_ajax_command_reload(); 
  }  
}

function onboarding_user_check_m6id_notcompleted($useruid){
  
  $m6Nid = get_user_onboarding_nid($useruid);
  $M6idnode = node_load($m6Nid);
  $uscitizen  = $M6idnode->field_are_you_a_us_citizen['und'][0]['value'];
  $fieldphone = $M6idnode->field_phone['und'][0]['value'];
  $emergencyfirstname = $M6idnode->field_emergency_first_name['und'][0]['value'];
  $emergencylastname = $M6idnode->field_emergency_last_name['und'][0]['value'];
  $emergencyphonenumber = $M6idnode->field_emergency_phone_number['und'][0]['value'];

  if(empty($uscitizen) && empty($fieldphone) && empty($emergencyfirstname) && empty($emergencylastname) && empty($emergencyphonenumber)){
      $output = l('Submit your M6ID','/user/'.$useruid.'/m6id-info',array('attributes'=> array('class'=>array('not-completed'),'style' => 'color:red;')));
      return  $output;
  }else{

  }
}

function _get_update_messenger_message($UserUid, $ConnectWithUserUid, $Message, $service = NULL) {
  $db_and1 = db_and()->condition('mmc.created_by',$UserUid)->condition('mmc.mapping_gid',$ConnectWithUserUid);
  $db_and2 = db_and()->condition('mmc.mapping_gid',$UserUid)->condition('mmc.created_by',$ConnectWithUserUid);
  $db_or = db_or()->condition($db_and1)->condition($db_and2);
  $query = db_select('m6connect_messaging_connect','mmc');
  $query->fields('mmc',array('mapping_id'));
  $query->condition('mmc.mapping_group','user');
  $query->condition($db_or);
  $mappingId = $query->execute()->fetchField();
  if(!$mappingId){
  $mappingId = md5($UserUid.'-'.$ConnectWithUserUid.'-'.time());
  db_insert('m6connect_messaging_connect')->fields(array(
      'mapping_id' => $mappingId,
    'created_by' => $UserUid,
    'mapping_group' => 'user',
    'mapping_gid' => $ConnectWithUserUid,
    'timestamp' => time(),
    'updated' => time(),
  ))->execute();
  $currentTime = time();
  db_merge('m6connect_messaging_connect_users')->key(array('mapping_id'=>$mappingId,'user_uid'=>$UserUid))
     ->fields(array('mapping_id'=>$mappingId,'user_uid'=>$UserUid,'mapping_type'=>'user','status'=>1,'join_timestamp'=>$currentTime))->execute();
    db_merge('m6connect_messaging_connect_users')->key(array('mapping_id'=>$mappingId,'user_uid'=>$ConnectWithUserUid))
     ->fields(array('mapping_id'=>$mappingId,'user_uid'=>$ConnectWithUserUid,'mapping_type'=>'user','status'=>1,'join_timestamp'=>$currentTime))->execute();    
  }
  db_update('m6connect_messaging_connect')->fields(array('updated'=>time()))->condition('mapping_id',$mappingId)->execute();
  
  if(!empty($mappingId) && !empty($Message)){
  $message  = _messenger_message_filter($Message);
  if(!empty($message)){
    $insertId = db_insert('m6connect_messaging_connect_message')->fields(array(
    'mapping_id' => $mappingId,
    'author_uid' => $UserUid,
    'message_text' => $message,
    'attachment' => 0,
    'render_state' =>1,
    'timestamp' => time(),
    'seen_by' => $UserUid,
    ))->execute();
  }
  }
}

function _get_user_m6id_employee_status_by_comid($CompanyNid = NULL){
  global $company;
  if(isset($CompanyNid) && !empty($CompanyNid)){
    $ComNid = $CompanyNid;
  }else{
    $ComNid = $company->nid;
  }
  $dataObjs = array();
  $query = db_select('users','u');
  $query->join('og_membership','og','og.etid=u.uid AND og.entity_type=:entityType',array(':entityType'=>'user'));
  $query->join('m6connect_og_membership_email','ogm','ogm.user_uid=u.uid AND og.gid=ogm.entity_id');
  $query->leftjoin('node','n','n.uid=u.uid AND n.type=:nodeType',array(':nodeType'=>'onboarding'));
  $query->leftjoin('field_data_field_m6id','m6id','m6id.entity_id=u.uid AND m6id.bundle=:userBundle', array(':userBundle'=>'user'));
  $query->leftjoin('field_data_field_first_name','fname','fname.entity_id=u.uid AND fname.bundle=:userBundle', array(':userBundle'=>'user'));
  $query->leftjoin('field_data_field_last_name','lname','lname.entity_id=u.uid AND lname.bundle=:userBundle', array(':userBundle'=>'user'));
  $query->leftjoin('m6connect_onboarding_colleagues_status','ous','ous.user_uid=u.uid AND ous.company_nid=:companyNid',array(':companyNid'=>$ComNid));
  $query->fields('u',array('uid')); //,'mail'
  //$query->addField('ogm','company_email','mail');
  //$query->fields('n',array('nid'));
  //$query->fields('og',array('gid'));
  //$query->fields('m6id',array('field_m6id_value'));
  //$query->fields('fname',array('field_first_name_value'));
  //$query->fields('lname',array('field_last_name_value'));
  $query->fields('ous',array('status'));
  $query->condition('og.gid',$ComNid,'=');
  $query->condition('og.state',1,'=');
  $result = $query->execute()->fetchAllKeyed();
  return $result;
}